{"version":3,"sources":["../../src/app/components/atoms/types/universal.types.ts","../../src/app/providers/AuthProvider.tsx","../../src/app/providers/ThemeProvider.tsx","../../src/app/providers/ToastProvider.tsx","../../src/app/providers/LoadingProvider.tsx","../../src/app/providers/ModalProvider.tsx","../../src/app/providers/SettingsProvider.tsx","../../src/app/environment/EnvironmentProvider.tsx","../../src/app/providers/useCSSVariables.ts","../../src/app/components/atoms/Button/Button.styles.ts","../../src/app/components/atoms/Button/Button.utils.tsx","../../src/app/components/atoms/ProgressIndicator/ProgressIndicator.styles.ts","../../src/app/components/atoms/ProgressIndicator/ProgressIndicator.tsx","../../src/app/components/atoms/Button/hooks/useAsyncClick.ts","../../src/app/components/atoms/Button/hooks/useButtonHover.ts","../../src/app/components/atoms/Button/animations/ParallaxTiltWrapper.tsx","../../src/app/components/atoms/Button/animations/TypewriterText.tsx","../../src/app/components/atoms/Button/Button.tsx","../../src/app/components/atoms/Badge/Badge.styles.ts","../../src/app/components/atoms/Icon/Icon.styles.ts","../../src/app/components/atoms/Icon/iconRegistry.ts","../../src/app/components/atoms/Icon/Icon.utils.ts","../../src/app/components/atoms/Icon/components/IconAnimations.tsx","../../src/app/components/atoms/Icon/Icon.tsx","../../src/app/components/atoms/Badge/Badge.utils.tsx","../../src/app/components/atoms/Badge/Badge.tsx","../../src/app/components/atoms/Card/Card.styles.ts","../../src/app/components/atoms/Card/Card.utils.tsx","../../src/app/components/atoms/Card/Card.tsx","../../src/app/components/atoms/CheckBox/CheckBox.styles.ts","../../src/app/components/atoms/CheckBox/CheckBox.utils.tsx","../../src/app/components/atoms/CheckBox/CheckBox.tsx","../../src/app/components/atoms/CodeBlock/CodeBlock.styles.ts","../../src/app/components/atoms/CodeBlock/CodeBlock.utils.tsx","../../src/app/components/atoms/CodeBlock/CodeBlock.syntax.tsx","../../src/app/components/atoms/CodeBlock/CodeBlock.tsx","../../src/app/components/atoms/Divider/Divider.styles.ts","../../src/app/components/atoms/Divider/Divider.utils.tsx","../../src/app/components/atoms/Divider/Divider.tsx","../../src/app/components/atoms/Dropdown/Dropdown.styles.ts","../../src/app/components/atoms/Dropdown/Dropdown.utils.tsx","../../src/app/components/atoms/Dropdown/Dropdown.tsx","../../src/app/components/atoms/Notification/Notification.styles.ts","../../src/app/components/atoms/Notification/Notification.utils.tsx","../../src/app/components/atoms/Notification/Notification.tsx","../../src/app/components/atoms/Search/Search.styles.ts","../../src/app/components/atoms/Search/Search.utils.tsx","../../src/app/components/atoms/Search/Search.tsx","../../src/app/components/atoms/FilePicker/FilePicker.styles.ts","../../src/app/components/atoms/FilePicker/FilePicker.utils.tsx","../../src/app/components/atoms/FilePicker/FilePicker.tsx","../../src/app/components/atoms/RadioButton/RadioButton.styles.ts","../../src/app/components/atoms/RadioButton/RadioButton.utils.tsx","../../src/app/components/atoms/RadioButton/RadioButton.tsx","../../src/app/components/atoms/Scrollbar/Scrollbar.styles.ts","../../src/app/components/atoms/Scrollbar/Scrollbar.utils.tsx","../../src/app/components/atoms/Scrollbar/Scrollbar.tsx","../../src/app/components/atoms/Toggle/Toggle.styles.ts","../../src/app/components/atoms/Toggle/Toggle.tsx","../../src/app/components/atoms/SegmentedControl/SegmentedControl.styles.ts","../../src/app/components/atoms/SegmentedControl/SegmentedControl.utils.tsx","../../src/app/components/atoms/SegmentedControl/SegmentedControl.tsx","../../src/app/components/atoms/Slider/Slider.styles.ts","../../src/app/components/atoms/Slider/Slider.utils.ts","../../src/app/components/atoms/Slider/Slider.tsx","../../src/app/components/atoms/TextArea/TextArea.styles.ts","../../src/app/components/atoms/TextArea/TextArea.utils.ts","../../src/app/components/atoms/TextArea/TextArea.tsx","../../src/app/components/atoms/FallingLeaves/FallingLeaves.tsx"],"names":["createContext","useContext","React","getColorVariables","getShapeStyles","getVariantStyles","forwardRef","useState","useEffect","useMemo","circularStyles","svgStyles","textStyles","useCallback","isValidElement","Tilt","cloneElement","getSizeStyles","getIconSize","createBaseStyles","getIconOnlyStyles","IconoirIcons","renderIcon","getIsometricStyles","useRef","useLayoutEffect","colors","_a","getFocusStyles","option","handleKeyDown","createAccessibilityProps","createPortal","selectableOptions","baseStyles","getSizeConfig","getDescriptionStyles","color","getIconColor","getLoadingStyles","useFocusManagement","getIconStyles","useImperativeHandle","getHiddenInputStyles","getLabelStyles","useId","_b","orientation","getLabelContainerStyles","isSelected","getIsometricContainerStyles","getIsometricShadowStyles","getDefaultSize","getDefaultVariant","getAriaAttributes","getHelperTextStyles"],"mappings":"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","file":"atoms.js","sourcesContent":["import React from 'react';\r\n\r\n// Universal color system used across all atomic components\r\nexport type UniversalColor = 'primary' | 'secondary' | 'success' | 'warning' | 'destructive' | 'info' | 'custom';\r\n\r\n// Universal variant system used across all atomic components  \r\nexport type UniversalVariant = 'solid' | 'ghost' | 'outline' | 'glassmorphic' | 'invisible';\r\n\r\n// Universal size system used across all atomic components\r\nexport type UniversalSize = 'xs' | 'sm' | 'md' | 'lg' | 'xl';\r\n\r\n// Universal shape system used across all atomic components\r\nexport type UniversalShape = 'sharp' | 'round' | 'pill';\r\n\r\n// Universal animation mode system used across all atomic components\r\nexport type UniversalAnimationMode = 'none' | 'default' | 'parallax' | 'typewriter' | 'isometric';\r\n\r\n// Universal animation modes array (for multiple selection)\r\nexport type UniversalAnimationModes = UniversalAnimationMode[];\r\n\r\n// Base universal props that all atomic components share\r\nexport interface UniversalAtomicProps {\r\n  /**\r\n   * Color scheme of the component\r\n   * @default 'primary'\r\n   */\r\n  color?: UniversalColor;\r\n  \r\n  /**\r\n   * Custom color when color is set to 'custom'\r\n   */\r\n  customColor?: string;\r\n  \r\n  /**\r\n   * Visual style variant of the component\r\n   * @default 'solid'\r\n   */\r\n  variant?: UniversalVariant;\r\n  \r\n  /**\r\n   * Shape of the component\r\n   * @default 'round'\r\n   */\r\n  shape?: UniversalShape;\r\n  \r\n  /**\r\n   * Size of the component\r\n   * @default 'md'\r\n   */\r\n  size?: UniversalSize;\r\n  \r\n  /**\r\n   * Whether the component is disabled\r\n   * @default false\r\n   */\r\n  disabled?: boolean;\r\n  \r\n  /**\r\n   * Whether to show loading state\r\n   * @default false\r\n   */\r\n  loading?: boolean;\r\n  \r\n  /**\r\n   * Loading key for global loading state management\r\n   */\r\n  loadingKey?: string;\r\n  \r\n  /**\r\n   * Custom width for the component\r\n   */\r\n  width?: string | number;\r\n  \r\n  /**\r\n   * Custom height for the component\r\n   */\r\n  height?: string | number;\r\n  \r\n  /**\r\n   * Additional CSS class names\r\n   */\r\n  className?: string;\r\n  \r\n  /**\r\n   * Additional inline styles\r\n   */\r\n  style?: React.CSSProperties;\r\n  \r\n  /**\r\n   * Unique identifier for the component\r\n   */\r\n  id?: string;\r\n  \r\n  /**\r\n   * Test identifier for automated testing\r\n   */\r\n  'data-testid'?: string;\r\n  \r\n  /**\r\n   * Whether to enable animations\r\n   * @default true\r\n   */\r\n  animate?: boolean;\r\n  \r\n  /**\r\n   * Animation mode to use (single mode)\r\n   * @default 'default'\r\n   */\r\n  animationMode?: UniversalAnimationMode;\r\n  \r\n  /**\r\n   * Multiple animation modes to use simultaneously\r\n   */\r\n  animationModes?: UniversalAnimationModes;\r\n  \r\n  /**\r\n   * Animation duration override in milliseconds\r\n   */\r\n  animationDuration?: number;\r\n  \r\n  // Accessibility props commonly used across components\r\n  /**\r\n   * Accessible label for the component\r\n   */\r\n  'aria-label'?: string;\r\n  \r\n  /**\r\n   * References to elements that describe the component\r\n   */\r\n  'aria-describedby'?: string;\r\n  \r\n  /**\r\n   * References to elements that label the component\r\n   */\r\n  'aria-labelledby'?: string;\r\n  \r\n  /**\r\n   * Whether the component is required\r\n   */\r\n  'aria-required'?: boolean;\r\n  \r\n  /**\r\n   * Whether the component is invalid\r\n   */\r\n  'aria-invalid'?: boolean;\r\n  \r\n  /**\r\n   * Additional ARIA attributes\r\n   */\r\n  'aria-expanded'?: boolean;\r\n  'aria-haspopup'?: boolean | 'false' | 'true' | 'menu' | 'listbox' | 'tree' | 'grid' | 'dialog';\r\n  'aria-hidden'?: boolean;\r\n  'aria-live'?: 'off' | 'assertive' | 'polite';\r\n  \r\n  // Legacy support for deprecated props (will be removed in future versions)\r\n  /**\r\n   * @deprecated Use shape prop instead\r\n   */\r\n  rounded?: boolean;\r\n}\r\n\r\n// Extended universal props for interactive components (buttons, inputs, etc.)\r\nexport interface UniversalInteractiveProps extends UniversalAtomicProps {\r\n  /**\r\n   * Whether the component is focused\r\n   */\r\n  focused?: boolean;\r\n  \r\n  /**\r\n   * Whether the component is active/pressed\r\n   */\r\n  active?: boolean;\r\n  \r\n  /**\r\n   * Whether the component should take full width\r\n   */\r\n  fullWidth?: boolean;\r\n  \r\n  /**\r\n   * Tab index for keyboard navigation\r\n   */\r\n  tabIndex?: number;\r\n  \r\n  /**\r\n   * Keyboard event handlers\r\n   */\r\n  onKeyDown?: (event: React.KeyboardEvent) => void;\r\n  onKeyUp?: (event: React.KeyboardEvent) => void;\r\n  onKeyPress?: (event: React.KeyboardEvent) => void;\r\n  \r\n  /**\r\n   * Focus event handlers\r\n   */\r\n  onFocus?: (event: React.FocusEvent) => void;\r\n  onBlur?: (event: React.FocusEvent) => void;\r\n  \r\n  /**\r\n   * Mouse event handlers\r\n   */\r\n  onMouseEnter?: (event: React.MouseEvent) => void;\r\n  onMouseLeave?: (event: React.MouseEvent) => void;\r\n  onMouseDown?: (event: React.MouseEvent) => void;\r\n  onMouseUp?: (event: React.MouseEvent) => void;\r\n  \r\n  /**\r\n   * Touch event handlers\r\n   */\r\n  onTouchStart?: (event: React.TouchEvent) => void;\r\n  onTouchEnd?: (event: React.TouchEvent) => void;\r\n  onTouchMove?: (event: React.TouchEvent) => void;\r\n  onTouchCancel?: (event: React.TouchEvent) => void;\r\n}\r\n\r\n// Universal props for form elements\r\nexport interface UniversalFormProps extends UniversalInteractiveProps {\r\n  /**\r\n   * Form name attribute\r\n   */\r\n  name?: string;\r\n  \r\n  /**\r\n   * Form value\r\n   */\r\n  value?: any;\r\n  \r\n  /**\r\n   * Default value for uncontrolled components\r\n   */\r\n  defaultValue?: any;\r\n  \r\n  /**\r\n   * Whether the field is required\r\n   */\r\n  required?: boolean;\r\n  \r\n  /**\r\n   * Whether the field is readonly\r\n   */\r\n  readOnly?: boolean;\r\n  \r\n  /**\r\n   * Placeholder text\r\n   */\r\n  placeholder?: string;\r\n  \r\n  /**\r\n   * Helper text displayed below the field\r\n   */\r\n  helperText?: string;\r\n  \r\n  /**\r\n   * Error text (overrides helperText when present)\r\n   */\r\n  errorText?: string;\r\n  \r\n  /**\r\n   * Whether the field has an error state\r\n   */\r\n  error?: boolean;\r\n  \r\n  /**\r\n   * Label text for the field\r\n   */\r\n  label?: string;\r\n  \r\n  /**\r\n   * Change event handler\r\n   */\r\n  onChange?: (value: any, event?: React.ChangeEvent) => void;\r\n  \r\n  /**\r\n   * Input event handler\r\n   */\r\n  onInput?: (event: React.FormEvent) => void;\r\n  \r\n  /**\r\n   * Form validation\r\n   */\r\n  validate?: (value: any) => string | null;\r\n  \r\n  /**\r\n   * Auto-complete attribute\r\n   */\r\n  autoComplete?: string;\r\n  \r\n  /**\r\n   * Auto-focus on mount\r\n   */\r\n  autoFocus?: boolean;\r\n}\r\n\r\n// Universal props for container components\r\nexport interface UniversalContainerProps extends UniversalAtomicProps {\r\n  /**\r\n   * Child elements\r\n   */\r\n  children?: React.ReactNode;\r\n  \r\n  /**\r\n   * Padding around the content\r\n   */\r\n  padding?: UniversalSize | 'none';\r\n  \r\n  /**\r\n   * Margin around the component\r\n   */\r\n  margin?: UniversalSize | 'none';\r\n  \r\n  /**\r\n   * Gap between child elements\r\n   */\r\n  gap?: UniversalSize | 'none';\r\n  \r\n  /**\r\n   * Whether the container is clickable\r\n   */\r\n  clickable?: boolean;\r\n  \r\n  /**\r\n   * Click event handler\r\n   */\r\n  onClick?: (event: React.MouseEvent) => void;\r\n  \r\n  /**\r\n   * Async click handler\r\n   */\r\n  onAsyncClick?: () => Promise<void>;\r\n  \r\n  /**\r\n   * Maximum width\r\n   */\r\n  maxWidth?: string | number;\r\n  \r\n  /**\r\n   * Maximum height  \r\n   */\r\n  maxHeight?: string | number;\r\n  \r\n  /**\r\n   * Minimum width\r\n   */\r\n  minWidth?: string | number;\r\n  \r\n  /**\r\n   * Minimum height\r\n   */\r\n  minHeight?: string | number;\r\n  \r\n  /**\r\n   * Overflow behavior\r\n   */\r\n  overflow?: 'visible' | 'hidden' | 'scroll' | 'auto';\r\n  \r\n  /**\r\n   * Overflow behavior for x-axis\r\n   */\r\n  overflowX?: 'visible' | 'hidden' | 'scroll' | 'auto';\r\n  \r\n  /**\r\n   * Overflow behavior for y-axis\r\n   */\r\n  overflowY?: 'visible' | 'hidden' | 'scroll' | 'auto';\r\n  \r\n  /**\r\n   * Position of the container\r\n   */\r\n  position?: 'static' | 'relative' | 'absolute' | 'fixed' | 'sticky';\r\n  \r\n  /**\r\n   * Z-index for stacking\r\n   */\r\n  zIndex?: number;\r\n}\r\n\r\n// Utility type to merge universal props with component-specific props\r\nexport type WithUniversalProps<T extends Record<string, any>> = UniversalAtomicProps & T;\r\n\r\n// Utility type for interactive components\r\nexport type WithInteractiveProps<T extends Record<string, any>> = UniversalInteractiveProps & T;\r\n\r\n// Utility type for form components\r\nexport type WithFormProps<T extends Record<string, any>> = UniversalFormProps & T;\r\n\r\n// Utility type for container components\r\nexport type WithContainerProps<T extends Record<string, any>> = UniversalContainerProps & T;\r\n\r\n// Type guards for component prop types\r\nexport const isUniversalColor = (value: any): value is UniversalColor => {\r\n  return ['primary', 'secondary', 'success', 'warning', 'destructive', 'info', 'custom'].includes(value);\r\n};\r\n\r\nexport const isUniversalVariant = (value: any): value is UniversalVariant => {\r\n  return ['solid', 'ghost', 'outline', 'glassmorphic'].includes(value);\r\n};\r\n\r\nexport const isUniversalSize = (value: any): value is UniversalSize => {\r\n  return ['xs', 'sm', 'md', 'lg', 'xl'].includes(value);\r\n};\r\n\r\nexport const isUniversalShape = (value: any): value is UniversalShape => {\r\n  return ['sharp', 'round', 'pill'].includes(value);\r\n};\r\n\r\nexport const isUniversalAnimationMode = (value: any): value is UniversalAnimationMode => {\r\n  return ['none', 'default', 'parallax', 'typewriter', 'isometric'].includes(value);\r\n};\r\n\r\nexport const isUniversalAnimationModes = (value: any): value is UniversalAnimationModes => {\r\n  return Array.isArray(value) && value.every(isUniversalAnimationMode);\r\n};\r\n\r\n// Default values for universal props\r\nexport const UNIVERSAL_DEFAULTS = {\r\n  color: 'primary' as UniversalColor,\r\n  variant: 'outline' as UniversalVariant,\r\n  size: 'md' as UniversalSize,\r\n  shape: 'round' as UniversalShape,\r\n  disabled: false,\r\n  loading: false,\r\n  animate: true,\r\n  animationMode: 'default' as UniversalAnimationMode,\r\n} as const;\r\n\r\n// Helper function to extract universal props from a props object\r\nexport const extractUniversalProps = <T extends UniversalAtomicProps>(\r\n  props: T\r\n): [UniversalAtomicProps, Omit<T, keyof UniversalAtomicProps>] => {\r\n  const {\r\n    color,\r\n    customColor,\r\n    variant,\r\n    shape,\r\n    size,\r\n    disabled,\r\n    loading,\r\n    loadingKey,\r\n    width,\r\n    height,\r\n    className,\r\n    style,\r\n    id,\r\n    'data-testid': dataTestId,\r\n    animate,\r\n    animationMode,\r\n    animationModes,\r\n    animationDuration,\r\n    'aria-label': ariaLabel,\r\n    'aria-describedby': ariaDescribedBy,\r\n    'aria-labelledby': ariaLabelledBy,\r\n    'aria-required': ariaRequired,\r\n    'aria-invalid': ariaInvalid,\r\n    'aria-expanded': ariaExpanded,\r\n    'aria-haspopup': ariaHasPopup,\r\n    'aria-hidden': ariaHidden,\r\n    'aria-live': ariaLive,\r\n    rounded,\r\n    ...rest\r\n  } = props;\r\n\r\n  const universalProps: UniversalAtomicProps = {\r\n    color,\r\n    customColor,\r\n    variant,\r\n    shape,\r\n    size,\r\n    disabled,\r\n    loading,\r\n    loadingKey,\r\n    width,\r\n    height,\r\n    className,\r\n    style,\r\n    id,\r\n    'data-testid': dataTestId,\r\n    animate,\r\n    animationMode,\r\n    animationModes,\r\n    animationDuration,\r\n    'aria-label': ariaLabel,\r\n    'aria-describedby': ariaDescribedBy,\r\n    'aria-labelledby': ariaLabelledBy,\r\n    'aria-required': ariaRequired,\r\n    'aria-invalid': ariaInvalid,\r\n    'aria-expanded': ariaExpanded,\r\n    'aria-haspopup': ariaHasPopup,\r\n    'aria-hidden': ariaHidden,\r\n    'aria-live': ariaLive,\r\n    rounded,\r\n  };\r\n\r\n  return [universalProps, rest as Omit<T, keyof UniversalAtomicProps>];\r\n};\r\n\r\n// Helper function to extract form props from a props object\r\nexport const extractFormProps = <T extends UniversalFormProps>(\r\n  props: T\r\n): [UniversalFormProps, Omit<T, keyof UniversalFormProps>] => {\r\n  const {\r\n    // Universal atomic props\r\n    color,\r\n    customColor,\r\n    variant,\r\n    shape,\r\n    size,\r\n    disabled,\r\n    loading,\r\n    loadingKey,\r\n    width,\r\n    height,\r\n    className,\r\n    style,\r\n    id,\r\n    'data-testid': dataTestId,\r\n    animate,\r\n    animationMode,\r\n    animationModes,\r\n    animationDuration,\r\n    'aria-label': ariaLabel,\r\n    'aria-describedby': ariaDescribedBy,\r\n    'aria-labelledby': ariaLabelledBy,\r\n    'aria-required': ariaRequired,\r\n    'aria-invalid': ariaInvalid,\r\n    'aria-expanded': ariaExpanded,\r\n    'aria-haspopup': ariaHasPopup,\r\n    'aria-hidden': ariaHidden,\r\n    'aria-live': ariaLive,\r\n    rounded,\r\n    // Universal interactive props\r\n    focused,\r\n    active,\r\n    fullWidth,\r\n    tabIndex,\r\n    onKeyDown,\r\n    onKeyUp,\r\n    onKeyPress,\r\n    onFocus,\r\n    onBlur,\r\n    onMouseEnter,\r\n    onMouseLeave,\r\n    onMouseDown,\r\n    onMouseUp,\r\n    onTouchStart,\r\n    onTouchEnd,\r\n    onTouchMove,\r\n    onTouchCancel,\r\n    // Universal form props\r\n    name,\r\n    value,\r\n    defaultValue,\r\n    required,\r\n    readOnly,\r\n    placeholder,\r\n    helperText,\r\n    errorText,\r\n    error,\r\n    label,\r\n    onChange,\r\n    onInput,\r\n    validate,\r\n    autoComplete,\r\n    autoFocus,\r\n    ...rest\r\n  } = props;\r\n\r\n  const formProps: UniversalFormProps = {\r\n    color,\r\n    customColor,\r\n    variant,\r\n    shape,\r\n    size,\r\n    disabled,\r\n    loading,\r\n    loadingKey,\r\n    width,\r\n    height,\r\n    className,\r\n    style,\r\n    id,\r\n    'data-testid': dataTestId,\r\n    animate,\r\n    animationMode,\r\n    animationModes,\r\n    animationDuration,\r\n    'aria-label': ariaLabel,\r\n    'aria-describedby': ariaDescribedBy,\r\n    'aria-labelledby': ariaLabelledBy,\r\n    'aria-required': ariaRequired,\r\n    'aria-invalid': ariaInvalid,\r\n    'aria-expanded': ariaExpanded,\r\n    'aria-haspopup': ariaHasPopup,\r\n    'aria-hidden': ariaHidden,\r\n    'aria-live': ariaLive,\r\n    rounded,\r\n    focused,\r\n    active,\r\n    fullWidth,\r\n    tabIndex,\r\n    onKeyDown,\r\n    onKeyUp,\r\n    onKeyPress,\r\n    onFocus,\r\n    onBlur,\r\n    onMouseEnter,\r\n    onMouseLeave,\r\n    onMouseDown,\r\n    onMouseUp,\r\n    onTouchStart,\r\n    onTouchEnd,\r\n    onTouchMove,\r\n    onTouchCancel,\r\n    name,\r\n    value,\r\n    defaultValue,\r\n    required,\r\n    readOnly,\r\n    placeholder,\r\n    helperText,\r\n    errorText,\r\n    error,\r\n    label,\r\n    onChange,\r\n    onInput,\r\n    validate,\r\n    autoComplete,\r\n    autoFocus,\r\n  };\r\n\r\n  return [formProps, rest as Omit<T, keyof UniversalFormProps>];\r\n};\r\n\r\n// Helper function to extract container props from a props object\r\nexport const extractContainerProps = <T extends UniversalContainerProps>(\r\n  props: T\r\n): [UniversalContainerProps, Omit<T, keyof UniversalContainerProps>] => {\r\n  const {\r\n    // Universal atomic props\r\n    color,\r\n    customColor,\r\n    variant,\r\n    shape,\r\n    size,\r\n    disabled,\r\n    loading,\r\n    loadingKey,\r\n    width,\r\n    height,\r\n    className,\r\n    style,\r\n    id,\r\n    'data-testid': dataTestId,\r\n    animate,\r\n    animationMode,\r\n    animationModes,\r\n    animationDuration,\r\n    'aria-label': ariaLabel,\r\n    'aria-describedby': ariaDescribedBy,\r\n    'aria-labelledby': ariaLabelledBy,\r\n    'aria-required': ariaRequired,\r\n    'aria-invalid': ariaInvalid,\r\n    'aria-expanded': ariaExpanded,\r\n    'aria-haspopup': ariaHasPopup,\r\n    'aria-hidden': ariaHidden,\r\n    'aria-live': ariaLive,\r\n    rounded,\r\n    // Universal container props\r\n    children,\r\n    padding,\r\n    margin,\r\n    gap,\r\n    clickable,\r\n    onClick,\r\n    onAsyncClick,\r\n    maxWidth,\r\n    maxHeight,\r\n    minWidth,\r\n    minHeight,\r\n    overflow,\r\n    overflowX,\r\n    overflowY,\r\n    position,\r\n    zIndex,\r\n    ...rest\r\n  } = props;\r\n\r\n  const containerProps: UniversalContainerProps = {\r\n    color,\r\n    customColor,\r\n    variant,\r\n    shape,\r\n    size,\r\n    disabled,\r\n    loading,\r\n    loadingKey,\r\n    width,\r\n    height,\r\n    className,\r\n    style,\r\n    id,\r\n    'data-testid': dataTestId,\r\n    animate,\r\n    animationMode,\r\n    animationModes,\r\n    animationDuration,\r\n    'aria-label': ariaLabel,\r\n    'aria-describedby': ariaDescribedBy,\r\n    'aria-labelledby': ariaLabelledBy,\r\n    'aria-required': ariaRequired,\r\n    'aria-invalid': ariaInvalid,\r\n    'aria-expanded': ariaExpanded,\r\n    'aria-haspopup': ariaHasPopup,\r\n    'aria-hidden': ariaHidden,\r\n    'aria-live': ariaLive,\r\n    rounded,\r\n    children,\r\n    padding,\r\n    margin,\r\n    gap,\r\n    clickable,\r\n    onClick,\r\n    onAsyncClick,\r\n    maxWidth,\r\n    maxHeight,\r\n    minWidth,\r\n    minHeight,\r\n    overflow,\r\n    overflowX,\r\n    overflowY,\r\n    position,\r\n    zIndex,\r\n  };\r\n\r\n  return [containerProps, rest as Omit<T, keyof UniversalContainerProps>];\r\n};\r\n\r\n// Helper function to extract interactive props from a props object\r\nexport const extractInteractiveProps = <T extends UniversalInteractiveProps>(\r\n  props: T\r\n): [UniversalInteractiveProps, Omit<T, keyof UniversalInteractiveProps>] => {\r\n  const {\r\n    // Universal atomic props\r\n    color,\r\n    customColor,\r\n    variant,\r\n    shape,\r\n    size,\r\n    disabled,\r\n    loading,\r\n    loadingKey,\r\n    width,\r\n    height,\r\n    className,\r\n    style,\r\n    id,\r\n    'data-testid': dataTestId,\r\n    animate,\r\n    animationMode,\r\n    animationModes,\r\n    animationDuration,\r\n    'aria-label': ariaLabel,\r\n    'aria-describedby': ariaDescribedBy,\r\n    'aria-labelledby': ariaLabelledBy,\r\n    'aria-required': ariaRequired,\r\n    'aria-invalid': ariaInvalid,\r\n    'aria-expanded': ariaExpanded,\r\n    'aria-haspopup': ariaHasPopup,\r\n    'aria-hidden': ariaHidden,\r\n    'aria-live': ariaLive,\r\n    rounded,\r\n    // Universal interactive props\r\n    focused,\r\n    active,\r\n    fullWidth,\r\n    tabIndex,\r\n    onKeyDown,\r\n    onKeyUp,\r\n    onKeyPress,\r\n    onFocus,\r\n    onBlur,\r\n    onMouseEnter,\r\n    onMouseLeave,\r\n    onMouseDown,\r\n    onMouseUp,\r\n    onTouchStart,\r\n    onTouchEnd,\r\n    onTouchMove,\r\n    onTouchCancel,\r\n    ...rest\r\n  } = props;\r\n\r\n  const interactiveProps: UniversalInteractiveProps = {\r\n    color,\r\n    customColor,\r\n    variant,\r\n    shape,\r\n    size,\r\n    disabled,\r\n    loading,\r\n    loadingKey,\r\n    width,\r\n    height,\r\n    className,\r\n    style,\r\n    id,\r\n    'data-testid': dataTestId,\r\n    animate,\r\n    animationMode,\r\n    animationModes,\r\n    animationDuration,\r\n    'aria-label': ariaLabel,\r\n    'aria-describedby': ariaDescribedBy,\r\n    'aria-labelledby': ariaLabelledBy,\r\n    'aria-required': ariaRequired,\r\n    'aria-invalid': ariaInvalid,\r\n    'aria-expanded': ariaExpanded,\r\n    'aria-haspopup': ariaHasPopup,\r\n    'aria-hidden': ariaHidden,\r\n    'aria-live': ariaLive,\r\n    rounded,\r\n    focused,\r\n    active,\r\n    fullWidth,\r\n    tabIndex,\r\n    onKeyDown,\r\n    onKeyUp,\r\n    onKeyPress,\r\n    onFocus,\r\n    onBlur,\r\n    onMouseEnter,\r\n    onMouseLeave,\r\n    onMouseDown,\r\n    onMouseUp,\r\n    onTouchStart,\r\n    onTouchEnd,\r\n    onTouchMove,\r\n    onTouchCancel,\r\n  };\r\n\r\n  return [interactiveProps, rest as Omit<T, keyof UniversalInteractiveProps>];\r\n};","'use client';\r\n\r\nimport React, { createContext, useContext, useEffect, useState, useCallback } from 'react';\r\n\r\ninterface User {\r\n  id: string;\r\n  email: string;\r\n  name: string;\r\n  avatar?: string;\r\n  role?: string;\r\n  permissions?: string[];\r\n}\r\n\r\ninterface AuthContextType {\r\n  user: User | null;\r\n  isLoading: boolean;\r\n  isAuthenticated: boolean;\r\n  login: (email: string, password: string) => Promise<void>;\r\n  logout: () => Promise<void>;\r\n  register: (email: string, password: string, name: string) => Promise<void>;\r\n  updateUser: (userData: Partial<User>) => void;\r\n  refreshAuth: () => Promise<void>;\r\n}\r\n\r\nconst AuthContext = createContext<AuthContextType | undefined>(undefined);\r\n\r\ninterface AuthProviderProps {\r\n  children: React.ReactNode;\r\n  storageKey?: string;\r\n}\r\n\r\nexport function AuthProvider({ \r\n  children, \r\n  storageKey = 'templar-auth' \r\n}: AuthProviderProps) {\r\n  const [user, setUser] = useState<User | null>(null);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n\r\n  const isAuthenticated = !!user;\r\n\r\n  // Initialize auth state from storage\r\n  useEffect(() => {\r\n    const initAuth = async () => {\r\n      try {\r\n        const stored = localStorage.getItem(storageKey);\r\n        if (stored) {\r\n          const userData = JSON.parse(stored);\r\n          // In a real app, you'd validate the token here\r\n          setUser(userData);\r\n        }\r\n      } catch (error) {\r\n        console.error('Failed to initialize auth:', error);\r\n        localStorage.removeItem(storageKey);\r\n      } finally {\r\n        setIsLoading(false);\r\n      }\r\n    };\r\n\r\n    initAuth();\r\n  }, [storageKey]);\r\n\r\n  const login = useCallback(async (email: string, password: string) => {\r\n    setIsLoading(true);\r\n    try {\r\n      // Mock login - replace with your actual auth API\r\n      const mockUser: User = {\r\n        id: '1',\r\n        email,\r\n        name: email.split('@')[0],\r\n        avatar: `https://api.dicebear.com/7.x/avataaars/svg?seed=${email}`,\r\n        role: 'user',\r\n        permissions: ['read', 'write']\r\n      };\r\n\r\n      setUser(mockUser);\r\n      localStorage.setItem(storageKey, JSON.stringify(mockUser));\r\n    } catch (error) {\r\n      console.error('Login failed:', error);\r\n      throw new Error('Login failed');\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  }, [storageKey]);\r\n\r\n  const logout = useCallback(async () => {\r\n    setIsLoading(true);\r\n    try {\r\n      // Clear user state and storage\r\n      setUser(null);\r\n      localStorage.removeItem(storageKey);\r\n      \r\n      // In a real app, you'd also invalidate the token on the server\r\n    } catch (error) {\r\n      console.error('Logout failed:', error);\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  }, [storageKey]);\r\n\r\n  const register = useCallback(async (email: string, password: string, name: string) => {\r\n    setIsLoading(true);\r\n    try {\r\n      // Mock registration - replace with your actual auth API\r\n      const mockUser: User = {\r\n        id: Date.now().toString(),\r\n        email,\r\n        name,\r\n        avatar: `https://api.dicebear.com/7.x/avataaars/svg?seed=${email}`,\r\n        role: 'user',\r\n        permissions: ['read', 'write']\r\n      };\r\n\r\n      setUser(mockUser);\r\n      localStorage.setItem(storageKey, JSON.stringify(mockUser));\r\n    } catch (error) {\r\n      console.error('Registration failed:', error);\r\n      throw new Error('Registration failed');\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  }, [storageKey]);\r\n\r\n  const updateUser = useCallback((userData: Partial<User>) => {\r\n    if (!user) return;\r\n    \r\n    const updatedUser = { ...user, ...userData };\r\n    setUser(updatedUser);\r\n    localStorage.setItem(storageKey, JSON.stringify(updatedUser));\r\n  }, [user, storageKey]);\r\n\r\n  const refreshAuth = useCallback(async () => {\r\n    if (!user) return;\r\n    \r\n    setIsLoading(true);\r\n    try {\r\n      // In a real app, you'd refresh the token here\r\n      // For now, just validate the current user\r\n      const stored = localStorage.getItem(storageKey);\r\n      if (stored) {\r\n        const userData = JSON.parse(stored);\r\n        setUser(userData);\r\n      } else {\r\n        setUser(null);\r\n      }\r\n    } catch (error) {\r\n      console.error('Auth refresh failed:', error);\r\n      setUser(null);\r\n      localStorage.removeItem(storageKey);\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  }, [user, storageKey]);\r\n\r\n  const value: AuthContextType = {\r\n    user,\r\n    isLoading,\r\n    isAuthenticated,\r\n    login,\r\n    logout,\r\n    register,\r\n    updateUser,\r\n    refreshAuth,\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider value={value}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n}\r\n\r\nexport function useAuth() {\r\n  const context = useContext(AuthContext);\r\n  if (context === undefined) {\r\n    throw new Error('useAuth must be used within an AuthProvider');\r\n  }\r\n  return context;\r\n}\r\n\r\nexport { type User, type AuthContextType };","'use client';\r\n\r\nimport React, { createContext, useContext, useEffect, useState } from 'react';\r\n\r\ntype Theme = 'light' | 'dark' | 'high-contrast' | 'sepia-light' | 'sepia-dark' | 'solarized-dark' | 'valor' | 'valor-dark' | 'system' | 'auto';\r\ntype ResolvedTheme = 'light' | 'dark' | 'high-contrast' | 'sepia-light' | 'sepia-dark' | 'solarized-dark' | 'valor' | 'valor-dark';\r\n\r\ninterface ThemeContextType {\r\n  theme: Theme;\r\n  resolvedTheme: ResolvedTheme;\r\n  setTheme: (theme: Theme) => void;\r\n  toggleTheme: () => void;\r\n  availableThemes: Theme[];\r\n  cycleTheme: () => void;\r\n  // CSS Variables access\r\n  getCSSVariable: (variableName: string) => string;\r\n  themeVariables: ThemeVariables;\r\n}\r\n\r\ninterface ThemeVariables {\r\n  // Base colors\r\n  background: string;\r\n  backgroundHover: string;\r\n  backgroundAccent: string;\r\n  backgroundShadow: string;\r\n  backgroundDisabled: string;\r\n  backgroundBorder: string;\r\n  backgroundFont: string;\r\n  \r\n  foreground: string;\r\n  foregroundHover: string;\r\n  foregroundAccent: string;\r\n  foregroundShadow: string;\r\n  foregroundDisabled: string;\r\n  foregroundBorder: string;\r\n  foregroundFont: string;\r\n  \r\n  // Primary colors\r\n  primary: string;\r\n  primaryBackground: string;\r\n  primaryForeground: string;\r\n  primaryHover: string;\r\n  primaryAccent: string;\r\n  primaryShadow: string;\r\n  primaryDisabled: string;\r\n  primaryBorder: string;\r\n  primaryFont: string;\r\n  \r\n  // Secondary colors\r\n  secondary: string;\r\n  secondaryBackground: string;\r\n  secondaryForeground: string;\r\n  secondaryHover: string;\r\n  secondaryAccent: string;\r\n  secondaryShadow: string;\r\n  secondaryDisabled: string;\r\n  secondaryBorder: string;\r\n  secondaryFont: string;\r\n  \r\n  // Success colors\r\n  success: string;\r\n  successBackground: string;\r\n  successForeground: string;\r\n  successHover: string;\r\n  successAccent: string;\r\n  successShadow: string;\r\n  successDisabled: string;\r\n  successBorder: string;\r\n  successFont: string;\r\n  \r\n  // Warning colors\r\n  warning: string;\r\n  warningBackground: string;\r\n  warningForeground: string;\r\n  warningHover: string;\r\n  warningAccent: string;\r\n  warningShadow: string;\r\n  warningDisabled: string;\r\n  warningBorder: string;\r\n  warningFont: string;\r\n  \r\n  // Destructive colors\r\n  destructive: string;\r\n  destructiveBackground: string;\r\n  destructiveForeground: string;\r\n  destructiveHover: string;\r\n  destructiveAccent: string;\r\n  destructiveShadow: string;\r\n  destructiveDisabled: string;\r\n  destructiveBorder: string;\r\n  destructiveFont: string;\r\n  \r\n  // Info colors\r\n  info: string;\r\n  infoBackground: string;\r\n  infoForeground: string;\r\n  infoHover: string;\r\n  infoAccent: string;\r\n  infoShadow: string;\r\n  infoDisabled: string;\r\n  infoBorder: string;\r\n  infoFont: string;\r\n  \r\n  // Legacy compatibility\r\n  accent: string;\r\n  accentForeground: string;\r\n  border: string;\r\n  borderHover: string;\r\n  muted: string;\r\n  mutedForeground: string;\r\n  error: string;\r\n  errorForeground: string;\r\n  card: string;\r\n  cardForeground: string;\r\n  input: string;\r\n  inputBorder: string;\r\n  inputPlaceholder: string;\r\n  inputForeground: string;\r\n  shadowSm: string;\r\n  shadow: string;\r\n  shadowMd: string;\r\n  shadowLg: string;\r\n  progressTrack: string;\r\n  progressTrackText: string;\r\n}\r\n\r\nexport const ThemeContext = createContext<ThemeContextType | undefined>(undefined);\r\n\r\ninterface ThemeProviderProps {\r\n  children: React.ReactNode;\r\n  defaultTheme?: Theme;\r\n  attribute?: string;\r\n  storageKey?: string;\r\n}\r\n\r\nconst availableThemes: Theme[] = ['light', 'dark', 'high-contrast', 'sepia-light', 'sepia-dark', 'solarized-dark', 'valor', 'valor-dark', 'system', 'auto'];\r\n\r\nexport function ThemeProvider({\r\n  children,\r\n  defaultTheme = 'system',\r\n  attribute = 'data-theme',\r\n  storageKey = 'templar-theme',\r\n}: ThemeProviderProps) {\r\n  const [theme, setThemeState] = useState<Theme>(defaultTheme);\r\n  const [mounted, setMounted] = useState(false);\r\n  const [themeVariables, setThemeVariables] = useState<ThemeVariables>({} as ThemeVariables);\r\n\r\n  // Get CSS variable value\r\n  const getCSSVariable = (variableName: string): string => {\r\n    if (typeof window === 'undefined') return '';\r\n    const style = getComputedStyle(document.documentElement);\r\n    return style.getPropertyValue(`--${variableName}`).trim();\r\n  };\r\n\r\n  // Update theme variables when theme changes\r\n  const updateThemeVariables = () => {\r\n    if (typeof window === 'undefined') return;\r\n    \r\n    const variables: ThemeVariables = {\r\n      // Base colors\r\n      background: getCSSVariable('background'),\r\n      backgroundHover: getCSSVariable('background-hover'),\r\n      backgroundAccent: getCSSVariable('background-accent'),\r\n      backgroundShadow: getCSSVariable('background-shadow'),\r\n      backgroundDisabled: getCSSVariable('background-disabled'),\r\n      backgroundBorder: getCSSVariable('background-border'),\r\n      backgroundFont: getCSSVariable('background-font'),\r\n      \r\n      foreground: getCSSVariable('foreground'),\r\n      foregroundHover: getCSSVariable('foreground-hover'),\r\n      foregroundAccent: getCSSVariable('foreground-accent'),\r\n      foregroundShadow: getCSSVariable('foreground-shadow'),\r\n      foregroundDisabled: getCSSVariable('foreground-disabled'),\r\n      foregroundBorder: getCSSVariable('foreground-border'),\r\n      foregroundFont: getCSSVariable('foreground-font'),\r\n      \r\n      // Primary colors\r\n      primary: getCSSVariable('primary'),\r\n      primaryBackground: getCSSVariable('primary-background'),\r\n      primaryForeground: getCSSVariable('primary-foreground'),\r\n      primaryHover: getCSSVariable('primary-hover'),\r\n      primaryAccent: getCSSVariable('primary-accent'),\r\n      primaryShadow: getCSSVariable('primary-shadow'),\r\n      primaryDisabled: getCSSVariable('primary-disabled'),\r\n      primaryBorder: getCSSVariable('primary-border'),\r\n      primaryFont: getCSSVariable('primary-font'),\r\n      \r\n      // Secondary colors\r\n      secondary: getCSSVariable('secondary'),\r\n      secondaryBackground: getCSSVariable('secondary-background'),\r\n      secondaryForeground: getCSSVariable('secondary-foreground'),\r\n      secondaryHover: getCSSVariable('secondary-hover'),\r\n      secondaryAccent: getCSSVariable('secondary-accent'),\r\n      secondaryShadow: getCSSVariable('secondary-shadow'),\r\n      secondaryDisabled: getCSSVariable('secondary-disabled'),\r\n      secondaryBorder: getCSSVariable('secondary-border'),\r\n      secondaryFont: getCSSVariable('secondary-font'),\r\n      \r\n      // Success colors\r\n      success: getCSSVariable('success'),\r\n      successBackground: getCSSVariable('success-background'),\r\n      successForeground: getCSSVariable('success-foreground'),\r\n      successHover: getCSSVariable('success-hover'),\r\n      successAccent: getCSSVariable('success-accent'),\r\n      successShadow: getCSSVariable('success-shadow'),\r\n      successDisabled: getCSSVariable('success-disabled'),\r\n      successBorder: getCSSVariable('success-border'),\r\n      successFont: getCSSVariable('success-font'),\r\n      \r\n      // Warning colors\r\n      warning: getCSSVariable('warning'),\r\n      warningBackground: getCSSVariable('warning-background'),\r\n      warningForeground: getCSSVariable('warning-foreground'),\r\n      warningHover: getCSSVariable('warning-hover'),\r\n      warningAccent: getCSSVariable('warning-accent'),\r\n      warningShadow: getCSSVariable('warning-shadow'),\r\n      warningDisabled: getCSSVariable('warning-disabled'),\r\n      warningBorder: getCSSVariable('warning-border'),\r\n      warningFont: getCSSVariable('warning-font'),\r\n      \r\n      // Destructive colors\r\n      destructive: getCSSVariable('destructive'),\r\n      destructiveBackground: getCSSVariable('destructive-background'),\r\n      destructiveForeground: getCSSVariable('destructive-foreground'),\r\n      destructiveHover: getCSSVariable('destructive-hover'),\r\n      destructiveAccent: getCSSVariable('destructive-accent'),\r\n      destructiveShadow: getCSSVariable('destructive-shadow'),\r\n      destructiveDisabled: getCSSVariable('destructive-disabled'),\r\n      destructiveBorder: getCSSVariable('destructive-border'),\r\n      destructiveFont: getCSSVariable('destructive-font'),\r\n      \r\n      // Info colors\r\n      info: getCSSVariable('info'),\r\n      infoBackground: getCSSVariable('info-background'),\r\n      infoForeground: getCSSVariable('info-foreground'),\r\n      infoHover: getCSSVariable('info-hover'),\r\n      infoAccent: getCSSVariable('info-accent'),\r\n      infoShadow: getCSSVariable('info-shadow'),\r\n      infoDisabled: getCSSVariable('info-disabled'),\r\n      infoBorder: getCSSVariable('info-border'),\r\n      infoFont: getCSSVariable('info-font'),\r\n      \r\n      // Legacy compatibility\r\n      accent: getCSSVariable('accent'),\r\n      accentForeground: getCSSVariable('accent-foreground'),\r\n      border: getCSSVariable('border'),\r\n      borderHover: getCSSVariable('border-hover'),\r\n      muted: getCSSVariable('muted'),\r\n      mutedForeground: getCSSVariable('muted-foreground'),\r\n      error: getCSSVariable('error'),\r\n      errorForeground: getCSSVariable('error-foreground'),\r\n      card: getCSSVariable('card'),\r\n      cardForeground: getCSSVariable('card-foreground'),\r\n      input: getCSSVariable('input'),\r\n      inputBorder: getCSSVariable('input-border'),\r\n      inputPlaceholder: getCSSVariable('input-placeholder'),\r\n      inputForeground: getCSSVariable('input-foreground'),\r\n      shadowSm: getCSSVariable('shadow-sm'),\r\n      shadow: getCSSVariable('shadow'),\r\n      shadowMd: getCSSVariable('shadow-md'),\r\n      shadowLg: getCSSVariable('shadow-lg'),\r\n      progressTrack: getCSSVariable('progress-track'),\r\n      progressTrackText: getCSSVariable('progress-track-text'),\r\n    };\r\n    \r\n    setThemeVariables(variables);\r\n  };\r\n\r\n  // Get system preference\r\n  const getSystemTheme = (): 'light' | 'dark' => {\r\n    if (typeof window !== 'undefined') {\r\n      return window.matchMedia('(prefers-color-scheme: dark)').matches ? 'dark' : 'light';\r\n    }\r\n    return 'light';\r\n  };\r\n\r\n  // Get time-based theme for 'auto' mode\r\n  const getAutoTheme = (): 'light' | 'dark' => {\r\n    if (typeof window !== 'undefined') {\r\n      const hour = new Date().getHours();\r\n      // Dark theme from 6 PM to 6 AM\r\n      return hour >= 18 || hour < 6 ? 'dark' : 'light';\r\n    }\r\n    return 'light';\r\n  };\r\n\r\n  // Resolve the actual theme to apply\r\n  const resolvedTheme: ResolvedTheme = (() => {\r\n    switch (theme) {\r\n      case 'system':\r\n        return getSystemTheme();\r\n      case 'auto':\r\n        return getAutoTheme();\r\n      case 'light':\r\n      case 'dark':\r\n      case 'high-contrast':\r\n      case 'sepia-light':\r\n      case 'sepia-dark':\r\n      case 'solarized-dark':\r\n      case 'valor':\r\n      case 'valor-dark':\r\n        return theme;\r\n      default:\r\n        return 'light';\r\n    }\r\n  })();\r\n\r\n  // Initialize theme from localStorage or default\r\n  useEffect(() => {\r\n    const stored = localStorage.getItem(storageKey);\r\n    if (stored && availableThemes.includes(stored as Theme)) {\r\n      setThemeState(stored as Theme);\r\n    }\r\n    setMounted(true);\r\n  }, [storageKey]);\r\n\r\n  // Apply theme to document\r\n  useEffect(() => {\r\n    if (!mounted) return;\r\n\r\n    const root = document.documentElement;\r\n    root.setAttribute(attribute, resolvedTheme);\r\n    \r\n    // Remove all theme classes first\r\n    root.classList.remove('light', 'dark', 'high-contrast', 'sepia-light', 'sepia-dark', 'solarized-dark', 'valor', 'valor-dark');\r\n\r\n    // Add the resolved theme class\r\n    root.classList.add(resolvedTheme);\r\n\r\n    // Also handle dark mode class for Tailwind CSS compatibility\r\n    if (resolvedTheme === 'dark' || resolvedTheme === 'sepia-dark' || resolvedTheme === 'solarized-dark' || resolvedTheme === 'valor-dark') {\r\n      root.classList.add('dark');\r\n    } else {\r\n      root.classList.remove('dark');\r\n    }\r\n\r\n    // Update theme variables after DOM changes\r\n    setTimeout(updateThemeVariables, 0);\r\n  }, [resolvedTheme, mounted, attribute]);\r\n\r\n  // Listen for system theme changes when in system mode\r\n  useEffect(() => {\r\n    if (theme !== 'system') return;\r\n\r\n    const mediaQuery = window.matchMedia('(prefers-color-scheme: dark)');\r\n    const handleChange = () => {\r\n      const root = document.documentElement;\r\n      const newResolvedTheme = mediaQuery.matches ? 'dark' : 'light';\r\n      root.setAttribute(attribute, newResolvedTheme);\r\n      root.classList.remove('light', 'dark', 'high-contrast', 'sepia-light', 'sepia-dark', 'solarized-dark', 'valor', 'valor-dark');\r\n      root.classList.add(newResolvedTheme);\r\n      root.classList.toggle('dark', newResolvedTheme === 'dark');\r\n      setTimeout(updateThemeVariables, 0);\r\n    };\r\n\r\n    mediaQuery.addEventListener('change', handleChange);\r\n    return () => mediaQuery.removeEventListener('change', handleChange);\r\n  }, [theme, attribute]);\r\n\r\n  // Listen for time changes when in auto mode\r\n  useEffect(() => {\r\n    if (theme !== 'auto') return;\r\n\r\n    const checkTime = () => {\r\n      const root = document.documentElement;\r\n      const newResolvedTheme = getAutoTheme();\r\n      root.setAttribute(attribute, newResolvedTheme);\r\n      root.classList.remove('light', 'dark', 'high-contrast', 'sepia-light', 'sepia-dark', 'solarized-dark', 'valor', 'valor-dark');\r\n      root.classList.add(newResolvedTheme);\r\n      root.classList.toggle('dark', newResolvedTheme === 'dark');\r\n      setTimeout(updateThemeVariables, 0);\r\n    };\r\n\r\n    // Check every minute for time-based theme changes\r\n    const interval = setInterval(checkTime, 60000);\r\n    return () => clearInterval(interval);\r\n  }, [theme, attribute]);\r\n\r\n  const setTheme = (newTheme: Theme) => {\r\n    setThemeState(newTheme);\r\n    localStorage.setItem(storageKey, newTheme);\r\n  };\r\n\r\n  const toggleTheme = () => {\r\n    if (theme === 'system') {\r\n      setTheme(getSystemTheme() === 'dark' ? 'light' : 'dark');\r\n    } else if (theme === 'auto') {\r\n      setTheme(getAutoTheme() === 'dark' ? 'light' : 'dark');\r\n    } else {\r\n      setTheme(theme === 'light' ? 'dark' : 'light');\r\n    }\r\n  };\r\n\r\n  const cycleTheme = () => {\r\n    const currentIndex = availableThemes.indexOf(theme);\r\n    const nextIndex = (currentIndex + 1) % availableThemes.length;\r\n    setTheme(availableThemes[nextIndex]);\r\n  };\r\n\r\n  // Prevent hydration mismatch\r\n  if (!mounted) {\r\n    return <div style={{ visibility: 'hidden' }}>{children}</div>;\r\n  }\r\n\r\n  const value: ThemeContextType = {\r\n    theme,\r\n    resolvedTheme,\r\n    setTheme,\r\n    toggleTheme,\r\n    availableThemes,\r\n    cycleTheme,\r\n    getCSSVariable,\r\n    themeVariables,\r\n  };\r\n\r\n  return (\r\n    <ThemeContext.Provider value={value}>\r\n      {children}\r\n    </ThemeContext.Provider>\r\n  );\r\n}\r\n\r\nexport function useTheme() {\r\n  const context = useContext(ThemeContext);\r\n  if (context === undefined) {\r\n    throw new Error('useTheme must be used within a ThemeProvider');\r\n  }\r\n  return context;\r\n}\r\n\r\n// Dedicated hook for CSS variables access (as mentioned in CSS_VARIABLES.md)\r\nexport function useCSSVariables(): ThemeVariables {\r\n  const { themeVariables } = useTheme();\r\n  return themeVariables;\r\n}\r\n\r\n// Alias for backward compatibility\r\nexport const DarkModeProvider = ThemeProvider;\r\n\r\nexport { type Theme, type ResolvedTheme, type ThemeContextType, type ThemeVariables };","'use client';\r\n\r\nimport React, { createContext, useContext, useState, useCallback } from 'react';\r\nimport { Notification } from '../components/atoms';\r\nimport type { NotificationAction } from '../components/atoms/Notification/Notification.types';\r\n\r\nexport type ToastType = 'primary' | 'secondary' | 'warning' | 'destructive' | 'success' | 'default' | 'inverted' | 'info';\r\n\r\nexport interface Toast {\r\n  id: string;\r\n  type: ToastType;\r\n  title: string;\r\n  description?: string;\r\n  duration?: number;\r\n  actions?: Array<{\r\n    label: string;\r\n    onClick: () => void;\r\n    variant?: string; // Flexible to support both legacy and new variants\r\n    disabled?: boolean;\r\n  }>;\r\n  showIcon?: boolean;\r\n  dismissible?: boolean;\r\n  showProgress?: boolean;\r\n}\r\n\r\ninterface ToastContextType {\r\n  toasts: Toast[];\r\n  addToast: (toast: Omit<Toast, 'id'>) => string;\r\n  removeToast: (id: string) => void;\r\n  clearToasts: () => void;\r\n  success: (title: string, description?: string) => string;\r\n  error: (title: string, description?: string) => string;\r\n  warning: (title: string, description?: string) => string;\r\n  info: (title: string, description?: string) => string;\r\n  primary: (title: string, description?: string) => string;\r\n  secondary: (title: string, description?: string) => string;\r\n  destructive: (title: string, description?: string) => string;\r\n  inverted: (title: string, description?: string) => string;\r\n}\r\n\r\nconst ToastContext = createContext<ToastContextType | undefined>(undefined);\r\n\r\ninterface ToastProviderProps {\r\n  children: React.ReactNode;\r\n  maxToasts?: number;\r\n  defaultDuration?: number;\r\n}\r\n\r\nexport function ToastProvider({ \r\n  children, \r\n  maxToasts = 5,\r\n  defaultDuration = 7000 \r\n}: ToastProviderProps) {\r\n  const [toasts, setToasts] = useState<Toast[]>([]);\r\n\r\n  const removeToast = useCallback((id: string) => {\r\n    setToasts(current => current.filter(toast => toast.id !== id));\r\n  }, []);\r\n\r\n  const addToast = useCallback((toast: Omit<Toast, 'id'>) => {\r\n    const id = Math.random().toString(36).substr(2, 9);\r\n    const newToast: Toast = {\r\n      showIcon: true,\r\n      dismissible: true,\r\n      showProgress: false,\r\n      ...toast,\r\n      id,\r\n      duration: toast.duration ?? defaultDuration,\r\n    };\r\n\r\n    setToasts(current => {\r\n      const updated = [...current, newToast];\r\n      // Remove oldest toasts if we exceed maxToasts\r\n      if (updated.length > maxToasts) {\r\n        return updated.slice(-maxToasts);\r\n      }\r\n      return updated;\r\n    });\r\n\r\n    // Auto-remove toast after duration (handled by Notification component now)\r\n    // if (newToast.duration && newToast.duration > 0) {\r\n    //   setTimeout(() => {\r\n    //     removeToast(id);\r\n    //   }, newToast.duration);\r\n    // }\r\n\r\n    return id;\r\n  }, [defaultDuration, maxToasts, removeToast]);\r\n\r\n  const clearToasts = useCallback(() => {\r\n    setToasts([]);\r\n  }, []);\r\n\r\n  // Convenience methods\r\n  const success = useCallback((title: string, description?: string) => {\r\n    return addToast({ type: 'success', title, description });\r\n  }, [addToast]);\r\n\r\n  const error = useCallback((title: string, description?: string) => {\r\n    return addToast({ type: 'destructive', title, description });\r\n  }, [addToast]);\r\n\r\n  const warning = useCallback((title: string, description?: string) => {\r\n    return addToast({ type: 'warning', title, description });\r\n  }, [addToast]);\r\n\r\n  const info = useCallback((title: string, description?: string) => {\r\n    return addToast({ type: 'primary', title, description });\r\n  }, [addToast]);\r\n\r\n  const primary = useCallback((title: string, description?: string) => {\r\n    return addToast({ type: 'primary', title, description });\r\n  }, [addToast]);\r\n\r\n  const secondary = useCallback((title: string, description?: string) => {\r\n    return addToast({ type: 'secondary', title, description });\r\n  }, [addToast]);\r\n\r\n  const destructive = useCallback((title: string, description?: string) => {\r\n    return addToast({ type: 'destructive', title, description });\r\n  }, [addToast]);\r\n\r\n  const inverted = useCallback((title: string, description?: string) => {\r\n    return addToast({ type: 'inverted', title, description });\r\n  }, [addToast]);\r\n\r\n  const value: ToastContextType = {\r\n    toasts,\r\n    addToast,\r\n    removeToast,\r\n    clearToasts,\r\n    success,\r\n    error,\r\n    warning,\r\n    info,\r\n    primary,\r\n    secondary,\r\n    destructive,\r\n    inverted,\r\n  };\r\n\r\n  return (\r\n    <ToastContext.Provider value={value}>\r\n      {children}\r\n      <ToastContainer />\r\n    </ToastContext.Provider>\r\n  );\r\n}\r\n\r\nfunction ToastContainer() {\r\n  const { toasts, removeToast } = useToast();\r\n\r\n  // Map legacy action variants to UniversalVariant\r\n  const mapActionVariant = (variant?: string): 'solid' | 'ghost' | 'outline' => {\r\n    switch (variant) {\r\n      case 'primary':\r\n      case 'secondary': \r\n      case 'success':\r\n      case 'warning':\r\n      case 'destructive':\r\n      case 'info':\r\n        return 'solid';\r\n      case 'ghost':\r\n        return 'ghost';\r\n      case 'outline':\r\n      default:\r\n        return 'outline';\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"fixed top-4 right-4 z-50 flex flex-col gap-3 max-w-md\">\r\n      {toasts.map((toast) => (\r\n        <Notification\r\n          key={toast.id}\r\n          id={toast.id}\r\n          color={toast.type === 'default' ? 'primary' : \r\n                 toast.type === 'inverted' ? 'secondary' : \r\n                 toast.type === 'info' ? 'info' :\r\n                 toast.type}\r\n          title={toast.title}\r\n          description={toast.description}\r\n          duration={toast.duration || undefined}\r\n          actions={toast.actions?.map(action => ({\r\n            label: action.label,\r\n            onClick: action.onClick,\r\n            variant: mapActionVariant(action.variant),\r\n            disabled: action.disabled\r\n          })) as NotificationAction[] | undefined}\r\n          showIcon={toast.showIcon}\r\n          dismissible={toast.dismissible}\r\n          showProgress={toast.showProgress}\r\n          onDismiss={() => removeToast(toast.id)}\r\n          style={{\r\n            minWidth: '320px',\r\n            maxWidth: '400px'\r\n          }}\r\n        />\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport function useToast() {\r\n  const context = useContext(ToastContext);\r\n  if (context === undefined) {\r\n    throw new Error('useToast must be used within a ToastProvider');\r\n  }\r\n  return context;\r\n}\r\n","'use client';\r\n\r\nimport React, { createContext, useContext, useState, useCallback } from 'react';\r\n\r\ninterface LoadingState {\r\n  [key: string]: boolean;\r\n}\r\n\r\ninterface LoadingContextType {\r\n  loadingStates: LoadingState;\r\n  isLoading: (key?: string) => boolean;\r\n  setLoading: (key: string, loading: boolean) => void;\r\n  startLoading: (key: string) => void;\r\n  stopLoading: (key: string) => void;\r\n  isAnyLoading: boolean;\r\n}\r\n\r\nconst LoadingContext = createContext<LoadingContextType | undefined>(undefined);\r\n\r\ninterface LoadingProviderProps {\r\n  children: React.ReactNode;\r\n  showGlobalSpinner?: boolean;\r\n}\r\n\r\nexport function LoadingProvider({ \r\n  children, \r\n  showGlobalSpinner = true \r\n}: LoadingProviderProps) {\r\n  const [loadingStates, setLoadingStates] = useState<LoadingState>({});\r\n\r\n  const setLoading = useCallback((key: string, loading: boolean) => {\r\n    setLoadingStates(current => ({\r\n      ...current,\r\n      [key]: loading,\r\n    }));\r\n  }, []);\r\n\r\n  const startLoading = useCallback((key: string) => {\r\n    setLoading(key, true);\r\n  }, [setLoading]);\r\n\r\n  const stopLoading = useCallback((key: string) => {\r\n    setLoading(key, false);\r\n  }, [setLoading]);\r\n\r\n  const isLoading = useCallback((key?: string) => {\r\n    if (key) {\r\n      return loadingStates[key] || false;\r\n    }\r\n    return Object.values(loadingStates).some(Boolean);\r\n  }, [loadingStates]);\r\n\r\n  const isAnyLoading = Object.values(loadingStates).some(Boolean);\r\n\r\n  const value: LoadingContextType = {\r\n    loadingStates,\r\n    isLoading,\r\n    setLoading,\r\n    startLoading,\r\n    stopLoading,\r\n    isAnyLoading,\r\n  };\r\n\r\n  return (\r\n    <LoadingContext.Provider value={value}>\r\n      {children}\r\n      {showGlobalSpinner && <GlobalLoadingSpinner />}\r\n    </LoadingContext.Provider>\r\n  );\r\n}\r\n\r\nfunction GlobalLoadingSpinner() {\r\n  const { isAnyLoading } = useLoading();\r\n\r\n  if (!isAnyLoading) return null;\r\n\r\n  return (\r\n    <div className=\"fixed inset-0 z-50 flex items-center justify-center bg-black/20 backdrop-blur-sm\">\r\n      <div className=\"bg-white dark:bg-gray-800 rounded-lg p-6 shadow-xl\">\r\n        <div className=\"flex items-center space-x-3\">\r\n          <div className=\"animate-spin rounded-full h-6 w-6 border-b-2 border-blue-600\"></div>\r\n          <span className=\"text-gray-700 dark:text-gray-300\">Loading...</span>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport function useLoading() {\r\n  const context = useContext(LoadingContext);\r\n  if (context === undefined) {\r\n    throw new Error('useLoading must be used within a LoadingProvider');\r\n  }\r\n  return context;\r\n}\r\n\r\n// Higher-order hook for managing loading states with async operations\r\nexport function useAsyncOperation() {\r\n  const { startLoading, stopLoading } = useLoading();\r\n\r\n  const execute = useCallback(\r\n    async <T,>(key: string, operation: () => Promise<T>): Promise<T> => {\r\n      try {\r\n        startLoading(key);\r\n        const result = await operation();\r\n        return result;\r\n      } finally {\r\n        stopLoading(key);\r\n      }\r\n    },\r\n    [startLoading, stopLoading]\r\n  );\r\n\r\n  return { execute };\r\n}\r\n","'use client';\r\n\r\nimport React, { createContext, useContext, useState, useCallback, useEffect } from 'react';\r\n\r\nexport interface ModalConfig {\r\n  id: string;\r\n  title?: string;\r\n  content: React.ReactNode;\r\n  size?: 'sm' | 'md' | 'lg' | 'xl' | 'full';\r\n  closable?: boolean;\r\n  overlay?: boolean;\r\n  onClose?: () => void;\r\n  className?: string;\r\n}\r\n\r\ninterface ModalContextType {\r\n  modals: ModalConfig[];\r\n  openModal: (config: Omit<ModalConfig, 'id'>) => string;\r\n  closeModal: (id: string) => void;\r\n  closeAllModals: () => void;\r\n  isModalOpen: (id: string) => boolean;\r\n}\r\n\r\nconst ModalContext = createContext<ModalContextType | undefined>(undefined);\r\n\r\ninterface ModalProviderProps {\r\n  children: React.ReactNode;\r\n  maxModals?: number;\r\n}\r\n\r\nexport function ModalProvider({ children, maxModals = 5 }: ModalProviderProps) {\r\n  const [modals, setModals] = useState<ModalConfig[]>([]);\r\n\r\n  const openModal = useCallback((config: Omit<ModalConfig, 'id'>) => {\r\n    const id = Math.random().toString(36).substr(2, 9);\r\n    const newModal: ModalConfig = {\r\n      ...config,\r\n      id,\r\n      size: config.size || 'md',\r\n      closable: config.closable !== false,\r\n      overlay: config.overlay !== false,\r\n    };\r\n\r\n    setModals(current => {\r\n      const updated = [...current, newModal];\r\n      // Remove oldest modals if we exceed maxModals\r\n      if (updated.length > maxModals) {\r\n        return updated.slice(-maxModals);\r\n      }\r\n      return updated;\r\n    });\r\n\r\n    return id;\r\n  }, [maxModals]);\r\n\r\n  const closeModal = useCallback((id: string) => {\r\n    setModals(current => {\r\n      const modal = current.find(m => m.id === id);\r\n      if (modal?.onClose) {\r\n        modal.onClose();\r\n      }\r\n      return current.filter(m => m.id !== id);\r\n    });\r\n  }, []);\r\n\r\n  const closeAllModals = useCallback(() => {\r\n    setModals(current => {\r\n      current.forEach(modal => {\r\n        if (modal.onClose) {\r\n          modal.onClose();\r\n        }\r\n      });\r\n      return [];\r\n    });\r\n  }, []);\r\n\r\n  const isModalOpen = useCallback((id: string) => {\r\n    return modals.some(modal => modal.id === id);\r\n  }, [modals]);\r\n\r\n  // Close modals on ESC key\r\n  useEffect(() => {\r\n    const handleEsc = (event: KeyboardEvent) => {\r\n      if (event.key === 'Escape' && modals.length > 0) {\r\n        const topModal = modals[modals.length - 1];\r\n        if (topModal.closable) {\r\n          closeModal(topModal.id);\r\n        }\r\n      }\r\n    };\r\n\r\n    document.addEventListener('keydown', handleEsc);\r\n    return () => document.removeEventListener('keydown', handleEsc);\r\n  }, [modals, closeModal]);\r\n\r\n  const value: ModalContextType = {\r\n    modals,\r\n    openModal,\r\n    closeModal,\r\n    closeAllModals,\r\n    isModalOpen,\r\n  };\r\n\r\n  return (\r\n    <ModalContext.Provider value={value}>\r\n      {children}\r\n      <ModalContainer />\r\n    </ModalContext.Provider>\r\n  );\r\n}\r\n\r\nfunction ModalContainer() {\r\n  const { modals } = useModal();\r\n\r\n  if (modals.length === 0) return null;\r\n\r\n  return (\r\n    <div className=\"fixed inset-0 z-50\">\r\n      {modals.map((modal, index) => (\r\n        <ModalWrapper key={modal.id} modal={modal} zIndex={50 + index} />\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n\r\ninterface ModalWrapperProps {\r\n  modal: ModalConfig;\r\n  zIndex: number;\r\n}\r\n\r\nfunction ModalWrapper({ modal, zIndex }: ModalWrapperProps) {\r\n  const { closeModal } = useModal();\r\n\r\n  const getSizeClasses = (size: ModalConfig['size']) => {\r\n    switch (size) {\r\n      case 'sm': return 'max-w-md';\r\n      case 'md': return 'max-w-lg';\r\n      case 'lg': return 'max-w-2xl';\r\n      case 'xl': return 'max-w-4xl';\r\n      case 'full': return 'max-w-full mx-4';\r\n      default: return 'max-w-lg';\r\n    }\r\n  };\r\n\r\n  const handleOverlayClick = (e: React.MouseEvent) => {\r\n    if (e.target === e.currentTarget && modal.closable) {\r\n      closeModal(modal.id);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div\r\n      className={`fixed inset-0 flex items-center justify-center ${\r\n        modal.overlay ? 'bg-black/50 backdrop-blur-sm' : ''\r\n      }`}\r\n      style={{ zIndex }}\r\n      onClick={handleOverlayClick}\r\n    >\r\n      <div\r\n        className={`\r\n          bg-white dark:bg-gray-800 rounded-lg shadow-xl \r\n          w-full ${getSizeClasses(modal.size)}\r\n          max-h-[90vh] overflow-hidden\r\n          ${modal.className || ''}\r\n        `}\r\n        onClick={e => e.stopPropagation()}\r\n      >\r\n        {modal.title && (\r\n          <div className=\"flex items-center justify-between p-6 border-b border-gray-200 dark:border-gray-700\">\r\n            <h2 className=\"text-xl font-semibold text-gray-900 dark:text-white\">\r\n              {modal.title}\r\n            </h2>\r\n            {modal.closable && (\r\n              <button\r\n                onClick={() => closeModal(modal.id)}\r\n                className=\"text-gray-400 hover:text-gray-600 dark:hover:text-gray-300\"\r\n                aria-label=\"Close modal\"\r\n              >\r\n                <svg className=\"w-6 h-6\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\r\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M6 18L18 6M6 6l12 12\" />\r\n                </svg>\r\n              </button>\r\n            )}\r\n          </div>\r\n        )}\r\n        <div className=\"p-6 overflow-y-auto\">\r\n          {modal.content}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport function useModal() {\r\n  const context = useContext(ModalContext);\r\n  if (context === undefined) {\r\n    throw new Error('useModal must be used within a ModalProvider');\r\n  }\r\n  return context;\r\n}\r\n","'use client';\r\n\r\nimport React, { createContext, useContext, useState, useEffect, useCallback } from 'react';\r\n\r\nexport interface AppSettings {\r\n  language: string;\r\n  dateFormat: string;\r\n  timeFormat: '12h' | '24h';\r\n  timezone: string;\r\n  currency: string;\r\n  autoSave: boolean;\r\n  notifications: {\r\n    email: boolean;\r\n    push: boolean;\r\n    sound: boolean;\r\n  };\r\n  appearance: {\r\n    fontSize: 'sm' | 'md' | 'lg';\r\n    density: 'compact' | 'comfortable' | 'spacious';\r\n    animations: boolean;\r\n  };\r\n  privacy: {\r\n    analytics: boolean;\r\n    crashReporting: boolean;\r\n  };\r\n}\r\n\r\nconst defaultSettings: AppSettings = {\r\n  language: 'en',\r\n  dateFormat: 'MM/dd/yyyy',\r\n  timeFormat: '12h',\r\n  timezone: Intl.DateTimeFormat().resolvedOptions().timeZone,\r\n  currency: 'USD',\r\n  autoSave: true,\r\n  notifications: {\r\n    email: true,\r\n    push: true,\r\n    sound: true,\r\n  },\r\n  appearance: {\r\n    fontSize: 'md',\r\n    density: 'comfortable',\r\n    animations: true,\r\n  },\r\n  privacy: {\r\n    analytics: false,\r\n    crashReporting: false,\r\n  },\r\n};\r\n\r\ninterface SettingsContextType {\r\n  settings: AppSettings;\r\n  updateSettings: (updates: Partial<AppSettings>) => void;\r\n  updateNestedSetting: <T extends keyof AppSettings>(\r\n    category: T,\r\n    updates: Partial<AppSettings[T]>\r\n  ) => void;\r\n  resetSettings: () => void;\r\n  exportSettings: () => string;\r\n  importSettings: (settingsJson: string) => boolean;\r\n}\r\n\r\nconst SettingsContext = createContext<SettingsContextType | undefined>(undefined);\r\n\r\ninterface SettingsProviderProps {\r\n  children: React.ReactNode;\r\n  storageKey?: string;\r\n  defaultSettings?: Partial<AppSettings>;\r\n}\r\n\r\nexport function SettingsProvider({\r\n  children,\r\n  storageKey = 'templar-settings',\r\n  defaultSettings: customDefaults,\r\n}: SettingsProviderProps) {\r\n  const [settings, setSettings] = useState<AppSettings>(() => ({\r\n    ...defaultSettings,\r\n    ...customDefaults,\r\n  }));\r\n\r\n  // Load settings from localStorage on mount\r\n  useEffect(() => {\r\n    try {\r\n      const stored = localStorage.getItem(storageKey);\r\n      if (stored) {\r\n        const parsedSettings = JSON.parse(stored);\r\n        setSettings(current => ({\r\n          ...current,\r\n          ...parsedSettings,\r\n        }));\r\n      }\r\n    } catch (error) {\r\n      console.error('Failed to load settings:', error);\r\n    }\r\n  }, [storageKey]);\r\n\r\n  // Save settings to localStorage whenever they change\r\n  useEffect(() => {\r\n    try {\r\n      localStorage.setItem(storageKey, JSON.stringify(settings));\r\n    } catch (error) {\r\n      console.error('Failed to save settings:', error);\r\n    }\r\n  }, [settings, storageKey]);\r\n\r\n  const updateSettings = useCallback((updates: Partial<AppSettings>) => {\r\n    setSettings(current => ({\r\n      ...current,\r\n      ...updates,\r\n    }));\r\n  }, []);\r\n\r\n  const updateNestedSetting = useCallback(<T extends keyof AppSettings>(\r\n    category: T,\r\n    updates: Partial<AppSettings[T]>\r\n  ) => {\r\n    setSettings(current => ({\r\n      ...current,\r\n      [category]: {\r\n        ...(current[category] as object),\r\n        ...updates,\r\n      },\r\n    }));\r\n  }, []);\r\n\r\n  const resetSettings = useCallback(() => {\r\n    setSettings({ ...defaultSettings, ...customDefaults });\r\n  }, [customDefaults]);\r\n\r\n  const exportSettings = useCallback(() => {\r\n    return JSON.stringify(settings, null, 2);\r\n  }, [settings]);\r\n\r\n  const importSettings = useCallback((settingsJson: string) => {\r\n    try {\r\n      const parsedSettings = JSON.parse(settingsJson);\r\n      setSettings(current => ({\r\n        ...current,\r\n        ...parsedSettings,\r\n      }));\r\n      return true;\r\n    } catch (error) {\r\n      console.error('Failed to import settings:', error);\r\n      return false;\r\n    }\r\n  }, []);\r\n\r\n  const value: SettingsContextType = {\r\n    settings,\r\n    updateSettings,\r\n    updateNestedSetting,\r\n    resetSettings,\r\n    exportSettings,\r\n    importSettings,\r\n  };\r\n\r\n  return (\r\n    <SettingsContext.Provider value={value}>\r\n      {children}\r\n    </SettingsContext.Provider>\r\n  );\r\n}\r\n\r\nexport function useSettings() {\r\n  const context = useContext(SettingsContext);\r\n  if (context === undefined) {\r\n    throw new Error('useSettings must be used within a SettingsProvider');\r\n  }\r\n  return context;\r\n}\r\n\r\n// Utility hooks for specific settings\r\nexport function useLanguage() {\r\n  const { settings, updateSettings } = useSettings();\r\n  return {\r\n    language: settings.language,\r\n    setLanguage: (language: string) => updateSettings({ language }),\r\n  };\r\n}\r\n\r\nexport function useNotificationSettings() {\r\n  const { settings, updateNestedSetting } = useSettings();\r\n  return {\r\n    notifications: settings.notifications,\r\n    updateNotifications: (updates: Partial<AppSettings['notifications']>) =>\r\n      updateNestedSetting('notifications', updates),\r\n  };\r\n}\r\n\r\nexport function useAppearanceSettings() {\r\n  const { settings, updateNestedSetting } = useSettings();\r\n  return {\r\n    appearance: settings.appearance,\r\n    updateAppearance: (updates: Partial<AppSettings['appearance']>) =>\r\n      updateNestedSetting('appearance', updates),\r\n  };\r\n}\r\n","'use client';\r\n\r\nimport React, { createContext, useContext, useEffect, useState, useMemo } from 'react';\r\nimport type { MournConfig } from './mourn.types';\r\nimport { DEFAULT_MOURN_CONFIG, mergeMournConfig } from './mourn.types';\r\nimport { readMournConfig, debugMournConfig } from './configReader';\r\n\r\ninterface EnvironmentContextType {\r\n  config: Required<MournConfig>;\r\n  isLoading: boolean;\r\n  error: Error | null;\r\n  reload: () => Promise<void>;\r\n}\r\n\r\nconst EnvironmentContext = createContext<EnvironmentContextType | undefined>(undefined);\r\n\r\ninterface EnvironmentProviderProps {\r\n  children: React.ReactNode;\r\n  /**\r\n   * Override configuration (useful for testing or when .mourn file isn't available)\r\n   */\r\n  config?: Partial<MournConfig>;\r\n  /**\r\n   * Whether to enable debug logging\r\n   * @default false\r\n   */\r\n  debug?: boolean;\r\n}\r\n\r\n/**\r\n * Environment Provider\r\n *\r\n * This provider loads and manages the .mourn configuration file,\r\n * making it available throughout the application.\r\n */\r\nexport function EnvironmentProvider({\r\n  children,\r\n  config: overrideConfig,\r\n  debug = false,\r\n}: EnvironmentProviderProps) {\r\n  const [config, setConfig] = useState<Required<MournConfig>>(\r\n    overrideConfig ? mergeMournConfig(overrideConfig) : DEFAULT_MOURN_CONFIG\r\n  );\r\n  const [isLoading, setIsLoading] = useState(!overrideConfig);\r\n  const [error, setError] = useState<Error | null>(null);\r\n\r\n  const loadConfig = async () => {\r\n    if (overrideConfig) {\r\n      // If override config is provided, merge it with defaults\r\n      const merged = mergeMournConfig(overrideConfig);\r\n      setConfig(merged);\r\n      setIsLoading(false);\r\n\r\n      if (debug) {\r\n        debugMournConfig(merged);\r\n      }\r\n\r\n      return;\r\n    }\r\n\r\n    try {\r\n      setIsLoading(true);\r\n      setError(null);\r\n\r\n      const loadedConfig = await readMournConfig();\r\n      setConfig(loadedConfig);\r\n\r\n      if (debug) {\r\n        debugMournConfig(loadedConfig);\r\n      }\r\n    } catch (err) {\r\n      console.error('[Templar] Failed to load .mourn configuration:', err);\r\n      setError(err instanceof Error ? err : new Error('Unknown error loading configuration'));\r\n      setConfig(DEFAULT_MOURN_CONFIG);\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    loadConfig();\r\n  }, []); // Only run once on mount\r\n\r\n  const contextValue = useMemo(\r\n    () => ({\r\n      config,\r\n      isLoading,\r\n      error,\r\n      reload: loadConfig,\r\n    }),\r\n    [config, isLoading, error]\r\n  );\r\n\r\n  return (\r\n    <EnvironmentContext.Provider value={contextValue}>\r\n      {children}\r\n    </EnvironmentContext.Provider>\r\n  );\r\n}\r\n\r\n/**\r\n * Hook to access the environment configuration\r\n *\r\n * @throws Error if used outside of EnvironmentProvider\r\n */\r\nexport function useEnvironment(): EnvironmentContextType {\r\n  const context = useContext(EnvironmentContext);\r\n\r\n  if (context === undefined) {\r\n    throw new Error('useEnvironment must be used within an EnvironmentProvider');\r\n  }\r\n\r\n  return context;\r\n}\r\n\r\n/**\r\n * Hook to access just the configuration (most common use case)\r\n */\r\nexport function useMournConfig(): Required<MournConfig> {\r\n  const { config } = useEnvironment();\r\n  return config;\r\n}\r\n\r\n/**\r\n * Hook to check if a specific provider is enabled\r\n */\r\nexport function useProviderEnabled(providerName: keyof Required<MournConfig>['providers']): boolean {\r\n  const { config } = useEnvironment();\r\n  return config.providers[providerName]?.enabled ?? true;\r\n}\r\n\r\n/**\r\n * Hook to get configuration for a specific provider\r\n */\r\nexport function useProviderConfig<T extends keyof Required<MournConfig>['providers']>(\r\n  providerName: T\r\n): Required<MournConfig>['providers'][T] {\r\n  const { config } = useEnvironment();\r\n  return config.providers[providerName];\r\n}\r\n","'use client';\r\n\r\nimport { useTheme } from './ThemeProvider';\r\nimport { useContext } from 'react';\r\n\r\n/**\r\n * Custom hook for easy access to CSS variables from the current theme\r\n * @returns Object with CSS variable values and utility functions\r\n */\r\nexport function useCSSVariables() {\r\n  let themeVariables: any = {};\r\n  let getCSSVariable: (variable: string) => string = () => '';\r\n\r\n  try {\r\n    const themeContext = useTheme();\r\n    themeVariables = themeContext.themeVariables;\r\n    getCSSVariable = themeContext.getCSSVariable;\r\n  } catch (error) {\r\n    // Fallback values when theme context is not available\r\n    console.warn('useCSSVariables: Theme context not available, using fallback values');\r\n  }\r\n\r\n  /**\r\n   * Get a CSS variable value with optional fallback\r\n   * @param variable - The CSS variable name (without --)\r\n   * @param fallback - Fallback value if variable is not found\r\n   */\r\n  const getVariable = (variable: string, fallback?: string): string => {\r\n    try {\r\n      const value = getCSSVariable(variable);\r\n      return value || fallback || getDefaultValue(variable);\r\n    } catch {\r\n      return fallback || getDefaultValue(variable);\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Get default fallback values for common CSS variables\r\n   */\r\n  const getDefaultValue = (variable: string): string => {\r\n    const defaults: Record<string, string> = {\r\n      // Base defaults\r\n      'background': '#ffffff',\r\n      'background-hover': '#f9fafb',\r\n      'background-accent': '#f3f4f6',\r\n      'background-disabled': '#f3f4f6',\r\n      'foreground': '#000000',\r\n      'foreground-hover': '#111827',\r\n      'foreground-accent': '#6b7280',\r\n      'foreground-disabled': '#9ca3af',\r\n      \r\n      // Primary defaults\r\n      'primary': '#0066cc',\r\n      'primary-background': '#eff6ff',\r\n      'primary-foreground': '#ffffff',\r\n      'primary-hover': '#0052a3',\r\n      \r\n      // Secondary defaults\r\n      'secondary': '#6b7280',\r\n      'secondary-background': '#f9fafb',\r\n      'secondary-foreground': '#ffffff',\r\n      'secondary-hover': '#4b5563',\r\n      \r\n      // Success defaults\r\n      'success': '#10b981',\r\n      'success-background': '#ecfdf5',\r\n      'success-foreground': '#ffffff',\r\n      \r\n      // Warning defaults\r\n      'warning': '#f59e0b',\r\n      'warning-background': '#fffbeb',\r\n      'warning-foreground': '#ffffff',\r\n      \r\n      // Destructive defaults\r\n      'destructive': '#ef4444',\r\n      'destructive-background': '#fef2f2',\r\n      'destructive-foreground': '#ffffff',\r\n      \r\n      // Info defaults\r\n      'info': '#3b82f6',\r\n      'info-background': '#eff6ff',\r\n      'info-foreground': '#ffffff',\r\n      \r\n      // Legacy defaults\r\n      'muted': '#f3f4f6',\r\n      'border': '#e5e7eb',\r\n      'card': '#ffffff',\r\n      'input': '#ffffff',\r\n      'accent': '#0066cc',\r\n      'error': '#ef4444',\r\n    };\r\n    return defaults[variable] || '#000000';\r\n  };\r\n\r\n  /**\r\n   * Create a style object using theme variables\r\n   * @param styles - Object with CSS property keys and variable names as values\r\n   */\r\n  const createStyles = (styles: Record<string, string>) => {\r\n    const result: Record<string, string> = {};\r\n    for (const [property, variableName] of Object.entries(styles)) {\r\n      result[property] = getVariable(variableName);\r\n    }\r\n    return result;\r\n  };\r\n\r\n  /**\r\n   * Get color with opacity\r\n   * @param colorVariable - The color variable name\r\n   * @param opacity - Opacity value (0-1)\r\n   */\r\n  const getColorWithOpacity = (colorVariable: string, opacity: number): string => {\r\n    const color = getVariable(colorVariable);\r\n    if (!color) return '';\r\n    \r\n    // Handle hex colors\r\n    if (color.startsWith('#')) {\r\n      const hex = color.slice(1);\r\n      const r = parseInt(hex.substr(0, 2), 16);\r\n      const g = parseInt(hex.substr(2, 2), 16);\r\n      const b = parseInt(hex.substr(4, 2), 16);\r\n      return `rgba(${r}, ${g}, ${b}, ${opacity})`;\r\n    }\r\n    \r\n    // Handle rgb colors\r\n    if (color.startsWith('rgb')) {\r\n      return color.replace('rgb', 'rgba').replace(')', `, ${opacity})`);\r\n    }\r\n    \r\n    return color;\r\n  };\r\n\r\n  return {\r\n    // Base colors\r\n    background: getVariable('background'),\r\n    backgroundHover: getVariable('background-hover'),\r\n    backgroundAccent: getVariable('background-accent'),\r\n    backgroundShadow: getVariable('background-shadow'),\r\n    backgroundDisabled: getVariable('background-disabled'),\r\n    backgroundBorder: getVariable('background-border'),\r\n    backgroundFont: getVariable('background-font'),\r\n    \r\n    foreground: getVariable('foreground'),\r\n    foregroundHover: getVariable('foreground-hover'),\r\n    foregroundAccent: getVariable('foreground-accent'),\r\n    foregroundShadow: getVariable('foreground-shadow'),\r\n    foregroundDisabled: getVariable('foreground-disabled'),\r\n    foregroundBorder: getVariable('foreground-border'),\r\n    foregroundFont: getVariable('foreground-font'),\r\n    \r\n    // Primary colors\r\n    primary: getVariable('primary'),\r\n    primaryBackground: getVariable('primary-background'),\r\n    primaryForeground: getVariable('primary-foreground', '#ffffff'),\r\n    primaryHover: getVariable('primary-hover'),\r\n    primaryAccent: getVariable('primary-accent'),\r\n    primaryShadow: getVariable('primary-shadow'),\r\n    primaryDisabled: getVariable('primary-disabled'),\r\n    primaryBorder: getVariable('primary-border'),\r\n    primaryFont: getVariable('primary-font'),\r\n    \r\n    // Secondary colors\r\n    secondary: getVariable('secondary'),\r\n    secondaryBackground: getVariable('secondary-background'),\r\n    secondaryForeground: getVariable('secondary-foreground'),\r\n    secondaryHover: getVariable('secondary-hover'),\r\n    secondaryAccent: getVariable('secondary-accent'),\r\n    secondaryShadow: getVariable('secondary-shadow'),\r\n    secondaryDisabled: getVariable('secondary-disabled'),\r\n    secondaryBorder: getVariable('secondary-border'),\r\n    secondaryFont: getVariable('secondary-font'),\r\n    \r\n    // Success colors\r\n    success: getVariable('success'),\r\n    successBackground: getVariable('success-background'),\r\n    successForeground: getVariable('success-foreground'),\r\n    successHover: getVariable('success-hover'),\r\n    successAccent: getVariable('success-accent'),\r\n    successShadow: getVariable('success-shadow'),\r\n    successDisabled: getVariable('success-disabled'),\r\n    successBorder: getVariable('success-border'),\r\n    successFont: getVariable('success-font'),\r\n    \r\n    // Warning colors\r\n    warning: getVariable('warning'),\r\n    warningBackground: getVariable('warning-background'),\r\n    warningForeground: getVariable('warning-foreground'),\r\n    warningHover: getVariable('warning-hover'),\r\n    warningAccent: getVariable('warning-accent'),\r\n    warningShadow: getVariable('warning-shadow'),\r\n    warningDisabled: getVariable('warning-disabled'),\r\n    warningBorder: getVariable('warning-border'),\r\n    warningFont: getVariable('warning-font'),\r\n    \r\n    // Destructive colors\r\n    destructive: getVariable('destructive'),\r\n    destructiveBackground: getVariable('destructive-background'),\r\n    destructiveForeground: getVariable('destructive-foreground'),\r\n    destructiveHover: getVariable('destructive-hover'),\r\n    destructiveAccent: getVariable('destructive-accent'),\r\n    destructiveShadow: getVariable('destructive-shadow'),\r\n    destructiveDisabled: getVariable('destructive-disabled'),\r\n    destructiveBorder: getVariable('destructive-border'),\r\n    destructiveFont: getVariable('destructive-font'),\r\n    \r\n    // Info colors\r\n    info: getVariable('info'),\r\n    infoBackground: getVariable('info-background'),\r\n    infoForeground: getVariable('info-foreground'),\r\n    infoHover: getVariable('info-hover'),\r\n    infoAccent: getVariable('info-accent'),\r\n    infoShadow: getVariable('info-shadow'),\r\n    infoDisabled: getVariable('info-disabled'),\r\n    infoBorder: getVariable('info-border'),\r\n    infoFont: getVariable('info-font'),\r\n    \r\n    // Legacy compatibility\r\n    accent: getVariable('accent'),\r\n    accentForeground: getVariable('accent-foreground'),\r\n    border: getVariable('border'),\r\n    borderHover: getVariable('border-hover'),\r\n    muted: getVariable('muted'),\r\n    mutedForeground: getVariable('muted-foreground'),\r\n    error: getVariable('error'),\r\n    errorForeground: getVariable('error-foreground'),\r\n    card: getVariable('card'),\r\n    cardForeground: getVariable('card-foreground'),\r\n    input: getVariable('input'),\r\n    inputBorder: getVariable('input-border'),\r\n    inputPlaceholder: getVariable('input-placeholder'),\r\n    inputForeground: getVariable('input-foreground'),\r\n    shadowSm: getVariable('shadow-sm'),\r\n    shadow: getVariable('shadow'),\r\n    shadowMd: getVariable('shadow-md'),\r\n    shadowLg: getVariable('shadow-lg'),\r\n    progressTrack: getVariable('progress-track'),\r\n    progressTrackText: getVariable('progress-track-text'),\r\n    \r\n    // Utility functions\r\n    getVariable,\r\n    getCSSVariable,\r\n    createStyles,\r\n    getColorWithOpacity,\r\n    \r\n    // Common color combinations\r\n    surface: {\r\n      primary: {\r\n        backgroundColor: getVariable('primary'),\r\n        color: getVariable('primary-foreground', '#ffffff'),\r\n        borderColor: getVariable('primary-border'),\r\n        boxShadow: getVariable('primary-shadow'),\r\n      },\r\n      primaryBackground: {\r\n        backgroundColor: getVariable('primary-background'),\r\n        color: getVariable('primary'),\r\n        borderColor: getVariable('primary-border'),\r\n      },\r\n      secondary: {\r\n        backgroundColor: getVariable('secondary'),\r\n        color: getVariable('secondary-foreground'),\r\n        borderColor: getVariable('secondary-border'),\r\n        boxShadow: getVariable('secondary-shadow'),\r\n      },\r\n      secondaryBackground: {\r\n        backgroundColor: getVariable('secondary-background'),\r\n        color: getVariable('secondary'),\r\n        borderColor: getVariable('secondary-border'),\r\n      },\r\n      success: {\r\n        backgroundColor: getVariable('success'),\r\n        color: getVariable('success-foreground'),\r\n        borderColor: getVariable('success-border'),\r\n        boxShadow: getVariable('success-shadow'),\r\n      },\r\n      successBackground: {\r\n        backgroundColor: getVariable('success-background'),\r\n        color: getVariable('success'),\r\n        borderColor: getVariable('success-border'),\r\n      },\r\n      warning: {\r\n        backgroundColor: getVariable('warning'),\r\n        color: getVariable('warning-foreground'),\r\n        borderColor: getVariable('warning-border'),\r\n        boxShadow: getVariable('warning-shadow'),\r\n      },\r\n      warningBackground: {\r\n        backgroundColor: getVariable('warning-background'),\r\n        color: getVariable('warning'),\r\n        borderColor: getVariable('warning-border'),\r\n      },\r\n      destructive: {\r\n        backgroundColor: getVariable('destructive'),\r\n        color: getVariable('destructive-foreground'),\r\n        borderColor: getVariable('destructive-border'),\r\n        boxShadow: getVariable('destructive-shadow'),\r\n      },\r\n      destructiveBackground: {\r\n        backgroundColor: getVariable('destructive-background'),\r\n        color: getVariable('destructive'),\r\n        borderColor: getVariable('destructive-border'),\r\n      },\r\n      info: {\r\n        backgroundColor: getVariable('info'),\r\n        color: getVariable('info-foreground'),\r\n        borderColor: getVariable('info-border'),\r\n        boxShadow: getVariable('info-shadow'),\r\n      },\r\n      infoBackground: {\r\n        backgroundColor: getVariable('info-background'),\r\n        color: getVariable('info'),\r\n        borderColor: getVariable('info-border'),\r\n      },\r\n      card: {\r\n        backgroundColor: getVariable('card'),\r\n        color: getVariable('card-foreground'),\r\n        borderColor: getVariable('border'),\r\n      },\r\n      background: {\r\n        backgroundColor: getVariable('background'),\r\n        color: getVariable('foreground'),\r\n        borderColor: getVariable('background-border'),\r\n      },\r\n      // Legacy compatibility\r\n      error: {\r\n        backgroundColor: getVariable('error'),\r\n        color: getVariable('error-foreground'),\r\n      },\r\n    },\r\n    \r\n    // Shadows\r\n    shadows: {\r\n      sm: getVariable('shadow-sm'),\r\n      md: getVariable('shadow'),\r\n      lg: getVariable('shadow-md'),\r\n      xl: getVariable('shadow-lg'),\r\n    },\r\n  };\r\n}\r\n","import React from 'react';\r\nimport type { ButtonColor, ButtonVariant, ButtonSize, ButtonShape } from './Button.types';\r\n\r\n// Get color variables based on color prop\r\nexport const getColorVariables = (color: ButtonColor, customColor: string | undefined, cssVars: any) => {\r\n  if (color === 'custom' && customColor) {\r\n    return {\r\n      main: customColor,\r\n      foreground: '#ffffff', // Default to white text for custom colors\r\n      hover: customColor + '20', // Add opacity for hover\r\n      disabled: customColor + '40',\r\n    };\r\n  }\r\n\r\n\r\n  const colorMap: Record<string, any> = {\r\n    primary: {\r\n      main: cssVars.primary,\r\n      background: cssVars.primaryBackground,\r\n      foreground: cssVars.primaryForeground,\r\n      hover: cssVars.primaryHover,\r\n      accent: cssVars.primaryAccent,\r\n      shadow: cssVars.primaryShadow,\r\n      disabled: cssVars.primaryDisabled,\r\n      border: cssVars.primaryBorder,\r\n    },\r\n    secondary: {\r\n      main: cssVars.secondary,\r\n      background: cssVars.secondaryBackground,\r\n      foreground: cssVars.secondaryForeground,\r\n      hover: cssVars.secondaryHover,\r\n      accent: cssVars.secondaryAccent,\r\n      shadow: cssVars.secondaryShadow,\r\n      disabled: cssVars.secondaryDisabled,\r\n      border: cssVars.secondaryBorder,\r\n    },\r\n    success: {\r\n      main: cssVars.success,\r\n      background: cssVars.successBackground,\r\n      foreground: cssVars.successForeground,\r\n      hover: cssVars.successHover,\r\n      accent: cssVars.successAccent,\r\n      shadow: cssVars.successShadow,\r\n      disabled: cssVars.successDisabled,\r\n      border: cssVars.successBorder,\r\n    },\r\n    warning: {\r\n      main: cssVars.warning,\r\n      background: cssVars.warningBackground,\r\n      foreground: cssVars.warningForeground,\r\n      hover: cssVars.warningHover,\r\n      accent: cssVars.warningAccent,\r\n      shadow: cssVars.warningShadow,\r\n      disabled: cssVars.warningDisabled,\r\n      border: cssVars.warningBorder,\r\n    },\r\n    destructive: {\r\n      main: cssVars.destructive,\r\n      background: cssVars.destructiveBackground,\r\n      foreground: cssVars.destructiveForeground,\r\n      hover: cssVars.destructiveHover,\r\n      accent: cssVars.destructiveAccent,\r\n      shadow: cssVars.destructiveShadow,\r\n      disabled: cssVars.destructiveDisabled,\r\n      border: cssVars.destructiveBorder,\r\n    },\r\n    info: {\r\n      main: cssVars.info,\r\n      background: cssVars.infoBackground,\r\n      foreground: cssVars.infoForeground,\r\n      hover: cssVars.infoHover,\r\n      accent: cssVars.infoAccent,\r\n      shadow: cssVars.infoShadow,\r\n      disabled: cssVars.infoDisabled,\r\n      border: cssVars.infoBorder,\r\n    },\r\n  };\r\n\r\n  return colorMap[color] || colorMap.primary;\r\n};\r\n\r\nexport const getVariantStyles = (\r\n  color: ButtonColor,\r\n  variant: ButtonVariant,\r\n  customColor: string | undefined,\r\n  cssVars: any\r\n) => {\r\n  const colors = getColorVariables(color, customColor, cssVars);\r\n\r\n  const baseStyles = {\r\n    borderTopWidth: '2px',\r\n    borderRightWidth: '2px',\r\n    borderBottomWidth: '2px',\r\n    borderLeftWidth: '2px',\r\n    borderTopStyle: 'solid' as const,\r\n    borderRightStyle: 'solid' as const,\r\n    borderBottomStyle: 'solid' as const,\r\n    borderLeftStyle: 'solid' as const,\r\n  };\r\n\r\n  switch (variant) {\r\n    case 'solid':\r\n      return {\r\n        backgroundColor: colors.accent || colors.main,\r\n        color: colors.foreground,\r\n        borderTopColor: colors.accent || colors.main,\r\n        borderRightColor: colors.accent || colors.main,\r\n        borderLeftColor: colors.accent || colors.main,\r\n        borderBottomColor: colors.accent || colors.main,\r\n        ...baseStyles,\r\n        '&:hover:not(:disabled)': {\r\n          backgroundColor: colors.hover,\r\n          borderTopColor: colors.hover,\r\n          borderRightColor: colors.hover,\r\n          borderLeftColor: colors.hover,\r\n          borderBottomColor: colors.hover,\r\n        },\r\n      };\r\n    case 'outline':\r\n      return {\r\n        backgroundColor: cssVars.background,\r\n        color: colors.main,\r\n        borderTopColor: colors.main,\r\n        borderRightColor: colors.main,\r\n        borderLeftColor: colors.main,\r\n        borderBottomColor: colors.main,\r\n        ...baseStyles,\r\n        '&:hover:not(:disabled)': {\r\n          backgroundColor: colors.background || colors.main + '10',\r\n          borderTopColor: colors.hover,\r\n          borderRightColor: colors.hover,\r\n          borderLeftColor: colors.hover,\r\n          borderBottomColor: colors.hover,\r\n          color: colors.hover,\r\n        },\r\n      };\r\n    case 'ghost':\r\n      return {\r\n        backgroundColor: 'transparent',\r\n        color: colors.main,\r\n        borderTopColor: 'transparent',\r\n        borderRightColor: 'transparent',\r\n        borderLeftColor: 'transparent',\r\n        borderBottomColor: 'transparent',\r\n        ...baseStyles,\r\n        '&:hover:not(:disabled)': {\r\n          backgroundColor: colors.background || colors.main + '10',\r\n          color: colors.hover,\r\n        },\r\n      };\r\n    case 'glassmorphic':\r\n      // Create reflection gradient lines using the hover color with transparency\r\n      const reflectionColor = colors.hover || colors.main || '#ffffff';\r\n      const topReflectionGradient = `linear-gradient(135deg, transparent 0%, ${reflectionColor}20 20%, ${reflectionColor}15 25%, transparent 35%)`;\r\n      const bottomReflectionGradient = `linear-gradient(135deg, transparent 45%, ${reflectionColor}25 55%, ${reflectionColor}20 65%, transparent 80%)`;\r\n      \r\n      return {\r\n        background: `\r\n          ${topReflectionGradient},\r\n          ${bottomReflectionGradient},\r\n          rgba(255, 255, 255, 0.1)\r\n        `,\r\n        backdropFilter: 'blur(10px)',\r\n        color: colors.main,\r\n        boxShadow: `0 8px 32px 0 ${colors.shadow || 'rgba(31, 38, 135, 0.37)'}`,\r\n        position: 'relative',\r\n        overflow: 'hidden',\r\n        ...baseStyles,\r\n        borderTopColor: 'rgba(255, 255, 255, 0.2)',\r\n        borderRightColor: 'rgba(255, 255, 255, 0.2)',\r\n        borderLeftColor: 'rgba(255, 255, 255, 0.2)',\r\n        borderBottomColor: 'rgba(255, 255, 255, 0.2)',\r\n        '&:hover:not(:disabled)': {\r\n          background: `\r\n            linear-gradient(135deg, transparent 0%, ${reflectionColor}30 20%, ${reflectionColor}25 25%, transparent 35%),\r\n            linear-gradient(135deg, transparent 45%, ${reflectionColor}35 55%, ${reflectionColor}30 65%, transparent 80%),\r\n            rgba(255, 255, 255, 0.15)\r\n          `,\r\n          backdropFilter: 'blur(15px)',\r\n          borderTopColor: 'rgba(255, 255, 255, 0.3)',\r\n          borderRightColor: 'rgba(255, 255, 255, 0.3)',\r\n          borderLeftColor: 'rgba(255, 255, 255, 0.3)',\r\n          borderBottomColor: 'rgba(255, 255, 255, 0.3)',\r\n          transform: 'translateY(-1px)',\r\n          boxShadow: `0 12px 40px 0 ${colors.shadow || 'rgba(31, 38, 135, 0.45)'}`,\r\n        },\r\n      };\r\n    default:\r\n      return {\r\n        backgroundColor: colors.main,\r\n        color: colors.foreground,\r\n        borderTopColor: colors.main,\r\n        borderRightColor: colors.main,\r\n        borderLeftColor: colors.main,\r\n        borderBottomColor: colors.main,\r\n        ...baseStyles,\r\n      };\r\n  }\r\n};\r\n\r\nexport const getSizeStyles = (size: ButtonSize): React.CSSProperties => {\r\n  const sizeMap = {\r\n    xs: { \r\n      paddingTop: '4px',\r\n      paddingRight: '12px', \r\n      paddingBottom: '4px',\r\n      paddingLeft: '12px',\r\n      fontSize: '14px', \r\n      minWidth: '82px', \r\n      height: '40px' \r\n    },\r\n    sm: { \r\n      paddingTop: '6px',\r\n      paddingRight: '12px', \r\n      paddingBottom: '6px',\r\n      paddingLeft: '12px',\r\n      fontSize: '14px', \r\n      minWidth: '82px', \r\n      height: '40px' \r\n    },\r\n    md: { \r\n      paddingTop: '8px',\r\n      paddingRight: '16px', \r\n      paddingBottom: '8px',\r\n      paddingLeft: '16px',\r\n      fontSize: '16px', \r\n      minWidth: '112px', \r\n      height: '48px' \r\n    },\r\n    lg: { \r\n      paddingTop: '10px',\r\n      paddingRight: '20px', \r\n      paddingBottom: '10px',\r\n      paddingLeft: '20px',\r\n      fontSize: '16px', \r\n      minWidth: '112px', \r\n      height: '52px' \r\n    },\r\n    xl: { \r\n      paddingTop: '12px',\r\n      paddingRight: '24px', \r\n      paddingBottom: '12px',\r\n      paddingLeft: '24px',\r\n      fontSize: '18px', \r\n      minWidth: '142px', \r\n      height: '60px' \r\n    },\r\n  };\r\n  return sizeMap[size];\r\n};\r\n\r\n// Get shape styles based on shape prop\r\nexport const getShapeStyles = (shape: ButtonShape): React.CSSProperties => {\r\n  switch (shape) {\r\n    case 'sharp':\r\n      return { borderRadius: '0' };\r\n    case 'round':\r\n      return { borderRadius: '12px' };\r\n    case 'pill':\r\n      return { borderRadius: '9999px' };\r\n    default:\r\n      return { borderRadius: '12px' };\r\n  }\r\n};\r\n\r\nexport const getIconSize = (buttonSize: ButtonSize): 'xs' | 'sm' | 'md' | 'lg' | 'xl' => {\r\n  const iconSizeMap = {\r\n    xs: 'sm' as const,\r\n    sm: 'sm' as const,\r\n    md: 'md' as const,\r\n    lg: 'md' as const,\r\n    xl: 'lg' as const,\r\n  };\r\n  return iconSizeMap[buttonSize];\r\n};\r\n\r\n// Get icon-only styles (square/circular based on shape)\r\nexport const getIconOnlyStyles = (size: ButtonSize, shape: ButtonShape): React.CSSProperties => {\r\n  // Get the height from the size styles to make width match height\r\n  const sizeStyles = getSizeStyles(size);\r\n  const height = sizeStyles.height;\r\n  \r\n  return {\r\n    width: height, // Make width equal to height for square/circle\r\n    minWidth: height, // Override minWidth from size styles\r\n    paddingLeft: '0', // Center the icon\r\n    paddingRight: '0', // Center the icon\r\n    aspectRatio: '1', // Ensure 1:1 aspect ratio\r\n  };\r\n};\r\n\r\nexport const createBaseStyles = (\r\n  fullWidth: boolean,\r\n  isDisabled: boolean,\r\n  hasIcon: boolean,\r\n  shape: ButtonShape,\r\n  animationsEnabled: boolean,\r\n  // Legacy support\r\n  rounded?: boolean\r\n): React.CSSProperties => {\r\n  // Handle legacy rounded prop\r\n  const finalShape = rounded !== undefined ? (rounded ? 'pill' : 'round') : shape;\r\n  \r\n  return {\r\n    width: fullWidth ? '100%' : 'auto',\r\n    opacity: isDisabled ? 0.6 : 1,\r\n    cursor: isDisabled ? 'not-allowed' : 'pointer',\r\n    pointerEvents: isDisabled ? 'none' : 'auto',\r\n    transition: animationsEnabled \r\n      ? 'background-color var(--duration-fast) var(--animation-smooth), color var(--duration-fast) var(--animation-smooth), border-color var(--duration-fast) var(--animation-smooth), transform var(--duration-fast) var(--animation-smooth), box-shadow var(--duration-fast) var(--animation-smooth)'\r\n      : 'none',\r\n    display: 'inline-flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    verticalAlign: 'top',\r\n    fontWeight: '500',\r\n    outline: 'none',\r\n    position: 'relative',\r\n    fontFamily: 'inherit',\r\n    userSelect: 'none',\r\n    ...getShapeStyles(finalShape),\r\n  };\r\n};\r\n\r\n\r\n// Get isometric container styles (wrapper for button + shadow)\r\nexport const getIsometricContainerStyles = (): React.CSSProperties => ({\r\n  position: 'relative',\r\n  display: 'inline-block',\r\n});\r\n\r\n// Get isometric button styles (the main button element)\r\nexport const getIsometricButtonStyles = (\r\n  color: any,\r\n  variant: string,\r\n  animationsEnabled: boolean\r\n): React.CSSProperties => {\r\n  const baseStyles = {\r\n    position: 'relative' as const,\r\n    zIndex: 1,\r\n    transform: 'translate(0, 0)',\r\n    transition: animationsEnabled\r\n      ? 'transform 0.3s cubic-bezier(0.34, 1.56, 0.64, 1)'\r\n      : 'none',\r\n  };\r\n\r\n  // For solid variant with isometric, override border colors to use foreground (white)\r\n  if (variant === 'solid') {\r\n    return {\r\n      ...baseStyles,\r\n      borderTopColor: color.foreground,\r\n      borderRightColor: color.foreground,\r\n      borderLeftColor: color.foreground,\r\n      borderBottomColor: color.foreground,\r\n    };\r\n  }\r\n\r\n  return baseStyles;\r\n};\r\n\r\n// Get isometric shadow element styles\r\nexport const getIsometricShadowStyles = (\r\n  color: any,\r\n  variant: string,\r\n  shape: ButtonShape,\r\n  size: any,\r\n  animationsEnabled: boolean\r\n): any => {\r\n  // Ghost and glassmorphic variants don't support isometric animation\r\n  if (variant === 'ghost' || variant === 'glassmorphic') {\r\n    return { display: 'none' };\r\n  }\r\n\r\n  // Get the same border radius as the button based on shape\r\n  const shapeStyles = getShapeStyles(shape);\r\n\r\n  // Base shadow styles\r\n  const baseStyles = {\r\n    position: 'absolute' as const,\r\n    top: '4px',\r\n    left: '4px',\r\n    width: '100%',\r\n    height: '100%',\r\n    ...shapeStyles, // Apply the same border radius as the button\r\n    zIndex: 0,\r\n    transition: animationsEnabled\r\n      ? 'transform 0.3s cubic-bezier(0.34, 1.56, 0.64, 1)'\r\n      : 'none',\r\n    transform: 'translate(0, 0)',\r\n  };\r\n\r\n  // Different shadow styling based on variant\r\n  if (variant === 'solid') {\r\n    return {\r\n      ...baseStyles,\r\n      backgroundColor: color.foreground, // White background for solid variant\r\n    };\r\n  } else {\r\n    // For outline variant, use the main color\r\n    return {\r\n      ...baseStyles,\r\n      backgroundColor: color.main,\r\n    };\r\n  }\r\n};\r\n\r\n// Get isometric hover styles for button\r\nexport const getIsometricHoverButtonStyles = (): React.CSSProperties => ({\r\n  transform: 'translate(3px, 3px)',\r\n});\r\n\r\n// Get isometric hover styles for shadow\r\nexport const getIsometricHoverShadowStyles = (): React.CSSProperties => ({\r\n  transform: 'translate(-1px, -1px)',\r\n});\r\n","import React from 'react';\r\nimport type { IconPosition } from './Button.types';\r\nimport { getIconSize } from './Button.styles';\r\nimport type { ButtonSize } from './Button.types';\r\n\r\nexport const renderIcon = (\r\n  iconElement: React.ReactNode,\r\n  buttonSize: ButtonSize\r\n): React.ReactNode => {\r\n  if (!iconElement) return null;\r\n  \r\n  if (React.isValidElement(iconElement)) {\r\n    return React.cloneElement(iconElement as React.ReactElement<any>, {\r\n      size: getIconSize(buttonSize),\r\n    });\r\n  }\r\n  \r\n  return iconElement;\r\n};\r\n\r\nexport const createIconContainer = (\r\n  icon: React.ReactNode,\r\n  position: IconPosition,\r\n  buttonSize: ButtonSize\r\n): React.ReactElement => {\r\n  // Responsive spacing based on button size\r\n  const getSpacing = (size: ButtonSize): string => {\r\n    const spacingMap = {\r\n      xs: '2px',\r\n      sm: '3px',\r\n      md: '4px',\r\n      lg: '5px',\r\n      xl: '6px',\r\n    };\r\n    return spacingMap[size];\r\n  };\r\n\r\n  const spacing = getSpacing(buttonSize);\r\n  // Apply both left and right margins to both leading and trailing icons\r\n  const marginStyle = { marginLeft: spacing, marginRight: spacing };\r\n\r\n  return (\r\n    <span style={{ \r\n      display: 'flex', \r\n      alignItems: 'center',\r\n      ...marginStyle\r\n    }}>\r\n      {renderIcon(icon, buttonSize)}\r\n    </span>\r\n  );\r\n};\r\n\r\nexport const createTextContainer = (children: React.ReactNode): React.ReactElement => (\r\n  <span style={{ \r\n    flex: 1, \r\n    display: 'flex', \r\n    justifyContent: 'center', \r\n    alignItems: 'center'\r\n  }}>\r\n    {children}\r\n  </span>\r\n);\r\n\r\nexport const createSpacerElement = (): React.ReactElement => (\r\n  <span style={{ width: '1px' }} />\r\n);\r\n\r\nexport const createCenteredContent = (\r\n  icon: React.ReactNode,\r\n  iconPosition: IconPosition,\r\n  buttonSize: ButtonSize,\r\n  children: React.ReactNode\r\n): React.ReactElement => {\r\n  // Check if there are actual children (text content)\r\n  const hasChildren = Boolean(children && (typeof children === 'string' ? children.trim() : children));\r\n  \r\n  // If there are no children, just render the icon centered without any spacing\r\n  if (!hasChildren) {\r\n    return (\r\n      <span style={{ \r\n        display: 'flex', \r\n        alignItems: 'center',\r\n        justifyContent: 'center'\r\n      }}>\r\n        {renderIcon(icon, buttonSize)}\r\n      </span>\r\n    );\r\n  }\r\n\r\n  // Responsive spacing based on button size (only when there are children)\r\n  const getSpacing = (size: ButtonSize): string => {\r\n    const spacingMap = {\r\n      xs: '2px',\r\n      sm: '3px',\r\n      md: '4px',\r\n      lg: '5px',\r\n      xl: '6px',\r\n    };\r\n    return spacingMap[size];\r\n  };\r\n\r\n  const spacing = getSpacing(buttonSize);\r\n\r\n  return (\r\n    <span style={{ \r\n      display: 'flex', \r\n      alignItems: 'center',\r\n      justifyContent: 'center',\r\n      gap: spacing\r\n    }}>\r\n      {iconPosition === 'leading' && renderIcon(icon, buttonSize)}\r\n      <span>{children}</span>\r\n      {iconPosition === 'trailing' && renderIcon(icon, buttonSize)}\r\n    </span>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport type { ProgressIndicatorColor, ProgressIndicatorVariant, ProgressIndicatorSize, ProgressIndicatorShape, ProgressIndicatorType } from './ProgressIndicator.types';\r\n\r\n// Get color variables based on color prop\r\nexport const getColorVariables = (color: ProgressIndicatorColor, customColor: string | undefined, cssVars: any) => {\r\n  if (color === 'custom' && customColor) {\r\n    return {\r\n      main: customColor,\r\n      foreground: '#ffffff',\r\n      background: customColor + '10',\r\n      border: customColor,\r\n      hover: customColor + '20',\r\n    };\r\n  }\r\n\r\n  const colorMap: Record<string, any> = {\r\n    primary: {\r\n      main: cssVars.primary,\r\n      background: cssVars.primaryBackground,\r\n      foreground: cssVars.primaryForeground,\r\n      hover: cssVars.primaryHover,\r\n      accent: cssVars.primaryAccent,\r\n      border: cssVars.primaryBorder,\r\n      shadow: cssVars.primaryShadow,\r\n    },\r\n    secondary: {\r\n      main: cssVars.secondary,\r\n      background: cssVars.secondaryBackground,\r\n      foreground: cssVars.secondaryForeground,\r\n      hover: cssVars.secondaryHover,\r\n      accent: cssVars.secondaryAccent,\r\n      border: cssVars.secondaryBorder,\r\n      shadow: cssVars.secondaryShadow,\r\n    },\r\n    success: {\r\n      main: cssVars.success,\r\n      background: cssVars.successBackground,\r\n      foreground: cssVars.successForeground,\r\n      hover: cssVars.successHover,\r\n      accent: cssVars.successAccent,\r\n      border: cssVars.successBorder,\r\n      shadow: cssVars.successShadow,\r\n    },\r\n    warning: {\r\n      main: cssVars.warning,\r\n      background: cssVars.warningBackground,\r\n      foreground: cssVars.warningForeground,\r\n      hover: cssVars.warningHover,\r\n      accent: cssVars.warningAccent,\r\n      border: cssVars.warningBorder,\r\n      shadow: cssVars.warningShadow,\r\n    },\r\n    destructive: {\r\n      main: cssVars.destructive,\r\n      background: cssVars.destructiveBackground,\r\n      foreground: cssVars.destructiveForeground,\r\n      hover: cssVars.destructiveHover,\r\n      accent: cssVars.destructiveAccent,\r\n      border: cssVars.destructiveBorder,\r\n      shadow: cssVars.destructiveShadow,\r\n    },\r\n    info: {\r\n      main: cssVars.info,\r\n      background: cssVars.infoBackground,\r\n      foreground: cssVars.infoForeground,\r\n      hover: cssVars.infoHover,\r\n      accent: cssVars.infoAccent,\r\n      border: cssVars.infoBorder,\r\n      shadow: cssVars.infoShadow,\r\n    },\r\n  };\r\n\r\n  return colorMap[color] || colorMap.primary;\r\n};\r\n\r\n// Get shape styles based on shape prop\r\nexport const getShapeStyles = (shape: ProgressIndicatorShape): React.CSSProperties => {\r\n  switch (shape) {\r\n    case 'sharp':\r\n      return { borderRadius: '0' };\r\n    case 'round':\r\n      return { borderRadius: '12px' };\r\n    case 'pill':\r\n      return { borderRadius: '9999px' };\r\n    default:\r\n      return { borderRadius: '12px' };\r\n  }\r\n};\r\n\r\n// Get size configuration\r\nexport const getSizeConfig = (size: ProgressIndicatorSize) => {\r\n  const configs = {\r\n    xs: {\r\n      height: '4px',\r\n      spinnerSize: '16px',\r\n      spinnerThickness: '2px',\r\n      circularSize: '24px',\r\n      circularThickness: '2px',\r\n      fontSize: '10px',\r\n    },\r\n    sm: {\r\n      height: '6px',\r\n      spinnerSize: '20px',\r\n      spinnerThickness: '2px',\r\n      circularSize: '32px',\r\n      circularThickness: '3px',\r\n      fontSize: '11px',\r\n    },\r\n    md: {\r\n      height: '8px',\r\n      spinnerSize: '24px',\r\n      spinnerThickness: '3px',\r\n      circularSize: '40px',\r\n      circularThickness: '4px',\r\n      fontSize: '12px',\r\n    },\r\n    lg: {\r\n      height: '12px',\r\n      spinnerSize: '32px',\r\n      spinnerThickness: '4px',\r\n      circularSize: '48px',\r\n      circularThickness: '5px',\r\n      fontSize: '14px',\r\n    },\r\n    xl: {\r\n      height: '16px',\r\n      spinnerSize: '40px',\r\n      spinnerThickness: '5px',\r\n      circularSize: '56px',\r\n      circularThickness: '6px',\r\n      fontSize: '16px',\r\n    },\r\n  };\r\n\r\n  return configs[size];\r\n};\r\n\r\n// Container styles\r\nexport const createProgressIndicatorContainerStyles = (\r\n  shape: ProgressIndicatorShape,\r\n  width: string | number | undefined,\r\n  height: string | number | undefined,\r\n  animationsEnabled: boolean\r\n): React.CSSProperties => {\r\n  return {\r\n    position: 'relative',\r\n    display: 'inline-flex',\r\n    alignItems: 'center',\r\n    width: width || 'auto',\r\n    height: height || 'auto',\r\n    transition: animationsEnabled \r\n      ? 'all var(--duration-fast) var(--animation-smooth)'\r\n      : 'none',\r\n    ...getShapeStyles(shape),\r\n  };\r\n};\r\n\r\n// Bar progress styles\r\nexport const getBarProgressStyles = (\r\n  color: ProgressIndicatorColor,\r\n  customColor: string | undefined,\r\n  variant: ProgressIndicatorVariant,\r\n  size: ProgressIndicatorSize,\r\n  shape: ProgressIndicatorShape,\r\n  width: string | number | undefined,\r\n  disabled: boolean,\r\n  animationsEnabled: boolean,\r\n  cssVars: any\r\n): any => {\r\n  const colors = getColorVariables(color, customColor, cssVars);\r\n  const sizeConfig = getSizeConfig(size);\r\n\r\n  const baseStyles: React.CSSProperties = {\r\n    position: 'relative',\r\n    width: width || '200px',\r\n    height: sizeConfig.height,\r\n    overflow: 'visible', // Allow text to overflow outside the bar\r\n    transition: animationsEnabled\r\n      ? 'background-color var(--duration-fast) var(--animation-smooth)'\r\n      : 'none',\r\n    ...getShapeStyles(shape),\r\n  };\r\n\r\n  // Variant styles\r\n  const variantStyles = (() => {\r\n    switch (variant) {\r\n      case 'solid':\r\n        return {\r\n          backgroundColor: colors.background,\r\n          border: 'none',\r\n        };\r\n      case 'ghost':\r\n        return {\r\n          backgroundColor: 'transparent',\r\n          border: `1px solid transparent`,\r\n        };\r\n      case 'glassmorphic':\r\n        const reflectionColor = colors.hover || colors.main || '#ffffff';\r\n        const topReflectionGradient = `linear-gradient(135deg, transparent 0%, ${reflectionColor}20 20%, ${reflectionColor}15 25%, transparent 35%)`;\r\n        const bottomReflectionGradient = `linear-gradient(135deg, transparent 45%, ${reflectionColor}25 55%, ${reflectionColor}20 65%, transparent 80%)`;\r\n\r\n        return {\r\n          background: `\r\n            ${topReflectionGradient},\r\n            ${bottomReflectionGradient},\r\n            ${colors.background}\r\n          `,\r\n          backdropFilter: 'blur(10px)',\r\n          WebkitBackdropFilter: 'blur(10px)',\r\n          border: `1px solid ${colors.border || cssVars.border}`,\r\n          boxShadow: `0 8px 32px 0 ${colors.shadow || 'rgba(31, 38, 135, 0.37)'}`,\r\n          position: 'relative',\r\n          overflow: 'visible', // Allow text to overflow even for glassmorphic\r\n        };\r\n      case 'outline':\r\n      default:\r\n        return {\r\n          backgroundColor: cssVars.muted,\r\n          border: `1px solid ${cssVars.border}`,\r\n        };\r\n    }\r\n  })();\r\n\r\n  // Disabled styles\r\n  if (disabled) {\r\n    baseStyles.opacity = 0.6;\r\n  }\r\n\r\n  return {\r\n    ...baseStyles,\r\n    ...variantStyles,\r\n  };\r\n};\r\n\r\n// Progress fill styles\r\nexport const getProgressFillStyles = (\r\n  color: ProgressIndicatorColor,\r\n  customColor: string | undefined,\r\n  variant: ProgressIndicatorVariant,\r\n  size: ProgressIndicatorSize,\r\n  shape: ProgressIndicatorShape,\r\n  progress: number,\r\n  striped: boolean,\r\n  stripedAnimation: boolean,\r\n  indeterminate: boolean,\r\n  animationsEnabled: boolean,\r\n  cssVars: any\r\n): React.CSSProperties => {\r\n  const colors = getColorVariables(color, customColor, cssVars);\r\n  const sizeConfig = getSizeConfig(size);\r\n\r\n  const baseStyles: React.CSSProperties = {\r\n    height: '100%',\r\n    transition: animationsEnabled && !indeterminate \r\n      ? 'width var(--duration-smooth) var(--animation-smooth)' \r\n      : 'none',\r\n    position: 'relative',\r\n    ...getShapeStyles(shape),\r\n  };\r\n\r\n  // Variant styles\r\n  const variantStyles = (() => {\r\n    switch (variant) {\r\n      case 'solid':\r\n        return {\r\n          backgroundColor: colors.accent || colors.main,\r\n        };\r\n      case 'ghost':\r\n        return {\r\n          backgroundColor: colors.main,\r\n        };\r\n      case 'glassmorphic':\r\n        const reflectionColor = colors.hover || colors.main || '#ffffff';\r\n        const topReflectionGradient = `linear-gradient(135deg, transparent 0%, ${reflectionColor}30 20%, ${reflectionColor}25 25%, transparent 35%)`;\r\n        const bottomReflectionGradient = `linear-gradient(135deg, transparent 45%, ${reflectionColor}35 55%, ${reflectionColor}30 65%, transparent 80%)`;\r\n\r\n        return {\r\n          background: `\r\n            ${topReflectionGradient},\r\n            ${bottomReflectionGradient},\r\n            ${colors.accent || colors.main}\r\n          `,\r\n          backdropFilter: 'blur(5px)',\r\n          WebkitBackdropFilter: 'blur(5px)',\r\n        };\r\n      case 'outline':\r\n      default:\r\n        return {\r\n          backgroundColor: colors.main,\r\n        };\r\n    }\r\n  })();\r\n\r\n  // Width based on progress or indeterminate state\r\n  if (indeterminate) {\r\n    baseStyles.width = '30%'; // Fixed width bar that will slide within track\r\n    baseStyles.animation = animationsEnabled\r\n      ? 'progress-indeterminate 2s ease-in-out infinite'\r\n      : 'none';\r\n  } else {\r\n    baseStyles.width = `${Math.max(0, Math.min(100, progress))}%`;\r\n  }\r\n\r\n  // Striped pattern\r\n  if (striped) {\r\n    baseStyles.backgroundImage = `linear-gradient(45deg,\r\n      rgba(255,255,255,.15) 25%,\r\n      transparent 25%,\r\n      transparent 50%,\r\n      rgba(255,255,255,.15) 50%,\r\n      rgba(255,255,255,.15) 75%,\r\n      transparent 75%,\r\n      transparent)`;\r\n    baseStyles.backgroundSize = '1rem 1rem';\r\n    \r\n    if (stripedAnimation && animationsEnabled) {\r\n      baseStyles.animation = 'progress-stripes 1s linear infinite';\r\n    }\r\n  }\r\n\r\n  return {\r\n    ...baseStyles,\r\n    ...variantStyles,\r\n  };\r\n};\r\n\r\n// Spinner styles\r\nexport const getSpinnerStyles = (\r\n  color: ProgressIndicatorColor,\r\n  customColor: string | undefined,\r\n  size: ProgressIndicatorSize,\r\n  disabled: boolean,\r\n  animationsEnabled: boolean,\r\n  cssVars: any\r\n): React.CSSProperties => {\r\n  const colors = getColorVariables(color, customColor, cssVars);\r\n  const sizeConfig = getSizeConfig(size);\r\n\r\n  const baseStyles: React.CSSProperties = {\r\n    width: sizeConfig.spinnerSize,\r\n    height: sizeConfig.spinnerSize,\r\n    border: `${sizeConfig.spinnerThickness} solid ${cssVars.muted}`,\r\n    borderTopColor: colors.main,\r\n    borderRadius: '50%',\r\n    animation: animationsEnabled \r\n      ? 'progress-spinner 1s linear infinite' \r\n      : 'none',\r\n  };\r\n\r\n  if (disabled) {\r\n    baseStyles.opacity = 0.6;\r\n  }\r\n\r\n  return baseStyles;\r\n};\r\n\r\n// Circular progress styles\r\nexport const getCircularProgressStyles = (\r\n  color: ProgressIndicatorColor,\r\n  customColor: string | undefined,\r\n  variant: ProgressIndicatorVariant,\r\n  size: ProgressIndicatorSize,\r\n  progress: number,\r\n  disabled: boolean,\r\n  animationsEnabled: boolean,\r\n  cssVars: any\r\n): React.CSSProperties => {\r\n  const colors = getColorVariables(color, customColor, cssVars);\r\n  const sizeConfig = getSizeConfig(size);\r\n\r\n  const baseStyles: React.CSSProperties = {\r\n    width: sizeConfig.circularSize,\r\n    height: sizeConfig.circularSize,\r\n    opacity: disabled ? 0.6 : 1,\r\n  };\r\n\r\n  // Add glassmorphic container effects if needed\r\n  if (variant === 'glassmorphic') {\r\n    const reflectionColor = colors.hover || colors.main || '#ffffff';\r\n    const topReflectionGradient = `linear-gradient(135deg, transparent 0%, ${reflectionColor}20 20%, ${reflectionColor}15 25%, transparent 35%)`;\r\n    const bottomReflectionGradient = `linear-gradient(135deg, transparent 45%, ${reflectionColor}25 55%, ${reflectionColor}20 65%, transparent 80%)`;\r\n\r\n    return {\r\n      ...baseStyles,\r\n      background: `\r\n        ${topReflectionGradient},\r\n        ${bottomReflectionGradient},\r\n        ${colors.background}\r\n      `,\r\n      backdropFilter: 'blur(10px)',\r\n      WebkitBackdropFilter: 'blur(10px)',\r\n      borderRadius: '50%',\r\n      border: `1px solid ${colors.border || cssVars.border}`,\r\n      boxShadow: `0 8px 32px 0 ${colors.shadow || 'rgba(31, 38, 135, 0.37)'}`,\r\n      position: 'relative',\r\n      overflow: 'hidden',\r\n    };\r\n  }\r\n\r\n  return baseStyles;\r\n};\r\n\r\n// Circular progress SVG styles\r\nexport const getCircularProgressSVGStyles = (\r\n  color: ProgressIndicatorColor,\r\n  customColor: string | undefined,\r\n  variant: ProgressIndicatorVariant,\r\n  size: ProgressIndicatorSize,\r\n  cssVars: any\r\n) => {\r\n  const colors = getColorVariables(color, customColor, cssVars);\r\n  const sizeConfig = getSizeConfig(size);\r\n\r\n  const radius = 16;\r\n  const circumference = 2 * Math.PI * radius;\r\n\r\n  // Get variant-specific track and progress styles\r\n  const getVariantStyles = () => {\r\n    switch (variant) {\r\n      case 'solid':\r\n        return {\r\n          track: {\r\n            stroke: colors.background,\r\n          },\r\n          progress: {\r\n            stroke: colors.accent || colors.main,\r\n          }\r\n        };\r\n      case 'ghost':\r\n        return {\r\n          track: {\r\n            stroke: 'transparent',\r\n          },\r\n          progress: {\r\n            stroke: colors.main,\r\n          }\r\n        };\r\n      case 'glassmorphic':\r\n        // For glassmorphic, match the bar variant styling approach\r\n        const reflectionColor = colors.hover || colors.main || '#ffffff';\r\n        return {\r\n          track: {\r\n            stroke: colors.background,\r\n            strokeOpacity: 1,\r\n          },\r\n          progress: {\r\n            stroke: `url(#glassmorphic-gradient-${color})`,\r\n          },\r\n          gradientDefs: {\r\n            gradientId: `glassmorphic-gradient-${color}`,\r\n            stops: [\r\n              { offset: '0%', stopColor: colors.accent || colors.main, stopOpacity: 1 },\r\n              { offset: '50%', stopColor: reflectionColor, stopOpacity: 0.8 },\r\n              { offset: '100%', stopColor: colors.accent || colors.main, stopOpacity: 1 }\r\n            ]\r\n          }\r\n        };\r\n      case 'outline':\r\n      default:\r\n        return {\r\n          track: {\r\n            stroke: cssVars.muted,\r\n          },\r\n          progress: {\r\n            stroke: colors.main,\r\n          }\r\n        };\r\n    }\r\n  };\r\n\r\n  const variantStyles = getVariantStyles();\r\n\r\n  return {\r\n    svg: {\r\n      width: '100%',\r\n      height: '100%',\r\n      transform: 'rotate(-90deg)',\r\n    } as React.CSSProperties,\r\n    track: {\r\n      fill: 'none',\r\n      strokeWidth: sizeConfig.circularThickness,\r\n      ...variantStyles.track,\r\n    } as React.CSSProperties,\r\n    progress: {\r\n      fill: 'none',\r\n      strokeWidth: sizeConfig.circularThickness,\r\n      strokeLinecap: 'round' as const,\r\n      transition: 'stroke-dashoffset var(--duration-smooth) var(--animation-smooth)',\r\n      ...variantStyles.progress,\r\n    } as React.CSSProperties,\r\n    circumference,\r\n    radius,\r\n    gradientDefs: variantStyles.gradientDefs,\r\n  };\r\n};\r\n\r\n// Circular indeterminate progress SVG styles\r\nexport const getCircularIndeterminateProgressSVGStyles = (\r\n  color: ProgressIndicatorColor,\r\n  customColor: string | undefined,\r\n  variant: ProgressIndicatorVariant,\r\n  size: ProgressIndicatorSize,\r\n  animationsEnabled: boolean,\r\n  cssVars: any\r\n) => {\r\n  const colors = getColorVariables(color, customColor, cssVars);\r\n  const sizeConfig = getSizeConfig(size);\r\n\r\n  const radius = 16;\r\n  const circumference = 2 * Math.PI * radius;\r\n\r\n  // Create a segment that's 30% of the circle (similar to bar's 30% width)\r\n  const segmentLength = circumference * 0.3;\r\n  const gapLength = circumference - segmentLength;\r\n\r\n  // Get variant-specific track and progress styles (same as regular circular)\r\n  const getVariantStyles = () => {\r\n    switch (variant) {\r\n      case 'solid':\r\n        return {\r\n          track: {\r\n            stroke: colors.background,\r\n          },\r\n          progress: {\r\n            stroke: colors.accent || colors.main,\r\n          }\r\n        };\r\n      case 'ghost':\r\n        return {\r\n          track: {\r\n            stroke: 'transparent',\r\n          },\r\n          progress: {\r\n            stroke: colors.main,\r\n          }\r\n        };\r\n      case 'glassmorphic':\r\n        // For glassmorphic, match the bar variant styling approach\r\n        const reflectionColor = colors.hover || colors.main || '#ffffff';\r\n        return {\r\n          track: {\r\n            stroke: colors.background,\r\n            strokeOpacity: 1,\r\n          },\r\n          progress: {\r\n            stroke: `url(#glassmorphic-indeterminate-gradient-${color})`,\r\n          },\r\n          gradientDefs: {\r\n            gradientId: `glassmorphic-indeterminate-gradient-${color}`,\r\n            stops: [\r\n              { offset: '0%', stopColor: colors.accent || colors.main, stopOpacity: 1 },\r\n              { offset: '50%', stopColor: reflectionColor, stopOpacity: 0.8 },\r\n              { offset: '100%', stopColor: colors.accent || colors.main, stopOpacity: 1 }\r\n            ]\r\n          }\r\n        };\r\n      case 'outline':\r\n      default:\r\n        return {\r\n          track: {\r\n            stroke: cssVars.muted,\r\n          },\r\n          progress: {\r\n            stroke: colors.main,\r\n          }\r\n        };\r\n    }\r\n  };\r\n\r\n  const variantStyles = getVariantStyles();\r\n\r\n  return {\r\n    svg: {\r\n      width: '100%',\r\n      height: '100%',\r\n      transform: 'rotate(-90deg)',\r\n      animation: animationsEnabled\r\n        ? 'progress-circular-indeterminate 2s linear infinite'\r\n        : 'none',\r\n    } as React.CSSProperties,\r\n    track: {\r\n      fill: 'none',\r\n      strokeWidth: sizeConfig.circularThickness,\r\n      ...variantStyles.track,\r\n    } as React.CSSProperties,\r\n    progress: {\r\n      fill: 'none',\r\n      strokeWidth: sizeConfig.circularThickness,\r\n      strokeLinecap: 'round' as const,\r\n      strokeDasharray: `${segmentLength} ${gapLength}`,\r\n      strokeDashoffset: 0,\r\n      ...variantStyles.progress,\r\n    } as React.CSSProperties,\r\n    circumference,\r\n    radius,\r\n    segmentLength,\r\n    gradientDefs: variantStyles.gradientDefs,\r\n  };\r\n};\r\n\r\n\r\n// Text/Label styles\r\nexport const getTextStyles = (\r\n  size: ProgressIndicatorSize,\r\n  color: ProgressIndicatorColor,\r\n  variant: ProgressIndicatorVariant,\r\n  cssVars: any\r\n): React.CSSProperties => {\r\n  const sizeConfig = getSizeConfig(size);\r\n  const colors = getColorVariables(color, undefined, cssVars);\r\n\r\n  return {\r\n    fontSize: sizeConfig.fontSize,\r\n    fontWeight: 600,\r\n    color: variant === 'solid' ? colors.main : 'currentColor',\r\n    textAlign: 'center',\r\n    lineHeight: 1,\r\n  };\r\n};\r\n\r\n// Progress text overlay styles (for bars)\r\nexport const getProgressTextStyles = (\r\n  size: ProgressIndicatorSize,\r\n  color: ProgressIndicatorColor,\r\n  customColor: string | undefined,\r\n  cssVars: any\r\n): React.CSSProperties => {\r\n  const sizeConfig = getSizeConfig(size);\r\n  const colors = getColorVariables(color, customColor, cssVars);\r\n\r\n  return {\r\n    position: 'absolute',\r\n    top: '50%',\r\n    left: '50%',\r\n    transform: 'translate(-50%, -50%)',\r\n    fontSize: sizeConfig.fontSize,\r\n    fontWeight: 600,\r\n    color: colors.main,\r\n    textAlign: 'center',\r\n    lineHeight: 1,\r\n    whiteSpace: 'nowrap',\r\n    pointerEvents: 'none',\r\n    zIndex: 1,\r\n  };\r\n};\r\n\r\n// Circular progress text styles\r\nexport const getCircularTextStyles = (\r\n  size: ProgressIndicatorSize,\r\n  color: ProgressIndicatorColor,\r\n  customColor: string | undefined,\r\n  cssVars: any\r\n): React.CSSProperties => {\r\n  const sizeConfig = getSizeConfig(size);\r\n  const colors = getColorVariables(color, customColor, cssVars);\r\n\r\n  return {\r\n    position: 'absolute',\r\n    top: '50%',\r\n    left: '50%',\r\n    transform: 'translate(-50%, -50%)',\r\n    fontSize: sizeConfig.fontSize,\r\n    fontWeight: 600,\r\n    color: colors.main,\r\n    textAlign: 'center',\r\n    lineHeight: 1,\r\n    whiteSpace: 'nowrap',\r\n    pointerEvents: 'none',\r\n  };\r\n};","'use client';\r\n\r\nimport React, { forwardRef, useMemo, useState, useEffect } from 'react';\r\nimport { useCSSVariables, useSettings } from '../../../providers';\r\nimport { extractContainerProps, UNIVERSAL_DEFAULTS } from '../types';\r\nimport type { ProgressIndicatorProps, ProgressIndicatorType } from './ProgressIndicator.types';\r\nimport {\r\n  getSizeConfig,\r\n  getColorVariables,\r\n  createProgressIndicatorContainerStyles,\r\n  getBarProgressStyles,\r\n  getProgressFillStyles,\r\n  getSpinnerStyles,\r\n  getCircularProgressStyles,\r\n  getCircularProgressSVGStyles,\r\n  getCircularIndeterminateProgressSVGStyles,\r\n  getTextStyles,\r\n  getProgressTextStyles,\r\n  getCircularTextStyles\r\n} from './ProgressIndicator.styles';\r\n\r\nexport const ProgressIndicator = forwardRef<HTMLDivElement, ProgressIndicatorProps>((allProps, ref) => {\r\n  // Extract container props and component-specific props\r\n  const [containerProps, componentProps] = extractContainerProps(allProps);\r\n  \r\n  // Destructure container props with defaults\r\n  const {\r\n    color = UNIVERSAL_DEFAULTS.color,\r\n    customColor,\r\n    variant = 'outline', // ProgressIndicator-specific default\r\n    shape = UNIVERSAL_DEFAULTS.shape,\r\n    size = UNIVERSAL_DEFAULTS.size,\r\n    disabled = UNIVERSAL_DEFAULTS.disabled,\r\n    width,\r\n    height,\r\n    className,\r\n    style,\r\n    id,\r\n    'data-testid': dataTestId,\r\n    animate = UNIVERSAL_DEFAULTS.animate,\r\n    rounded, // Legacy support\r\n  } = containerProps;\r\n  \r\n  // Destructure component-specific props\r\n  const {\r\n    type = 'bar',\r\n    value = 0,\r\n    max = 100,\r\n    showPercentage = false,\r\n    showValue = false,\r\n    label,\r\n    duration = 300,\r\n    striped = false,\r\n    stripedAnimation = false,\r\n    indeterminate = false,\r\n    autoProgress = false,\r\n    autoProgressDuration = 3000,\r\n    preset,\r\n    trackSize = 'md',\r\n    ...restProps\r\n  } = componentProps;\r\n\r\n  // Hooks\r\n  const cssVars = useCSSVariables();\r\n  const { settings } = useSettings();\r\n  const animationsEnabled = (settings.appearance.animations ?? true) && animate;\r\n\r\n  // Auto-progress state\r\n  const [currentValue, setCurrentValue] = useState(value);\r\n\r\n  // Auto-progress effect\r\n  useEffect(() => {\r\n    if (!autoProgress || indeterminate) {\r\n      setCurrentValue(value);\r\n      return;\r\n    }\r\n\r\n    // Start from 0 and increment to max over the specified duration\r\n    setCurrentValue(0);\r\n    const incrementInterval = 50; // Update every 50ms for smooth animation\r\n    const totalSteps = autoProgressDuration / incrementInterval;\r\n    const incrementAmount = max / totalSteps;\r\n\r\n    let currentStep = 0;\r\n    let hasReset = false;\r\n\r\n    const interval = setInterval(() => {\r\n      currentStep++;\r\n      const newValue = Math.min(incrementAmount * currentStep, max);\r\n      setCurrentValue(newValue);\r\n\r\n      if (newValue >= max && !hasReset) {\r\n        hasReset = true;\r\n        // Reset to 0 and start over for continuous loop after a brief pause\r\n        setTimeout(() => {\r\n          setCurrentValue(0);\r\n          currentStep = 0;\r\n          hasReset = false;\r\n        }, 500); // Brief pause at 100% before resetting\r\n      }\r\n    }, incrementInterval);\r\n\r\n    return () => clearInterval(interval);\r\n  }, [autoProgress, autoProgressDuration, max, indeterminate, value]);\r\n\r\n  // Calculate percentage using current value (auto-progress) or provided value\r\n  const actualValue = autoProgress && !indeterminate ? currentValue : value;\r\n  const percentage = useMemo(() => {\r\n    return Math.min(Math.max((actualValue / max) * 100, 0), 100);\r\n  }, [actualValue, max]);\r\n\r\n  // Styles\r\n  const containerStyles = useMemo(() => \r\n    createProgressIndicatorContainerStyles(shape, width, height, animationsEnabled),\r\n    [shape, width, height, animationsEnabled]\r\n  );\r\n\r\n  const combinedStyles: React.CSSProperties = {\r\n    ...containerStyles,\r\n    ...style,\r\n  };\r\n\r\n  const accessibilityLabel = label || (indeterminate ? 'Loading' : `Progress: ${Math.round(percentage)}%`);\r\n\r\n  // Render based on type\r\n  switch (type) {\r\n    case 'bar':\r\n    case 'progressBar': {\r\n      const barStyles = getBarProgressStyles(color, customColor, variant, size, shape, width, disabled, animationsEnabled, cssVars);\r\n      const fillStyles = getProgressFillStyles(color, customColor, variant, size, shape, percentage, striped, stripedAnimation, indeterminate, animationsEnabled, cssVars);\r\n      const textStyles = getProgressTextStyles(size, color, customColor, cssVars);\r\n\r\n      return (\r\n        <>\r\n          {/* Keyframe animations */}\r\n          {animationsEnabled && (\r\n            <style jsx global>{`\r\n              @keyframes progress-indeterminate {\r\n                0% { left: 0%; }\r\n                100% { left: 70%; }\r\n              }\r\n              @keyframes progress-stripes {\r\n                from { background-position: 1rem 0; }\r\n                to { background-position: 0 0; }\r\n              }\r\n            `}</style>\r\n          )}\r\n          <div\r\n            ref={ref}\r\n            className={className}\r\n            style={combinedStyles}\r\n            role=\"progressbar\"\r\n            aria-label={accessibilityLabel}\r\n            aria-valuenow={value}\r\n            aria-valuemin={0}\r\n            aria-valuemax={max}\r\n            id={id}\r\n            data-testid={dataTestId}\r\n            {...restProps}\r\n          >\r\n            <div style={barStyles}>\r\n              <div style={fillStyles} />\r\n              {(showPercentage || showValue) && (\r\n                <div style={textStyles}>\r\n                  {showValue ? `${value}/${max}` : `${Math.round(percentage)}%`}\r\n                </div>\r\n              )}\r\n            </div>\r\n          </div>\r\n        </>\r\n      );\r\n    }\r\n\r\n    case 'circular': {\r\n      // When indeterminate, use circular indeterminate animation\r\n      if (indeterminate) {\r\n        const circularStyles = getCircularProgressStyles(color, customColor, variant, size, percentage, disabled, animationsEnabled, cssVars);\r\n        const svgStyles = getCircularIndeterminateProgressSVGStyles(color, customColor, variant, size, animationsEnabled, cssVars);\r\n        const textStyles = getCircularTextStyles(size, color, customColor, cssVars);\r\n\r\n        return (\r\n          <>\r\n            {animationsEnabled && (\r\n              <style jsx global>{`\r\n                @keyframes progress-circular-indeterminate {\r\n                  0% {\r\n                    transform: rotate(-90deg);\r\n                  }\r\n                  100% {\r\n                    transform: rotate(270deg);\r\n                  }\r\n                }\r\n              `}</style>\r\n            )}\r\n            <div\r\n              ref={ref}\r\n              className={className}\r\n              style={{ ...combinedStyles, ...circularStyles }}\r\n              role=\"status\"\r\n              aria-label={accessibilityLabel}\r\n              id={id}\r\n              data-testid={dataTestId}\r\n              {...restProps}\r\n            >\r\n              <svg style={svgStyles.svg} viewBox=\"0 0 36 36\">\r\n                {/* Add gradient definitions for glassmorphic variant */}\r\n                {svgStyles.gradientDefs && (\r\n                  <defs>\r\n                    <linearGradient\r\n                      id={svgStyles.gradientDefs.gradientId}\r\n                      x1=\"0%\" y1=\"0%\" x2=\"100%\" y2=\"0%\"\r\n                    >\r\n                      {svgStyles.gradientDefs.stops.map((stop, index) => (\r\n                        <stop\r\n                          key={index}\r\n                          offset={stop.offset}\r\n                          stopColor={stop.stopColor}\r\n                          stopOpacity={stop.stopOpacity}\r\n                        />\r\n                      ))}\r\n                    </linearGradient>\r\n                  </defs>\r\n                )}\r\n                <path\r\n                  style={svgStyles.track}\r\n                  d=\"M18,2.0845 a 16,16 0 0,1 0,32 a 16,16 0 0,1 0,-32\"\r\n                />\r\n                <path\r\n                  style={svgStyles.progress}\r\n                  d=\"M18,2.0845 a 16,16 0 0,1 0,32 a 16,16 0 0,1 0,-32\"\r\n                />\r\n              </svg>\r\n              {(showPercentage || showValue) && (\r\n                <div style={textStyles}>\r\n                  {showValue ? `${actualValue}/${max}` : `${Math.round(percentage)}%`}\r\n                </div>\r\n              )}\r\n            </div>\r\n          </>\r\n        );\r\n      }\r\n\r\n      // Normal circular progress bar\r\n      const circularStyles = getCircularProgressStyles(color, customColor, variant, size, percentage, disabled, animationsEnabled, cssVars);\r\n      const svgStyles = getCircularProgressSVGStyles(color, customColor, variant, size, cssVars);\r\n      const textStyles = getCircularTextStyles(size, color, customColor, cssVars);\r\n      const strokeDasharray = svgStyles.circumference;\r\n      const strokeDashoffset = svgStyles.circumference - (percentage / 100) * svgStyles.circumference;\r\n\r\n      return (\r\n        <div\r\n          ref={ref}\r\n          className={className}\r\n          style={{ ...combinedStyles, ...circularStyles }}\r\n          role=\"progressbar\"\r\n          aria-label={accessibilityLabel}\r\n          aria-valuenow={value}\r\n          aria-valuemin={0}\r\n          aria-valuemax={max}\r\n          id={id}\r\n          data-testid={dataTestId}\r\n          {...restProps}\r\n        >\r\n          <svg style={svgStyles.svg} viewBox=\"0 0 36 36\">\r\n            {/* Add gradient definitions for glassmorphic variant */}\r\n            {svgStyles.gradientDefs && (\r\n              <defs>\r\n                <linearGradient\r\n                  id={svgStyles.gradientDefs.gradientId}\r\n                  x1=\"0%\" y1=\"0%\" x2=\"100%\" y2=\"0%\"\r\n                >\r\n                  {svgStyles.gradientDefs.stops.map((stop, index) => (\r\n                    <stop\r\n                      key={index}\r\n                      offset={stop.offset}\r\n                      stopColor={stop.stopColor}\r\n                      stopOpacity={stop.stopOpacity}\r\n                    />\r\n                  ))}\r\n                </linearGradient>\r\n              </defs>\r\n            )}\r\n            <path\r\n              style={svgStyles.track}\r\n              d=\"M18,2.0845 a 16,16 0 0,1 0,32 a 16,16 0 0,1 0,-32\"\r\n            />\r\n            <path\r\n              style={{\r\n                ...svgStyles.progress,\r\n                strokeDasharray,\r\n                strokeDashoffset\r\n              }}\r\n              d=\"M18,2.0845 a 16,16 0 0,1 0,32 a 16,16 0 0,1 0,-32\"\r\n            />\r\n          </svg>\r\n          {(showPercentage || showValue) && (\r\n            <div style={textStyles}>\r\n              {showValue ? `${value}/${max}` : `${Math.round(percentage)}%`}\r\n            </div>\r\n          )}\r\n        </div>\r\n      );\r\n    }\r\n\r\n\r\n    default: {\r\n      // Fallback to bar type\r\n      const barStyles = getBarProgressStyles(color, customColor, variant, size, shape, width, disabled, animationsEnabled, cssVars);\r\n      const fillStyles = getProgressFillStyles(color, customColor, variant, size, shape, percentage, striped, stripedAnimation, indeterminate, animationsEnabled, cssVars);\r\n      const textStyles = getProgressTextStyles(size, color, customColor, cssVars);\r\n\r\n      return (\r\n        <>\r\n          {/* Keyframe animations */}\r\n          {animationsEnabled && (\r\n            <style jsx global>{`\r\n              @keyframes progress-indeterminate {\r\n                0% { left: 0%; }\r\n                100% { left: 70%; }\r\n              }\r\n              @keyframes progress-stripes {\r\n                from { background-position: 1rem 0; }\r\n                to { background-position: 0 0; }\r\n              }\r\n            `}</style>\r\n          )}\r\n          <div\r\n            ref={ref}\r\n            className={className}\r\n            style={combinedStyles}\r\n            role=\"progressbar\"\r\n            aria-label={accessibilityLabel}\r\n            aria-valuenow={actualValue}\r\n            aria-valuemin={0}\r\n            aria-valuemax={max}\r\n            id={id}\r\n            data-testid={dataTestId}\r\n            {...restProps}\r\n          >\r\n            <div style={barStyles}>\r\n              <div style={fillStyles} />\r\n              {(showPercentage || showValue) && (\r\n                <div style={textStyles}>\r\n                  {showValue ? `${actualValue}/${max}` : `${Math.round(percentage)}%`}\r\n                </div>\r\n              )}\r\n            </div>\r\n          </div>\r\n        </>\r\n      );\r\n    }\r\n  }\r\n});\r\n\r\nProgressIndicator.displayName = 'ProgressIndicator';","import { useCallback } from 'react';\r\nimport { useLoading, useToast } from '@/app/providers';\r\n\r\ninterface UseAsyncClickOptions {\r\n  loadingKey?: string;\r\n  onAsyncClick?: () => Promise<void>;\r\n  onClick?: React.MouseEventHandler<HTMLButtonElement>;\r\n}\r\n\r\nexport const useAsyncClick = ({ loadingKey, onAsyncClick, onClick }: UseAsyncClickOptions) => {\r\n  const { startLoading, stopLoading } = useLoading();\r\n  const { success, error } = useToast();\r\n\r\n  const handleAsyncClick = useCallback(async (e: React.MouseEvent<HTMLButtonElement>) => {\r\n    if (onAsyncClick) {\r\n      const key = loadingKey || 'button-action';\r\n      try {\r\n        startLoading(key);\r\n        await onAsyncClick();\r\n        success('Action completed successfully');\r\n      } catch (err) {\r\n        error('Action failed', err instanceof Error ? err.message : 'Unknown error');\r\n      } finally {\r\n        stopLoading(key);\r\n      }\r\n    } else if (onClick) {\r\n      onClick(e);\r\n    }\r\n  }, [loadingKey, onAsyncClick, onClick, startLoading, stopLoading, success, error]);\r\n\r\n  return handleAsyncClick;\r\n};\r\n","import { useCallback } from 'react';\r\nimport type { ButtonVariant } from '../Button.types';\r\n\r\ninterface UseButtonHoverOptions {\r\n  variant: ButtonVariant;\r\n  isDisabled: boolean;\r\n  animationsEnabled: boolean;\r\n  cssVars: any;\r\n  hasIsometricAnimation?: boolean;\r\n  colors?: any;\r\n}\r\n\r\nexport const useButtonHover = ({ variant, isDisabled, animationsEnabled, cssVars, hasIsometricAnimation, colors }: UseButtonHoverOptions) => {\r\n  const handleMouseEnter = useCallback((e: React.MouseEvent<HTMLButtonElement>) => {\r\n    if (!isDisabled && animationsEnabled) {\r\n      if (hasIsometricAnimation && variant !== 'ghost' && variant !== 'glassmorphic') {\r\n        // Apply isometric hover animation - button moves toward shadow\r\n        e.currentTarget.style.transform = 'translate(3px, 3px)';\r\n\r\n        // Find the shadow element (previous sibling in the isometric container)\r\n        const container = e.currentTarget.parentElement;\r\n        if (container) {\r\n          const shadowElement = container.querySelector('div:first-child') as HTMLElement;\r\n          if (shadowElement) {\r\n            shadowElement.style.transform = 'translate(-1px, -1px)';\r\n          }\r\n        }\r\n      } else if (variant === 'outline' || variant === 'ghost') {\r\n        // Use the selected color's background or hover color\r\n        // This handles both regular outline/ghost AND ghost with isometric mode (since ghost doesn't get isometric styles)\r\n        const hoverBg = colors?.background || colors?.hover || cssVars.primaryBackground;\r\n        e.currentTarget.style.backgroundColor = hoverBg;\r\n      } else {\r\n        e.currentTarget.style.opacity = '0.8';\r\n      }\r\n    }\r\n  }, [variant, isDisabled, animationsEnabled, cssVars, hasIsometricAnimation, colors]);\r\n\r\n  const handleMouseLeave = useCallback((e: React.MouseEvent<HTMLButtonElement>) => {\r\n    if (!isDisabled) {\r\n      if (hasIsometricAnimation && variant !== 'ghost' && variant !== 'glassmorphic') {\r\n        // Return to rest position\r\n        e.currentTarget.style.transform = 'translate(0, 0)';\r\n\r\n        // Find the shadow element and reset its position\r\n        const container = e.currentTarget.parentElement;\r\n        if (container) {\r\n          const shadowElement = container.querySelector('div:first-child') as HTMLElement;\r\n          if (shadowElement) {\r\n            shadowElement.style.transform = 'translate(0, 0)';\r\n          }\r\n        }\r\n      } else if (variant === 'outline' || variant === 'ghost') {\r\n        // This handles both regular outline/ghost AND ghost with isometric mode\r\n        e.currentTarget.style.backgroundColor = 'transparent';\r\n      } else {\r\n        e.currentTarget.style.opacity = isDisabled ? '0.6' : '1';\r\n      }\r\n    }\r\n  }, [variant, isDisabled, hasIsometricAnimation, colors]);\r\n\r\n  return { handleMouseEnter, handleMouseLeave };\r\n};\r\n","'use client';\r\n\r\nimport React, { cloneElement, isValidElement } from 'react';\r\nimport Tilt from 'react-parallax-tilt';\r\n\r\ninterface ParallaxTiltWrapperProps {\r\n  children: React.ReactNode;\r\n  disabled?: boolean;\r\n  className?: string;\r\n  style?: React.CSSProperties;\r\n}\r\n\r\nexport const ParallaxTiltWrapper: React.FC<ParallaxTiltWrapperProps> = ({\r\n  children,\r\n  disabled = false,\r\n  className,\r\n  style,\r\n}) => {\r\n  if (disabled) {\r\n    return (\r\n      <div className={className} style={style}>\r\n        {children}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  // Extract border radius and box shadow from child element\r\n  let childBorderRadius = '0px';\r\n  let childBoxShadow = 'none';\r\n  let shouldPreserveShadow = false;\r\n  \r\n  if (isValidElement(children) && children.props && typeof children.props === 'object') {\r\n    const childProps = children.props as { style?: React.CSSProperties };\r\n    const childStyle = childProps.style;\r\n    if (childStyle?.borderRadius) {\r\n      childBorderRadius = childStyle.borderRadius as string;\r\n    }\r\n    if (childStyle?.boxShadow) {\r\n      childBoxShadow = childStyle.boxShadow as string;\r\n      // Check if this is a glassmorphic shadow (contains multiple shadows)\r\n      shouldPreserveShadow = childBoxShadow.includes('32px') || childBoxShadow.includes('40px');\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Tilt\r\n      className={className}\r\n      style={{\r\n        borderRadius: childBorderRadius,\r\n        // Only use overflow hidden if we don't need to preserve shadows\r\n        overflow: shouldPreserveShadow ? 'visible' : 'hidden',\r\n        // Apply the child's box shadow to the wrapper if it's a glassmorphic shadow\r\n        boxShadow: shouldPreserveShadow ? childBoxShadow : 'none',\r\n        ...style,\r\n      }}\r\n      tiltReverse={true}\r\n      tiltMaxAngleX={8}\r\n      tiltMaxAngleY={8}\r\n      perspective={1200}\r\n      scale={1.0}\r\n      transitionSpeed={300}\r\n      gyroscope={true}\r\n      glareEnable={true}\r\n      glareMaxOpacity={0.3}\r\n      glareColor=\"#ffffff\"\r\n      glarePosition=\"all\"\r\n      glareReverse={false}\r\n      glareBorderRadius={childBorderRadius}\r\n    >\r\n      {/* Remove box shadow from child if we're handling it on wrapper */}\r\n      {shouldPreserveShadow && isValidElement(children) && children.props && typeof children.props === 'object'\r\n        ? cloneElement(children, {\r\n            style: {\r\n              ...(children.props as { style?: React.CSSProperties }).style,\r\n              boxShadow: 'none'\r\n            }\r\n          } as Partial<typeof children.props>)\r\n        : children\r\n      }\r\n    </Tilt>\r\n  );\r\n};","'use client';\r\n\r\nimport React, { useState, useEffect } from 'react';\r\n\r\ninterface TypewriterTextProps {\r\n  text: string;\r\n  speed?: number;\r\n  deleteSpeed?: number;\r\n  showCursor?: boolean;\r\n  cursorChar?: string;\r\n  disabled?: boolean;\r\n  children?: React.ReactNode;\r\n  waitTime?: number;\r\n  loop?: number | 'infinite'; // Number of times to loop, or 'infinite' for continuous loop\r\n}\r\n\r\ntype TypewriterPhase = 'typing' | 'waiting' | 'deleting';\r\n\r\nexport const TypewriterText: React.FC<TypewriterTextProps> = ({\r\n  text,\r\n  speed = 100,\r\n  deleteSpeed = 50,\r\n  showCursor = true,\r\n  cursorChar = '|',\r\n  disabled = false,\r\n  children,\r\n  waitTime, // Will be calculated randomly if not provided\r\n  loop = 'infinite', // Default to infinite loop for backward compatibility\r\n}) => {\r\n  const [displayText, setDisplayText] = useState('');\r\n  const [currentIndex, setCurrentIndex] = useState(0);\r\n  const [showCursorBlink, setShowCursorBlink] = useState(true);\r\n  const [phase, setPhase] = useState<TypewriterPhase>('typing');\r\n  const [cycleCount, setCycleCount] = useState(0);\r\n\r\n  useEffect(() => {\r\n    if (disabled) {\r\n      setDisplayText(text);\r\n      return;\r\n    }\r\n\r\n    let timeout: NodeJS.Timeout;\r\n\r\n    switch (phase) {\r\n      case 'typing':\r\n        if (currentIndex < text.length) {\r\n          timeout = setTimeout(() => {\r\n            setDisplayText(text.slice(0, currentIndex + 1));\r\n            setCurrentIndex(currentIndex + 1);\r\n          }, speed);\r\n        } else {\r\n          // Finished typing, wait before deleting\r\n          // Generate random wait time between 6-8 seconds if not provided\r\n          const randomWaitTime = waitTime || (6000 + Math.random() * 2000);\r\n          timeout = setTimeout(() => {\r\n            setPhase('deleting');\r\n          }, randomWaitTime);\r\n        }\r\n        break;\r\n\r\n      case 'deleting':\r\n        if (currentIndex > 0) {\r\n          timeout = setTimeout(() => {\r\n            setCurrentIndex(currentIndex - 1);\r\n            setDisplayText(text.slice(0, currentIndex - 1));\r\n          }, deleteSpeed);\r\n        } else {\r\n          // Finished deleting, check if we should loop again\r\n          const shouldContinueLooping = loop === 'infinite' || cycleCount < loop - 1;\r\n\r\n          if (shouldContinueLooping) {\r\n            setCycleCount(cycleCount + 1);\r\n            setPhase('typing');\r\n          } else {\r\n            // Finished all loops, show complete text and stay\r\n            setDisplayText(text);\r\n            setCurrentIndex(text.length);\r\n            setPhase('typing'); // Set to typing but won't progress since index === length\r\n          }\r\n        }\r\n        break;\r\n    }\r\n\r\n    return () => clearTimeout(timeout);\r\n  }, [currentIndex, text, speed, deleteSpeed, disabled, phase, waitTime]);\r\n\r\n  useEffect(() => {\r\n    if (disabled) return;\r\n\r\n    const cursorInterval = setInterval(() => {\r\n      setShowCursorBlink((prev) => !prev);\r\n    }, 500);\r\n\r\n    return () => clearInterval(cursorInterval);\r\n  }, [disabled]);\r\n\r\n  // Reset animation when text changes\r\n  useEffect(() => {\r\n    if (!disabled) {\r\n      setCurrentIndex(0);\r\n      setDisplayText('');\r\n      setPhase('typing');\r\n      setCycleCount(0);\r\n    }\r\n  }, [text, disabled]);\r\n\r\n  if (disabled) {\r\n    return <>{children || text}</>;\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {displayText}\r\n      {showCursor && (\r\n        <span\r\n          style={{\r\n            opacity: showCursorBlink ? 1 : 0,\r\n            transition: 'opacity 0.1s ease-in-out',\r\n          }}\r\n        >\r\n          {cursorChar}\r\n        </span>\r\n      )}\r\n    </>\r\n  );\r\n};","'use client';\r\n\r\nimport React, { forwardRef, useMemo, useEffect } from 'react';\r\nimport { useCSSVariables, useLoading, useSettings } from '../../../providers';\r\nimport { extractInteractiveProps, UNIVERSAL_DEFAULTS } from '../types';\r\nimport type { ButtonProps } from './Button.types';\r\nimport { getVariantStyles, getSizeStyles, createBaseStyles, getShapeStyles, getIsometricContainerStyles, getIsometricButtonStyles, getIsometricShadowStyles, getColorVariables, getIconOnlyStyles } from './Button.styles';\r\nimport { createCenteredContent, createTextContainer } from './Button.utils';\r\nimport { ProgressIndicator } from '../ProgressIndicator';\r\nimport { useAsyncClick, useButtonHover } from './hooks';\r\nimport { ParallaxTiltWrapper, TypewriterText } from './animations';\r\n\r\nexport const Button = forwardRef<HTMLButtonElement, ButtonProps>((allProps, ref) => {\r\n  // Extract interactive props and component-specific props\r\n  const [interactiveProps, componentProps] = extractInteractiveProps(allProps);\r\n  \r\n  // Destructure interactive props with defaults\r\n  const {\r\n    color = UNIVERSAL_DEFAULTS.color,\r\n    customColor,\r\n    variant = UNIVERSAL_DEFAULTS.variant,\r\n    shape = UNIVERSAL_DEFAULTS.shape,\r\n    size = UNIVERSAL_DEFAULTS.size,\r\n    disabled = UNIVERSAL_DEFAULTS.disabled,\r\n    loading = UNIVERSAL_DEFAULTS.loading,\r\n    loadingKey,\r\n    width,\r\n    height,\r\n    className,\r\n    style,\r\n    id,\r\n    'data-testid': dataTestId,\r\n    animate = UNIVERSAL_DEFAULTS.animate,\r\n    animationMode = UNIVERSAL_DEFAULTS.animationMode,\r\n    fullWidth,\r\n    onMouseEnter: universalOnMouseEnter,\r\n    onMouseLeave: universalOnMouseLeave,\r\n  } = interactiveProps;\r\n  \r\n  // Destructure component-specific props\r\n  const {\r\n    icon,\r\n    iconPosition = 'leading',\r\n    onAsyncClick,\r\n    onClick,\r\n    children,\r\n    ...restProps\r\n  } = componentProps;\r\n  // Hooks\r\n  const cssVars = useCSSVariables();\r\n  const { isLoading } = useLoading();\r\n  const { settings } = useSettings();\r\n\r\n  // Computed values\r\n  const isButtonLoading = loading || (loadingKey && isLoading(loadingKey));\r\n  const isDisabled = Boolean(disabled) || isButtonLoading;\r\n  const hasIcon = Boolean(icon);\r\n  const hasChildren = Boolean(children && (typeof children === 'string' ? children.trim() : children));\r\n  const isIconOnly = hasIcon && !hasChildren;\r\n  const animationsEnabled = (settings.appearance.animations ?? true) && animate;\r\n  const useAnimationMode = animationsEnabled && animationMode !== 'none';\r\n  const shouldUseDefaultAnimations = useAnimationMode && animationMode === 'default';\r\n  const hasIsometricAnimation = useAnimationMode && animationMode === 'isometric' && variant !== 'ghost' && variant !== 'glassmorphic';\r\n  const shouldUseHoverEffects = useAnimationMode && (\r\n    animationMode === 'default' || \r\n    animationMode === 'typewriter' || \r\n    hasIsometricAnimation ||\r\n    (animationMode === 'isometric' && (variant === 'ghost' || variant === 'glassmorphic')) // Enable hover effects for variants that don't support isometric\r\n  );\r\n\r\n\r\n  // Event handlers\r\n  const handleAsyncClick = useAsyncClick({ loadingKey, onAsyncClick, onClick });\r\n  const { handleMouseEnter, handleMouseLeave } = useButtonHover({\r\n    variant,\r\n    isDisabled: Boolean(isDisabled),\r\n    animationsEnabled: shouldUseHoverEffects,\r\n    cssVars,\r\n    hasIsometricAnimation,\r\n    colors: getColorVariables(color, customColor, cssVars)\r\n  });\r\n  \r\n  // Combine universal and component mouse handlers\r\n  const combinedMouseEnter = (e: React.MouseEvent<HTMLButtonElement>) => {\r\n    universalOnMouseEnter?.(e);\r\n    handleMouseEnter(e);\r\n  };\r\n  \r\n  const combinedMouseLeave = (e: React.MouseEvent<HTMLButtonElement>) => {\r\n    universalOnMouseLeave?.(e);\r\n    handleMouseLeave(e);\r\n  };\r\n\r\n  // Styles\r\n  const baseStyles = useMemo(() => createBaseStyles(\r\n    Boolean(fullWidth),\r\n    Boolean(isDisabled),\r\n    hasIcon,\r\n    shape,\r\n    shouldUseDefaultAnimations,\r\n  ), [fullWidth, isDisabled, hasIcon, shape, shouldUseDefaultAnimations]);\r\n\r\n  const variantStyles = useMemo(() => getVariantStyles(color, variant, customColor, cssVars), [color, variant, customColor, cssVars]);\r\n  const sizeStyles = useMemo(() => getSizeStyles(size), [size]);\r\n  const iconOnlyStyles = useMemo(() => isIconOnly ? getIconOnlyStyles(size, shape) : {}, [isIconOnly, size, shape]);\r\n\r\n  // Isometric styles\r\n  const isometricContainerStyles = useMemo(() => hasIsometricAnimation ? getIsometricContainerStyles() : {}, [hasIsometricAnimation]);\r\n  const isometricButtonStyles = useMemo(() => hasIsometricAnimation ? getIsometricButtonStyles(getColorVariables(color, customColor, cssVars), variant, animationsEnabled) : {}, [hasIsometricAnimation, color, customColor, cssVars, variant, animationsEnabled]);\r\n  const isometricShadowStyles = useMemo(() => hasIsometricAnimation ? getIsometricShadowStyles(getColorVariables(color, customColor, cssVars), variant, shape, sizeStyles, animationsEnabled) : {}, [hasIsometricAnimation, color, customColor, cssVars, variant, shape, sizeStyles, animationsEnabled]);\r\n\r\n  const combinedStyles: any = {\r\n    ...baseStyles,\r\n    ...sizeStyles,\r\n    ...variantStyles,\r\n    ...iconOnlyStyles, // Apply icon-only styles after size styles to override them\r\n    ...isometricButtonStyles, // Apply isometric button styles\r\n    width,\r\n    height,\r\n    ...style,\r\n  };\r\n\r\n  // Content rendering with animation mode support\r\n  const renderTextContent = useMemo(() => {\r\n    if (useAnimationMode && animationMode === 'typewriter' && typeof children === 'string') {\r\n      return (\r\n        <TypewriterText\r\n          text={children}\r\n          disabled={isDisabled || !useAnimationMode}\r\n          speed={100}\r\n        />\r\n      );\r\n    }\r\n    return children;\r\n  }, [children, useAnimationMode, animationMode, isDisabled]);\r\n\r\n  const renderContent = () => {\r\n    if (isButtonLoading) {\r\n      // Map button size to spinner size\r\n      const spinnerSize = size === 'xs' ? 'xs' : size === 'sm' ? 'xs' : 'sm';\r\n      // Use the selected color for the spinner to match the button's color theme\r\n      const spinnerColor = color;\r\n      \r\n      return (\r\n        <ProgressIndicator\r\n          type=\"circular\"\r\n          size={spinnerSize}\r\n          color={spinnerColor}\r\n        />\r\n      );\r\n    }\r\n\r\n    return (\r\n      <>\r\n        {hasIcon ? (\r\n          createCenteredContent(icon, iconPosition, size, renderTextContent)\r\n        ) : (\r\n          createTextContainer(renderTextContent)\r\n        )}\r\n      </>\r\n    );\r\n  };\r\n\r\n  // Render button element\r\n  const buttonElement = (\r\n    <button\r\n      ref={ref}\r\n      id={id}\r\n      disabled={Boolean(isDisabled)}\r\n      onClick={handleAsyncClick}\r\n      onMouseEnter={combinedMouseEnter}\r\n      onMouseLeave={combinedMouseLeave}\r\n      style={combinedStyles}\r\n      className={className || ''}\r\n      data-testid={dataTestId}\r\n      {...restProps}\r\n    >\r\n      {renderContent()}\r\n    </button>\r\n  );\r\n\r\n  // Wrap with isometric container if isometric animation is enabled\r\n  const isometricWrappedButton = hasIsometricAnimation ? (\r\n    <div style={isometricContainerStyles}>\r\n      <div style={isometricShadowStyles} />\r\n      {buttonElement}\r\n    </div>\r\n  ) : buttonElement;\r\n\r\n  // Wrap with animation mode if applicable\r\n  if (useAnimationMode && animationMode === 'parallax') {\r\n    return (\r\n      <ParallaxTiltWrapper\r\n        disabled={isDisabled || !useAnimationMode}\r\n      >\r\n        {isometricWrappedButton}\r\n      </ParallaxTiltWrapper>\r\n    );\r\n  }\r\n\r\n  return isometricWrappedButton;\r\n});\r\n\r\nButton.displayName = 'Button';\r\n","import React from 'react';\r\nimport type { BadgeColor, BadgeVariant, BadgeSize, BadgeShape } from './Badge.types';\r\n\r\n// Get color variables based on color prop\r\nexport const getColorVariables = (color: BadgeColor, customColor: string | undefined, cssVars: any) => {\r\n  if (color === 'custom' && customColor) {\r\n    return {\r\n      main: customColor,\r\n      foreground: '#ffffff',\r\n      background: customColor + '10',\r\n      border: customColor,\r\n      hover: customColor + '20',\r\n    };\r\n  }\r\n\r\n  const colorMap: Record<string, any> = {\r\n    primary: {\r\n      main: cssVars.primary,\r\n      background: cssVars.primaryBackground,\r\n      foreground: cssVars.primaryForeground,\r\n      hover: cssVars.primaryHover,\r\n      border: cssVars.primaryBorder,\r\n    },\r\n    secondary: {\r\n      main: cssVars.secondary,\r\n      background: cssVars.secondaryBackground,\r\n      foreground: cssVars.secondaryForeground,\r\n      hover: cssVars.secondaryHover,\r\n      border: cssVars.secondaryBorder,\r\n    },\r\n    success: {\r\n      main: cssVars.success,\r\n      background: cssVars.successBackground,\r\n      foreground: cssVars.successForeground,\r\n      hover: cssVars.successHover,\r\n      border: cssVars.successBorder,\r\n    },\r\n    warning: {\r\n      main: cssVars.warning,\r\n      background: cssVars.warningBackground,\r\n      foreground: cssVars.warningForeground,\r\n      hover: cssVars.warningHover,\r\n      border: cssVars.warningBorder,\r\n    },\r\n    destructive: {\r\n      main: cssVars.destructive,\r\n      background: cssVars.destructiveBackground,\r\n      foreground: cssVars.destructiveForeground,\r\n      hover: cssVars.destructiveHover,\r\n      border: cssVars.destructiveBorder,\r\n    },\r\n    info: {\r\n      main: cssVars.info,\r\n      background: cssVars.infoBackground,\r\n      foreground: cssVars.infoForeground,\r\n      hover: cssVars.infoHover,\r\n      border: cssVars.infoBorder,\r\n    },\r\n  };\r\n\r\n  return colorMap[color] || colorMap.primary;\r\n};\r\n\r\n// Get shape styles based on shape prop\r\nexport const getShapeStyles = (shape: BadgeShape): React.CSSProperties => {\r\n  switch (shape) {\r\n    case 'sharp':\r\n      return { borderRadius: '0' };\r\n    case 'round':\r\n      return { borderRadius: '12px' };\r\n    case 'pill':\r\n      return { borderRadius: '9999px' };\r\n    default:\r\n      return { borderRadius: '9999px' }; // Default to pill for badges\r\n  }\r\n};\r\n\r\nexport const getVariantStyles = (\r\n  color: BadgeColor,\r\n  customColor: string | undefined,\r\n  variant: BadgeVariant,\r\n  disabled: boolean,\r\n  cssVars: any\r\n) => {\r\n  const colors = getColorVariables(color, customColor, cssVars);\r\n\r\n  const baseStyles = {\r\n    borderTopWidth: '1px',\r\n    borderRightWidth: '1px',\r\n    borderBottomWidth: '1px',\r\n    borderLeftWidth: '1px',\r\n    borderTopStyle: 'solid' as const,\r\n    borderRightStyle: 'solid' as const,\r\n    borderBottomStyle: 'solid' as const,\r\n    borderLeftStyle: 'solid' as const,\r\n    opacity: disabled ? 0.6 : 1,\r\n    cursor: disabled ? 'not-allowed' : 'default',\r\n  };\r\n\r\n  switch (variant) {\r\n    case 'solid':\r\n      return {\r\n        backgroundColor: colors.main,\r\n        color: colors.foreground,\r\n        borderTopColor: colors.main,\r\n        borderRightColor: colors.main,\r\n        borderBottomColor: colors.main,\r\n        borderLeftColor: colors.main,\r\n        ...baseStyles,\r\n      };\r\n    case 'outline':\r\n      return {\r\n        backgroundColor: 'transparent',\r\n        color: colors.main,\r\n        borderTopColor: colors.border,\r\n        borderRightColor: colors.border,\r\n        borderBottomColor: colors.border,\r\n        borderLeftColor: colors.border,\r\n        ...baseStyles,\r\n      };\r\n    case 'ghost':\r\n      return {\r\n        backgroundColor: colors.background,\r\n        color: colors.main,\r\n        borderTopColor: 'transparent',\r\n        borderRightColor: 'transparent',\r\n        borderBottomColor: 'transparent',\r\n        borderLeftColor: 'transparent',\r\n        ...baseStyles,\r\n      };\r\n    case 'glassmorphic':\r\n      // Create reflection gradient lines using the hover color with transparency\r\n      const reflectionColor = colors.hover || colors.main || '#ffffff';\r\n      const topReflectionGradient = `linear-gradient(135deg, transparent 0%, ${reflectionColor}20 20%, ${reflectionColor}15 25%, transparent 35%)`;\r\n      const bottomReflectionGradient = `linear-gradient(135deg, transparent 45%, ${reflectionColor}25 55%, ${reflectionColor}20 65%, transparent 80%)`;\r\n      \r\n      return {\r\n        background: `\r\n          ${topReflectionGradient},\r\n          ${bottomReflectionGradient},\r\n          rgba(255, 255, 255, 0.1)\r\n        `,\r\n        color: colors.main,\r\n        borderTopColor: 'rgba(255, 255, 255, 0.18)',\r\n        borderRightColor: 'rgba(255, 255, 255, 0.18)',\r\n        borderBottomColor: 'rgba(255, 255, 255, 0.18)',\r\n        borderLeftColor: 'rgba(255, 255, 255, 0.18)',\r\n        backdropFilter: 'blur(10px)',\r\n        WebkitBackdropFilter: 'blur(10px)', // Safari support\r\n        boxShadow: '0 4px 32px rgba(0, 0, 0, 0.1), 0 8px 32px rgba(0, 0, 0, 0.08)',\r\n        ...baseStyles,\r\n      };\r\n    default:\r\n      return {\r\n        backgroundColor: colors.main,\r\n        color: colors.foreground,\r\n        borderTopColor: colors.main,\r\n        borderRightColor: colors.main,\r\n        borderBottomColor: colors.main,\r\n        borderLeftColor: colors.main,\r\n        ...baseStyles,\r\n      };\r\n  }\r\n};\r\n\r\nexport const getSizeStyles = (size: BadgeSize): React.CSSProperties => {\r\n  const sizeMap = {\r\n    xs: { \r\n      paddingTop: '2px',\r\n      paddingRight: '6px',\r\n      paddingBottom: '2px',\r\n      paddingLeft: '6px',\r\n      fontSize: '11px', \r\n      height: '20px',\r\n      minWidth: '20px',\r\n      gap: '2px'\r\n    },\r\n    sm: { \r\n      paddingTop: '3px',\r\n      paddingRight: '8px',\r\n      paddingBottom: '3px',\r\n      paddingLeft: '8px',\r\n      fontSize: '12px', \r\n      height: '24px',\r\n      minWidth: '24px',\r\n      gap: '3px'\r\n    },\r\n    md: { \r\n      paddingTop: '4px',\r\n      paddingRight: '10px',\r\n      paddingBottom: '4px',\r\n      paddingLeft: '10px',\r\n      fontSize: '13px', \r\n      height: '28px',\r\n      minWidth: '28px',\r\n      gap: '4px'\r\n    },\r\n    lg: { \r\n      paddingTop: '5px',\r\n      paddingRight: '12px',\r\n      paddingBottom: '5px',\r\n      paddingLeft: '12px',\r\n      fontSize: '14px', \r\n      height: '32px',\r\n      minWidth: '32px',\r\n      gap: '5px'\r\n    },\r\n    xl: { \r\n      paddingTop: '6px',\r\n      paddingRight: '14px',\r\n      paddingBottom: '6px',\r\n      paddingLeft: '14px',\r\n      fontSize: '15px', \r\n      height: '36px',\r\n      minWidth: '36px',\r\n      gap: '6px'\r\n    },\r\n  };\r\n  return sizeMap[size];\r\n};\r\n\r\nexport const getIconSize = (badgeSize: BadgeSize): 'xs' | 'sm' | 'md' | 'lg' | 'xl' => {\r\n  const iconSizeMap = {\r\n    xs: 'xs' as const,\r\n    sm: 'xs' as const,\r\n    md: 'sm' as const,\r\n    lg: 'sm' as const,\r\n    xl: 'md' as const,\r\n  };\r\n  return iconSizeMap[badgeSize];\r\n};\r\n\r\nexport const createBaseStyles = (\r\n  rounded: boolean,\r\n  isRemovable: boolean,\r\n  animationsEnabled: boolean\r\n): React.CSSProperties => {\r\n  // Handle legacy rounded prop - now just a boolean\r\n  const finalShape = rounded ? 'pill' : 'round';\r\n  \r\n  return {\r\n    display: 'inline-flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    verticalAlign: 'top',\r\n    fontWeight: '500',\r\n    fontFamily: 'inherit',\r\n    userSelect: 'none',\r\n    whiteSpace: 'nowrap',\r\n    transition: animationsEnabled \r\n      ? 'background-color var(--duration-fast) var(--animation-smooth), color var(--duration-fast) var(--animation-smooth), border-color var(--duration-fast) var(--animation-smooth), transform var(--duration-fast) var(--animation-smooth)'\r\n      : 'none',\r\n    cursor: isRemovable ? 'default' : 'auto',\r\n    position: 'relative',\r\n    ...getShapeStyles(finalShape),\r\n  };\r\n};\r\n\r\n// Get icon-only styles (square/circular based on shape)\r\nexport const getIconOnlyStyles = (size: BadgeSize, shape: BadgeShape): React.CSSProperties => {\r\n  // Get the height from the size styles to make width match height\r\n  const sizeStyles = getSizeStyles(size);\r\n  const height = sizeStyles.height;\r\n  \r\n  return {\r\n    width: height, // Make width equal to height for square/circle\r\n    minWidth: height, // Override minWidth from size styles\r\n    paddingTop: '0',\r\n    paddingRight: '0',\r\n    paddingBottom: '0',\r\n    paddingLeft: '0',\r\n    aspectRatio: '1', // Ensure 1:1 aspect ratio\r\n  };\r\n};\r\n\r\n// Get isometric animation styles for Badge\r\nexport const getIsometricStyles = (color: any, variant: BadgeVariant, shape: BadgeShape) => {\r\n  // Ghost and glassmorphic variants don't support isometric animation\r\n  if (variant === 'ghost' || variant === 'glassmorphic') {\r\n    return {};\r\n  }\r\n  \r\n  // For outline variant, use the main color (primary). For solid, use foreground color.\r\n  const borderColor = variant === 'outline' ? color.main : color.foreground || '#000000';\r\n  \r\n  const styles: any = {\r\n    // Use individual border properties to avoid conflict with shorthand borderWidth\r\n    borderTopWidth: '1px',\r\n    borderLeftWidth: '1px', \r\n    borderRightWidth: '1px',\r\n    borderBottomWidth: '4px', // Larger bottom border for 3D effect\r\n    borderTopStyle: 'solid',\r\n    borderLeftStyle: 'solid',\r\n    borderRightStyle: 'solid',\r\n    borderBottomStyle: 'solid',\r\n    borderTopColor: borderColor,\r\n    borderLeftColor: borderColor,\r\n    borderRightColor: borderColor,\r\n    borderBottomColor: borderColor,\r\n    transform: 'translateY(0)',\r\n    transition: 'all 0.4s cubic-bezier(0.34, 1.56, 0.64, 1)',\r\n    // Ensure proper box-sizing and prevent collapse\r\n    boxSizing: 'border-box',\r\n    position: 'relative',\r\n    // Adjust padding to account for larger bottom border\r\n    paddingBottom: '1px', // Slightly reduce bottom padding to compensate\r\n  };\r\n  \r\n  return styles;\r\n};\r\n","import React from 'react';\r\nimport type { IconSize, IconColor } from './Icon.types';\r\n\r\nexport const getSizeValue = (size: IconSize | number): number => {\r\n  if (typeof size === 'number') {\r\n    return size;\r\n  }\r\n  \r\n  const sizeMap = {\r\n    xs: 12,\r\n    sm: 18,\r\n    md: 24,\r\n    lg: 30,\r\n    xl: 46,\r\n  };\r\n  return sizeMap[size];\r\n};\r\n\r\nexport const getColorValue = (color: IconColor | string, cssVars: any): string => {\r\n  switch (color) {\r\n    case 'inherit':\r\n      return 'currentColor';\r\n    case 'primary':\r\n      return cssVars.primary;\r\n    case 'secondary':\r\n      return cssVars.secondary;\r\n    case 'success':\r\n      return cssVars.success;\r\n    case 'warning':\r\n      return cssVars.warning;\r\n    case 'destructive':\r\n      return cssVars.destructive;\r\n    case 'info':\r\n      return cssVars.info;\r\n    case 'muted':\r\n      return cssVars.mutedForeground;\r\n    default:\r\n      return color;\r\n  }\r\n};\r\n\r\nexport const getAnimationStyles = (\r\n  spin: boolean,\r\n  pulse: boolean,\r\n  animationsEnabled: boolean\r\n): React.CSSProperties => {\r\n  if (!animationsEnabled) return {};\r\n  \r\n  const animations: React.CSSProperties = {};\r\n  \r\n  if (spin) {\r\n    animations.animation = 'icon-spin 2s linear infinite';\r\n  } else if (pulse) {\r\n    animations.animation = 'icon-pulse 2s cubic-bezier(0.4, 0, 0.6, 1) infinite';\r\n  }\r\n  \r\n  return animations;\r\n};\r\n\r\nexport const createIconStyles = (\r\n  sizeValue: number,\r\n  colorValue: string,\r\n  animationStyles: React.CSSProperties,\r\n  customStyle?: React.CSSProperties\r\n): React.CSSProperties => ({\r\n  width: sizeValue,\r\n  height: sizeValue,\r\n  color: colorValue,\r\n  flexShrink: 0,\r\n  display: 'inline-block',\r\n  ...animationStyles,\r\n  ...customStyle,\r\n});\r\n","// Icon registry - consolidates iconoir-react imports\r\n// This file dynamically imports all available icons from iconoir-react\r\n\r\nimport * as IconoirIcons from 'iconoir-react';\r\n\r\n// Filter out non-icon exports (IconoirContext, IconoirProvider, default export)\r\nconst iconComponents = Object.entries(IconoirIcons).reduce((acc, [name, component]) => {\r\n  // Skip non-icon exports\r\n  if (name === 'IconoirContext' || name === 'IconoirProvider' || name === 'default') {\r\n    return acc;\r\n  }\r\n  \r\n  // Add the icon component\r\n  acc[name] = component;\r\n  return acc;\r\n}, {} as Record<string, React.ComponentType<any>>);\r\n// Create the icon registry with string name mappings\r\nexport const iconRegistry: Record<string, React.ComponentType<any>> = {\r\n  // Direct component name mappings (PascalCase only)\r\n  ...iconComponents,\r\n};\r\n\r\n// Export available icon names for documentation/autocomplete\r\nexport const availableIcons = Object.keys(iconRegistry);\r\n\r\n// Helper function to get an icon component by name\r\nexport function getIcon(name: string): React.ComponentType<any> | undefined {\r\n  return iconRegistry[name];\r\n}\r\n\r\n// Export count for debugging\r\nexport const iconCount = availableIcons.length;\r\n\r\nconsole.log(`Icon registry loaded with ${iconCount} icons`);\r\n\r\nexport type IconName = keyof typeof iconRegistry;\r\n","import React from 'react';\r\nimport { getIcon } from './iconRegistry';\r\nimport type { IconName } from './iconRegistry';\r\n\r\nexport const resolveIconComponent = (\r\n  name: IconName | React.ComponentType<React.SVGProps<SVGSVGElement>>\r\n): React.ComponentType<React.SVGProps<SVGSVGElement>> | null => {\r\n  if (typeof name === 'string') {\r\n    const IconComponent = getIcon(name);\r\n    if (!IconComponent) {\r\n      console.warn(`Icon \"${name}\" not found in registry`);\r\n      return null;\r\n    }\r\n    return IconComponent;\r\n  }\r\n  \r\n  return name;\r\n};\r\n\r\nexport const createIconProps = (\r\n  sizeValue: number,\r\n  colorValue: string,\r\n  iconStyles: React.CSSProperties,\r\n  className?: string,\r\n  ref?: React.Ref<SVGSVGElement>,\r\n  additionalProps?: Record<string, any>\r\n) => ({\r\n  width: sizeValue,\r\n  height: sizeValue,\r\n  color: colorValue,\r\n  style: iconStyles,\r\n  className,\r\n  ref,\r\n  ...additionalProps,\r\n});\r\n","import React from 'react';\r\n\r\ninterface IconAnimationsProps {\r\n  hasAnimations: boolean;\r\n  spin: boolean;\r\n  pulse: boolean;\r\n}\r\n\r\nexport const IconAnimations: React.FC<IconAnimationsProps> = ({ \r\n  hasAnimations, \r\n  spin, \r\n  pulse \r\n}) => {\r\n  if (!hasAnimations || (!spin && !pulse)) {\r\n    return null;\r\n  }\r\n\r\n  return (\r\n    <style jsx global>{`\r\n      @keyframes icon-spin {\r\n        from {\r\n          transform: rotate(0deg);\r\n        }\r\n        to {\r\n          transform: rotate(360deg);\r\n        }\r\n      }\r\n      \r\n      @keyframes icon-pulse {\r\n        0%, 100% {\r\n          opacity: 1;\r\n        }\r\n        50% {\r\n          opacity: 0.5;\r\n        }\r\n      }\r\n    `}</style>\r\n  );\r\n};\r\n","'use client';\r\n\r\nimport React, { forwardRef, useMemo } from 'react';\r\nimport { useCSSVariables, useSettings } from '../../../providers';\r\nimport type { IconProps } from './Icon.types';\r\nimport { getSizeValue, getColorValue, getAnimationStyles, createIconStyles } from './Icon.styles';\r\nimport { resolveIconComponent, createIconProps } from './Icon.utils';\r\nimport { IconAnimations } from './components';\r\n\r\nexport const Icon = forwardRef<SVGSVGElement, IconProps>(\r\n  ({ \r\n    name,\r\n    size = 'md',\r\n    color = 'inherit',\r\n    spin = false,\r\n    pulse = false,\r\n    className,\r\n    style,\r\n    ...props \r\n  }, ref) => {\r\n    // Hooks\r\n    const cssVars = useCSSVariables();\r\n    const { settings } = useSettings();\r\n\r\n    // Computed values\r\n    const animationsEnabled = settings.appearance.animations;\r\n    const IconComponent = useMemo(() => resolveIconComponent(name), [name]);\r\n\r\n    // Early return if icon not found\r\n    if (!IconComponent) {\r\n      return null;\r\n    }\r\n\r\n    // Style computations\r\n    const sizeValue = useMemo(() => getSizeValue(size), [size]);\r\n    const colorValue = useMemo(() => getColorValue(color, cssVars), [color, cssVars]);\r\n    const animationStyles = useMemo(() => \r\n      getAnimationStyles(spin, pulse, animationsEnabled), \r\n      [spin, pulse, animationsEnabled]\r\n    );\r\n    const iconStyles = useMemo(() => \r\n      createIconStyles(sizeValue, colorValue, animationStyles, style),\r\n      [sizeValue, colorValue, animationStyles, style]\r\n    );\r\n\r\n    // Icon props\r\n    const iconProps = createIconProps(\r\n      sizeValue,\r\n      colorValue,\r\n      iconStyles,\r\n      className,\r\n      ref,\r\n      props\r\n    );\r\n\r\n    return (\r\n      <>\r\n        <IconAnimations \r\n          hasAnimations={animationsEnabled}\r\n          spin={spin}\r\n          pulse={pulse}\r\n        />\r\n        <IconComponent {...iconProps} />\r\n      </>\r\n    );\r\n  }\r\n);\r\n\r\nIcon.displayName = 'Icon';\r\n","import React from 'react';\r\nimport type { BadgeSize } from './Badge.types';\r\nimport { getIconSize } from './Badge.styles';\r\nimport { Icon } from '../Icon';\r\nimport { TypewriterText } from '../Button/animations';\r\n\r\nexport const renderIcon = (\r\n  iconElement: React.ReactNode,\r\n  badgeSize: BadgeSize\r\n): React.ReactNode => {\r\n  if (!iconElement) return null;\r\n  \r\n  if (React.isValidElement(iconElement)) {\r\n    return React.cloneElement(iconElement as React.ReactElement<any>, {\r\n      size: getIconSize(badgeSize),\r\n    });\r\n  }\r\n  \r\n  return iconElement;\r\n};\r\n\r\nexport const createRemoveButton = (\r\n  onRemove: () => void,\r\n  badgeSize: BadgeSize,\r\n  cssVars: any,\r\n  animationsEnabled: boolean\r\n): React.ReactElement => {\r\n  const buttonSize = badgeSize === 'xs' ? '16px' : badgeSize === 'sm' ? '18px' : '20px';\r\n  // Use a larger icon size for better visibility\r\n  const iconSize = badgeSize === 'xs' ? 'xs' : 'sm';\r\n  \r\n  return (\r\n    <button\r\n      onClick={(e) => {\r\n        e.stopPropagation();\r\n        onRemove();\r\n      }}\r\n      style={{\r\n        marginLeft: '0px',\r\n        width: buttonSize,\r\n        height: buttonSize,\r\n        borderRadius: '50%',\r\n        border: 'none',\r\n        backgroundColor: 'transparent',\r\n        color: 'currentColor',\r\n        cursor: 'pointer',\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        opacity: 0.7,\r\n        transition: animationsEnabled ? 'opacity 0.2s ease' : 'none',\r\n        padding: 0,\r\n      }}\r\n      onMouseEnter={(e) => {\r\n        if (animationsEnabled) {\r\n          e.currentTarget.style.opacity = '1';\r\n          e.currentTarget.style.backgroundColor = cssVars.getColorWithOpacity?.('currentColor', 0.1) || 'rgba(0,0,0,0.1)';\r\n        }\r\n      }}\r\n      onMouseLeave={(e) => {\r\n        e.currentTarget.style.opacity = '0.7';\r\n        e.currentTarget.style.backgroundColor = 'transparent';\r\n      }}\r\n      title=\"Remove\"\r\n      aria-label=\"Remove badge\"\r\n    >\r\n      <Icon name=\"Xmark\" size={iconSize} />\r\n    </button>\r\n  );\r\n};\r\n\r\nexport const createBadgeContent = (\r\n  icon: React.ReactNode,\r\n  iconPosition: 'leading' | 'trailing',\r\n  badgeSize: BadgeSize,\r\n  children: React.ReactNode,\r\n  removable: boolean,\r\n  onRemove?: () => void,\r\n  cssVars?: any,\r\n  animationsEnabled?: boolean,\r\n  useAnimationMode?: boolean,\r\n  animationMode?: 'none' | 'typewriter' | 'isometric',\r\n  disabled?: boolean\r\n): React.ReactElement => {\r\n  const hasIcon = Boolean(icon);\r\n  const hasRemove = removable && onRemove;\r\n  const shouldUseTypewriter = useAnimationMode && animationMode === 'typewriter' && !disabled;\r\n  \r\n  // Check if there are actual children (text content) - matching Button's logic\r\n  const hasChildren = Boolean(children && (typeof children === 'string' ? children.trim() : children));\r\n\r\n  // Get responsive spacing based on badge size (only when there are children)\r\n  const getSpacing = (size: BadgeSize): string => {\r\n    const spacingMap = {\r\n      xs: '2px',\r\n      sm: '3px', \r\n      md: '4px',\r\n      lg: '5px',\r\n      xl: '6px',\r\n    };\r\n    return spacingMap[size];\r\n  };\r\n\r\n  // Create content section with text and icon grouping\r\n  const renderContent = () => {\r\n    if (!hasChildren) return null;\r\n\r\n    if (shouldUseTypewriter && typeof children === 'string') {\r\n      return (\r\n        <TypewriterText\r\n          text={children}\r\n          speed={50}\r\n          disabled={!animationsEnabled}\r\n        />\r\n      );\r\n    }\r\n\r\n    return <span>{children}</span>;\r\n  };\r\n\r\n  const spacing = getSpacing(badgeSize);\r\n\r\n  // If there are no children, just render the icon centered without spacing (matching Button logic)\r\n  if (!hasChildren) {\r\n    return (\r\n      <>\r\n        {hasIcon && (\r\n          <span style={{ \r\n            display: 'flex', \r\n            alignItems: 'center',\r\n            justifyContent: 'center'\r\n          }}>\r\n            {renderIcon(icon, badgeSize)}\r\n          </span>\r\n        )}\r\n        {hasRemove && createRemoveButton(onRemove, badgeSize, cssVars, animationsEnabled || false)}\r\n      </>\r\n    );\r\n  }\r\n\r\n  // When there are children, use proper spacing and layout\r\n  return (\r\n    <span style={{ \r\n      display: 'flex', \r\n      alignItems: 'center',\r\n      justifyContent: 'center',\r\n      gap: spacing\r\n    }}>\r\n      {hasIcon && iconPosition === 'leading' && renderIcon(icon, badgeSize)}\r\n      {renderContent()}\r\n      {hasIcon && iconPosition === 'trailing' && renderIcon(icon, badgeSize)}\r\n      {hasRemove && createRemoveButton(onRemove, badgeSize, cssVars, animationsEnabled || false)}\r\n    </span>\r\n  );\r\n};\r\n","'use client';\r\n\r\nimport React, { forwardRef, useMemo } from 'react';\r\nimport { useCSSVariables, useSettings } from '../../../providers';\r\nimport { extractContainerProps, UNIVERSAL_DEFAULTS } from '../types';\r\nimport type { BadgeProps } from './Badge.types';\r\nimport { getVariantStyles, getSizeStyles, createBaseStyles, getIconOnlyStyles, getIsometricStyles, getColorVariables } from './Badge.styles';\r\nimport { createBadgeContent } from './Badge.utils';\r\nimport { TypewriterText } from '../Button/animations';\r\n\r\nexport const Badge = forwardRef<HTMLSpanElement, BadgeProps>((allProps, ref) => {\r\n  // Extract container props and component-specific props\r\n  const [containerProps, componentProps] = extractContainerProps(allProps);\r\n  \r\n  // Destructure container props with defaults\r\n  const {\r\n    color = UNIVERSAL_DEFAULTS.color,\r\n    customColor,\r\n    variant = UNIVERSAL_DEFAULTS.variant,\r\n    shape = UNIVERSAL_DEFAULTS.shape,\r\n    size = UNIVERSAL_DEFAULTS.size,\r\n    disabled = UNIVERSAL_DEFAULTS.disabled,\r\n    loading = UNIVERSAL_DEFAULTS.loading,\r\n    loadingKey,\r\n    width,\r\n    height,\r\n    className,\r\n    style,\r\n    id,\r\n    'data-testid': dataTestId,\r\n    animate = UNIVERSAL_DEFAULTS.animate,\r\n    animationMode = UNIVERSAL_DEFAULTS.animationMode,\r\n    rounded, // Legacy support\r\n    children,\r\n  } = containerProps;\r\n  \r\n  // Destructure component-specific props\r\n  const {\r\n    icon,\r\n    iconPosition = 'leading',\r\n    removable = false,\r\n    onRemove,\r\n    ...restProps\r\n  } = componentProps;\r\n\r\n  // Hooks\r\n  const cssVars = useCSSVariables();\r\n  const { settings } = useSettings();\r\n\r\n  // Computed values\r\n  const hasIcon = Boolean(icon);\r\n  const hasChildren = Boolean(children && (typeof children === 'string' ? children.trim() : children));\r\n  const isRemovable = removable && Boolean(onRemove);\r\n  const isIconOnly = hasIcon && !hasChildren && !isRemovable;\r\n  const animationsEnabled = (settings.appearance.animations ?? true) && animate;\r\n  const useAnimationMode = animationsEnabled && animationMode !== 'none';\r\n  const hasIsometricAnimation = useAnimationMode && animationMode === 'isometric' && variant !== 'ghost' && variant !== 'glassmorphic';\r\n\r\n  // Filter animationMode to supported Badge modes\r\n  const badgeAnimationMode: 'none' | 'typewriter' | 'isometric' | undefined =\r\n    animationMode === 'default' ? 'none' :\r\n    (animationMode === 'none' || animationMode === 'typewriter' || animationMode === 'isometric') ? animationMode :\r\n    undefined;\r\n\r\n    // Styles\r\n    const baseStyles = useMemo(() => createBaseStyles(\r\n      shape === 'pill' || Boolean(rounded),\r\n      isRemovable,\r\n      animationsEnabled\r\n    ), [shape, rounded, isRemovable, animationsEnabled]);\r\n\r\n    const variantStyles = useMemo(() => getVariantStyles(\r\n      color, \r\n      customColor,\r\n      variant, \r\n      disabled,\r\n      cssVars\r\n    ), [color, customColor, variant, disabled, cssVars]);\r\n    \r\n    const sizeStyles = useMemo(() => getSizeStyles(size), [size]);\r\n    const iconOnlyStyles = useMemo(() => isIconOnly ? getIconOnlyStyles(size, shape) : {}, [isIconOnly, size, shape]);\r\n    const isometricStyles = useMemo(() => hasIsometricAnimation ? getIsometricStyles(getColorVariables(color, customColor, cssVars), variant, shape) : {}, [hasIsometricAnimation, color, customColor, cssVars, variant, shape]);\r\n\r\n    const combinedStyles: React.CSSProperties = {\r\n      ...baseStyles,\r\n      ...sizeStyles,\r\n      ...variantStyles,\r\n      ...iconOnlyStyles, // Apply icon-only styles after size styles to override them\r\n      ...isometricStyles, // Apply isometric styles last to override other styles\r\n      width,\r\n      height,\r\n      ...style,\r\n    };\r\n\r\n    return (\r\n      <span\r\n        ref={ref}\r\n        id={id}\r\n        style={combinedStyles}\r\n        className={className}\r\n        data-testid={dataTestId}\r\n        {...restProps}\r\n      >\r\n        {createBadgeContent(\r\n          icon,\r\n          iconPosition,\r\n          size,\r\n          children,\r\n          removable,\r\n          onRemove,\r\n          cssVars,\r\n          animationsEnabled,\r\n          useAnimationMode,\r\n          badgeAnimationMode,\r\n          disabled\r\n        )}\r\n      </span>\r\n    );\r\n  }\r\n);\r\n\r\nBadge.displayName = 'Badge';","import React from 'react';\r\nimport type { CardColor, CardVariant, CardSize, CardShape } from './Card.types';\r\nimport type { UniversalSize } from '../types';\r\n\r\n// Get color variables based on color prop\r\nexport const getColorVariables = (color: CardColor, customColor: string | undefined, cssVars: any) => {\r\n  if (color === 'custom' && customColor) {\r\n    return {\r\n      main: customColor,\r\n      foreground: '#ffffff',\r\n      background: customColor + '10',\r\n      border: customColor,\r\n      hover: customColor + '20',\r\n    };\r\n  }\r\n\r\n  const colorMap: Record<string, any> = {\r\n    primary: {\r\n      main: cssVars.primary,\r\n      background: cssVars.primaryBackground,\r\n      foreground: cssVars.primaryForeground,\r\n      hover: cssVars.primaryHover,\r\n      border: cssVars.primaryBorder,\r\n    },\r\n    secondary: {\r\n      main: cssVars.secondary,\r\n      background: cssVars.secondaryBackground,\r\n      foreground: cssVars.secondaryForeground,\r\n      hover: cssVars.secondaryHover,\r\n      border: cssVars.secondaryBorder,\r\n    },\r\n    success: {\r\n      main: cssVars.success,\r\n      background: cssVars.successBackground,\r\n      foreground: cssVars.successForeground,\r\n      hover: cssVars.successHover,\r\n      border: cssVars.successBorder,\r\n    },\r\n    warning: {\r\n      main: cssVars.warning,\r\n      background: cssVars.warningBackground,\r\n      foreground: cssVars.warningForeground,\r\n      hover: cssVars.warningHover,\r\n      border: cssVars.warningBorder,\r\n    },\r\n    destructive: {\r\n      main: cssVars.destructive,\r\n      background: cssVars.destructiveBackground,\r\n      foreground: cssVars.destructiveForeground,\r\n      hover: cssVars.destructiveHover,\r\n      border: cssVars.destructiveBorder,\r\n    },\r\n    info: {\r\n      main: cssVars.info,\r\n      background: cssVars.infoBackground,\r\n      foreground: cssVars.infoForeground,\r\n      hover: cssVars.infoHover,\r\n      border: cssVars.infoBorder,\r\n    },\r\n  };\r\n\r\n  return colorMap[color] || {\r\n    main: cssVars.card,\r\n    background: cssVars.card,\r\n    foreground: cssVars.cardForeground,\r\n    hover: cssVars.backgroundHover,\r\n    border: cssVars.border,\r\n  };\r\n};\r\n\r\nexport const getVariantStyles = (\r\n  color: CardColor,\r\n  variant: CardVariant,\r\n  customColor: string | undefined,\r\n  cssVars: any\r\n) => {\r\n  const colors = getColorVariables(color, customColor, cssVars);\r\n\r\n  const baseStyles = {\r\n    borderTopWidth: '1px',\r\n    borderRightWidth: '1px',\r\n    borderBottomWidth: '1px',\r\n    borderLeftWidth: '1px',\r\n    borderTopStyle: 'solid' as const,\r\n    borderRightStyle: 'solid' as const,\r\n    borderBottomStyle: 'solid' as const,\r\n    borderLeftStyle: 'solid' as const,\r\n  };\r\n\r\n  switch (variant) {\r\n    case 'solid':\r\n      return {\r\n        backgroundColor: colors.main,\r\n        color: colors.foreground,\r\n        borderTopColor: colors.border,\r\n        borderRightColor: colors.border,\r\n        borderBottomColor: colors.border,\r\n        borderLeftColor: colors.border,\r\n        ...baseStyles,\r\n      };\r\n    case 'outline':\r\n      return {\r\n        backgroundColor: 'transparent',\r\n        color: colors.main,\r\n        borderTopColor: colors.border,\r\n        borderRightColor: colors.border,\r\n        borderBottomColor: colors.border,\r\n        borderLeftColor: colors.border,\r\n        ...baseStyles,\r\n      };\r\n    case 'ghost':\r\n      return {\r\n        backgroundColor: 'transparent',\r\n        color: colors.main,\r\n        borderTopColor: 'transparent',\r\n        borderRightColor: 'transparent',\r\n        borderBottomColor: 'transparent',\r\n        borderLeftColor: 'transparent',\r\n        ...baseStyles,\r\n      };\r\n    case 'glassmorphic':\r\n      // Create reflection gradient lines using the hover color with transparency\r\n      const reflectionColor = colors.hover || colors.main || '#ffffff';\r\n      const topReflectionGradient = `linear-gradient(135deg, transparent 0%, ${reflectionColor}20 20%, ${reflectionColor}15 25%, transparent 35%)`;\r\n      const bottomReflectionGradient = `linear-gradient(135deg, transparent 45%, ${reflectionColor}25 55%, ${reflectionColor}20 65%, transparent 80%)`;\r\n      \r\n      return {\r\n        background: `\r\n          ${topReflectionGradient},\r\n          ${bottomReflectionGradient},\r\n          rgba(255, 255, 255, 0.1)\r\n        `,\r\n        backdropFilter: 'blur(10px)',\r\n        WebkitBackdropFilter: 'blur(10px)', // Safari support\r\n        color: colors.main,\r\n        borderTopColor: 'rgba(255, 255, 255, 0.2)',\r\n        borderRightColor: 'rgba(255, 255, 255, 0.2)',\r\n        borderBottomColor: 'rgba(255, 255, 255, 0.2)',\r\n        borderLeftColor: 'rgba(255, 255, 255, 0.2)',\r\n        boxShadow: `0 8px 32px 0 ${colors.main}40`, // Use card color with transparency for shadow\r\n        position: 'relative',\r\n        overflow: 'hidden',\r\n        ...baseStyles,\r\n      };\r\n    default:\r\n      return {\r\n        backgroundColor: colors.background,\r\n        color: colors.foreground,\r\n        borderTopColor: colors.border,\r\n        borderRightColor: colors.border,\r\n        borderBottomColor: colors.border,\r\n        borderLeftColor: colors.border,\r\n        boxShadow: cssVars.shadowSm,\r\n        ...baseStyles,\r\n      };\r\n  }\r\n};\r\n\r\nexport const getSizeStyles = (size: CardSize): React.CSSProperties => {\r\n  const sizeMap = {\r\n    xs: { minHeight: '40px', minWidth: '160px' },\r\n    sm: { minHeight: '48px', minWidth: '200px' },\r\n    md: { minHeight: '56px', minWidth: '240px' },\r\n    lg: { minHeight: '64px', minWidth: '280px' },\r\n    xl: { minHeight: '72px', minWidth: '320px' },\r\n  };\r\n  return sizeMap[size];\r\n};\r\n\r\nexport const getPaddingStyles = (padding: UniversalSize | 'none'): React.CSSProperties => {\r\n  const paddingMap = {\r\n    none: { \r\n      paddingTop: '0px',\r\n      paddingRight: '0px',\r\n      paddingBottom: '0px',\r\n      paddingLeft: '0px'\r\n    },\r\n    xs: { \r\n      paddingTop: '4px',\r\n      paddingRight: '4px',\r\n      paddingBottom: '4px',\r\n      paddingLeft: '4px'\r\n    },\r\n    sm: { \r\n      paddingTop: '8px',\r\n      paddingRight: '8px',\r\n      paddingBottom: '8px',\r\n      paddingLeft: '8px'\r\n    },\r\n    md: { \r\n      paddingTop: '16px',\r\n      paddingRight: '16px',\r\n      paddingBottom: '16px',\r\n      paddingLeft: '16px'\r\n    },\r\n    lg: { \r\n      paddingTop: '24px',\r\n      paddingRight: '24px',\r\n      paddingBottom: '24px',\r\n      paddingLeft: '24px'\r\n    },\r\n    xl: { \r\n      paddingTop: '32px',\r\n      paddingRight: '32px',\r\n      paddingBottom: '32px',\r\n      paddingLeft: '32px'\r\n    },\r\n  };\r\n  return paddingMap[padding];\r\n};\r\n\r\n// Get shape styles based on shape prop\r\nexport const getShapeStyles = (shape: CardShape): React.CSSProperties => {\r\n  switch (shape) {\r\n    case 'sharp':\r\n      return { borderRadius: '0' };\r\n    case 'round':\r\n      return { borderRadius: '12px' };\r\n    case 'pill':\r\n      return { borderRadius: '9999px' };\r\n    default:\r\n      return { borderRadius: '12px' };\r\n  }\r\n};\r\n\r\nexport const createBaseStyles = (\r\n  fullWidth: boolean,\r\n  isDisabled: boolean,\r\n  shape: CardShape,\r\n  animationsEnabled: boolean,\r\n  // Legacy support\r\n  rounded?: boolean\r\n): React.CSSProperties => {\r\n  // Handle legacy rounded prop\r\n  const finalShape = rounded !== undefined ? (rounded ? 'pill' : 'round') : shape;\r\n  \r\n  return {\r\n    position: 'relative',\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    width: fullWidth ? '100%' : 'auto',\r\n    opacity: isDisabled ? 0.6 : 1,\r\n    pointerEvents: isDisabled ? 'none' : 'auto',\r\n    cursor: 'default',\r\n    transition: animationsEnabled \r\n      ? 'background-color var(--duration-medium) var(--animation-spring), border-color var(--duration-medium) var(--animation-spring), transform var(--duration-medium) var(--animation-spring), box-shadow var(--duration-medium) var(--animation-spring)'\r\n      : 'none',\r\n    fontFamily: 'inherit',\r\n    fontWeight: '500',\r\n    outline: 'none',\r\n    ...getShapeStyles(finalShape),\r\n  };\r\n};\r\n\r\nexport const createClickableStyles = (\r\n  clickable: boolean,\r\n  disabled: boolean\r\n): React.CSSProperties => {\r\n  if (!clickable || disabled) return {};\r\n  \r\n  return {\r\n    cursor: 'pointer',\r\n    userSelect: 'none',\r\n    // Hover effects will be handled via JavaScript event handlers\r\n  };\r\n};\r\n\r\nexport const createHeaderStyles = (): React.CSSProperties => ({\r\n  marginBottom: '12px',\r\n  borderBottom: '1px solid',\r\n  borderBottomColor: 'inherit',\r\n  paddingBottom: '12px',\r\n  fontWeight: '500',\r\n});\r\n\r\nexport const createFooterStyles = (): React.CSSProperties => ({\r\n  marginTop: 'auto',\r\n  paddingTop: '12px',\r\n  borderTop: '1px solid',\r\n  borderTopColor: 'inherit',\r\n  fontWeight: '500',\r\n});\r\n\r\nexport const createContentStyles = (): React.CSSProperties => ({\r\n  flex: '1',\r\n  display: 'flex',\r\n  flexDirection: 'column',\r\n});\r\n\r\nexport const createLoadingOverlayStyles = (cssVars: any): React.CSSProperties => ({\r\n  position: 'absolute',\r\n  top: '0',\r\n  left: '0',\r\n  right: '0',\r\n  bottom: '0',\r\n  display: 'flex',\r\n  alignItems: 'center',\r\n  justifyContent: 'center',\r\n  backgroundColor: cssVars.getColorWithOpacity('background', 0.8),\r\n  borderRadius: 'inherit',\r\n  zIndex: 10,\r\n});\r\n\r\n// Get isometric animation styles for Card\r\nexport const getIsometricStyles = (color: any, variant: CardVariant, shape: CardShape) => {\r\n  // Ghost and glassmorphic variants don't support isometric animation\r\n  if (variant === 'ghost' || variant === 'glassmorphic') {\r\n    return {};\r\n  }\r\n  \r\n  // For outline variant, use the main color (primary). For solid, use foreground color.\r\n  const borderColor = variant === 'outline' ? color.main : color.foreground || '#000000';\r\n  \r\n  const styles: any = {\r\n    // Use individual border properties to avoid conflict with shorthand\r\n    borderTopWidth: '1px',\r\n    borderLeftWidth: '1px', \r\n    borderRightWidth: '1px',\r\n    borderBottomWidth: '6px', // Larger bottom border for 3D effect (bigger than Badge since Cards are larger)\r\n    borderTopStyle: 'solid',\r\n    borderLeftStyle: 'solid',\r\n    borderRightStyle: 'solid',\r\n    borderBottomStyle: 'solid',\r\n    borderTopColor: borderColor,\r\n    borderLeftColor: borderColor,\r\n    borderRightColor: borderColor,\r\n    borderBottomColor: borderColor,\r\n    transform: 'translateY(0)',\r\n    transition: 'all 0.4s cubic-bezier(0.34, 1.56, 0.64, 1)',\r\n    // Ensure proper box-sizing and prevent collapse\r\n    boxSizing: 'border-box',\r\n    position: 'relative',\r\n    // Adjust padding to account for larger bottom border\r\n    paddingBottom: '13px', // Reduce bottom padding to compensate for thicker border\r\n  };\r\n  \r\n  return styles;\r\n};\r\n","import React from 'react';\r\nimport type { CardTextAlignment } from './Card.types';\r\n\r\n/**\r\n * Creates a wrapper for card content with proper flex layout\r\n */\r\nexport const createContentWrapper = (children: React.ReactNode): React.ReactElement => {\r\n  return (\r\n    <div style={{ flex: '1', display: 'flex', flexDirection: 'column' }}>\r\n      {children}\r\n    </div>\r\n  );\r\n};\r\n\r\n// Legacy functions kept for backward compatibility (now unused)\r\nexport const createHeaderSection = () => null;\r\nexport const createFooterSection = () => null;\r\n\r\n/**\r\n * Creates external header text (rendered above the card)\r\n */\r\nexport const createExternalHeader = (\r\n  header: React.ReactNode,\r\n  alignment: CardTextAlignment = 'left',\r\n  cssVars: any\r\n): React.ReactElement | null => {\r\n  if (!header) return null;\r\n  \r\n  return (\r\n    <div \r\n      style={{\r\n        marginBottom: '4px', // Closer to card\r\n        textAlign: alignment,\r\n        color: cssVars.foreground,\r\n        fontWeight: '500',\r\n        fontSize: '14px',\r\n        fontFamily: 'inherit',\r\n        width: '100%', // Match card width\r\n        wordWrap: 'break-word', // Wrap long text\r\n        overflowWrap: 'break-word', // Better text wrapping\r\n        hyphens: 'auto', // Hyphenation support\r\n      }}\r\n    >\r\n      {header}\r\n    </div>\r\n  );\r\n};\r\n\r\n/**\r\n * Creates external footer text (rendered below the card)\r\n */\r\nexport const createExternalFooter = (\r\n  footer: React.ReactNode,\r\n  alignment: CardTextAlignment = 'left',\r\n  cssVars: any\r\n): React.ReactElement | null => {\r\n  if (!footer) return null;\r\n  \r\n  return (\r\n    <div \r\n      style={{\r\n        marginTop: '4px', // Closer to card\r\n        textAlign: alignment,\r\n        color: cssVars.foreground,\r\n        fontWeight: '500',\r\n        fontSize: '14px',\r\n        fontFamily: 'inherit',\r\n        width: '100%', // Match card width\r\n        wordWrap: 'break-word', // Wrap long text\r\n        overflowWrap: 'break-word', // Better text wrapping\r\n        hyphens: 'auto', // Hyphenation support\r\n      }}\r\n    >\r\n      {footer}\r\n    </div>\r\n  );\r\n};\r\n\r\n/**\r\n * Handles card click events with proper error handling\r\n */\r\nexport const handleCardClick = async (\r\n  onAsyncClick?: () => Promise<void>,\r\n  onClick?: React.MouseEventHandler<HTMLDivElement>,\r\n  event?: React.MouseEvent<HTMLDivElement>\r\n): Promise<void> => {\r\n  try {\r\n    if (onClick && event) {\r\n      onClick(event);\r\n    }\r\n    \r\n    if (onAsyncClick) {\r\n      await onAsyncClick();\r\n    }\r\n  } catch (error) {\r\n    console.error('Card click error:', error);\r\n    // Could integrate with toast provider here\r\n  }\r\n};\r\n\r\n/**\r\n * Creates hover effect handlers for clickable cards\r\n */\r\nexport const createHoverHandlers = (\r\n  clickable: boolean,\r\n  disabled: boolean,\r\n  cssVars: any,\r\n  elementRef: React.RefObject<HTMLDivElement>\r\n) => {\r\n  if (!clickable || disabled) {\r\n    return {\r\n      onMouseEnter: undefined,\r\n      onMouseLeave: undefined,\r\n    };\r\n  }\r\n\r\n  const handleMouseEnter = () => {\r\n    if (elementRef.current) {\r\n      elementRef.current.style.transform = 'translateY(-1px)';\r\n      elementRef.current.style.boxShadow = cssVars.shadows.lg;\r\n    }\r\n  };\r\n\r\n  const handleMouseLeave = () => {\r\n    if (elementRef.current) {\r\n      elementRef.current.style.transform = 'translateY(0)';\r\n      // Reset to original shadow based on variant\r\n      elementRef.current.style.boxShadow = '';\r\n    }\r\n  };\r\n\r\n  return {\r\n    onMouseEnter: handleMouseEnter,\r\n    onMouseLeave: handleMouseLeave,\r\n  };\r\n};\r\n","'use client';\r\n\r\nimport React, { forwardRef, useMemo, useRef, useLayoutEffect, useState } from 'react';\r\nimport { useCSSVariables, useSettings } from '../../../providers';\r\nimport { extractContainerProps, UNIVERSAL_DEFAULTS } from '../types';\r\nimport type { CardProps } from './Card.types';\r\nimport { \r\n  getVariantStyles, \r\n  getSizeStyles, \r\n  getPaddingStyles,\r\n  createBaseStyles,\r\n  createClickableStyles,\r\n  createLoadingOverlayStyles,\r\n  getIsometricStyles,\r\n  getColorVariables\r\n} from './Card.styles';\r\nimport { \r\n  createContentWrapper,\r\n  createExternalHeader,\r\n  createExternalFooter,\r\n  handleCardClick,\r\n  createHoverHandlers\r\n} from './Card.utils';\r\nimport { ProgressIndicator } from '../ProgressIndicator';\r\nimport { ParallaxTiltWrapper } from '../Button/animations/ParallaxTiltWrapper';\r\nimport { TypewriterText } from '../Button/animations/TypewriterText';\r\n\r\nexport const Card = forwardRef<HTMLDivElement, CardProps>((allProps, ref) => {\r\n  // Extract container props and component-specific props\r\n  const [containerProps, componentProps] = extractContainerProps(allProps);\r\n  \r\n  // Destructure container props with defaults\r\n  const {\r\n    color = UNIVERSAL_DEFAULTS.color,\r\n    customColor,\r\n    variant = UNIVERSAL_DEFAULTS.variant,\r\n    shape = UNIVERSAL_DEFAULTS.shape,\r\n    size = UNIVERSAL_DEFAULTS.size,\r\n    disabled = UNIVERSAL_DEFAULTS.disabled,\r\n    loading = UNIVERSAL_DEFAULTS.loading,\r\n    loadingKey,\r\n    width,\r\n    height,\r\n    className,\r\n    style,\r\n    id,\r\n    'data-testid': dataTestId,\r\n    animate = UNIVERSAL_DEFAULTS.animate,\r\n    animationMode = UNIVERSAL_DEFAULTS.animationMode,\r\n    rounded, // Legacy support\r\n    children,\r\n    clickable,\r\n    onClick,\r\n    onAsyncClick,\r\n    padding = 'md',\r\n  } = containerProps;\r\n  \r\n  // Destructure component-specific props\r\n  const {\r\n    header,\r\n    footer,\r\n    headerAlignment = 'left',\r\n    footerAlignment = 'left',\r\n    ...restProps\r\n  } = componentProps;\r\n  // Hooks\r\n  const cssVars = useCSSVariables();\r\n  const { settings } = useSettings();\r\n  const internalRef = useRef<HTMLDivElement>(null);\r\n  const cardRef = (ref as React.RefObject<HTMLDivElement>) || internalRef;\r\n  const [cardWidth, setCardWidth] = useState<number | undefined>(undefined);\r\n\r\n  // Computed values\r\n  const isDisabled = Boolean(disabled) || loading;\r\n  const isClickable = clickable && !isDisabled;\r\n  const animationsEnabled = (settings.appearance.animations ?? true) && animate;\r\n  const useAnimationMode = animationsEnabled && animationMode !== 'none';\r\n  const hasIsometricAnimation = useAnimationMode && animationMode === 'isometric' && variant !== 'ghost' && variant !== 'glassmorphic';\r\n  \r\n  // Get the selected color for header/footer (matching border color)\r\n  const colors = getColorVariables(color, customColor, cssVars);\r\n  const headerFooterColor = colors.main || cssVars.foreground;\r\n\r\n  // Event handlers\r\n  const handleClick = async (event: React.MouseEvent<HTMLDivElement>) => {\r\n    if (!isClickable) return;\r\n    await handleCardClick(onAsyncClick, onClick, event);\r\n  };\r\n\r\n  const { onMouseEnter, onMouseLeave } = createHoverHandlers(\r\n    Boolean(isClickable),\r\n    Boolean(isDisabled),\r\n    cssVars,\r\n    cardRef\r\n  );\r\n\r\n  // Styles\r\n  const baseStyles = useMemo(() => \r\n    createBaseStyles(false, isDisabled, shape, animationsEnabled, rounded),\r\n    [isDisabled, shape, rounded, animationsEnabled]\r\n  );\r\n\r\n  const variantStyles = useMemo(() => \r\n    getVariantStyles(color, variant, customColor, cssVars),\r\n    [color, customColor, variant, cssVars]\r\n  );\r\n\r\n  const sizeStyles = useMemo(() => \r\n    getSizeStyles(size),\r\n    [size]\r\n  );\r\n\r\n  const paddingStyles = useMemo(() => \r\n    getPaddingStyles(padding),\r\n    [padding]\r\n  );\r\n\r\n  const clickableStyles = useMemo(() => \r\n    createClickableStyles(Boolean(isClickable), Boolean(isDisabled)),\r\n    [isClickable, isDisabled]\r\n  );\r\n\r\n  const loadingOverlayStyles = useMemo(() => \r\n    createLoadingOverlayStyles(cssVars),\r\n    [cssVars]\r\n  );\r\n\r\n  const isometricStyles = useMemo(() => hasIsometricAnimation ? getIsometricStyles(getColorVariables(color, customColor, cssVars), variant, shape) : {}, [hasIsometricAnimation, color, customColor, cssVars, variant, shape]);\r\n\r\n  const combinedStyles: React.CSSProperties = {\r\n    ...baseStyles,\r\n    ...variantStyles,\r\n    ...sizeStyles,\r\n    ...paddingStyles,\r\n    ...clickableStyles,\r\n    ...isometricStyles, // Apply isometric styles last to override other styles\r\n    width,\r\n    height,\r\n    ...style,\r\n  };\r\n\r\n  // Measure card width after it's rendered (only based on content, not header/footer)\r\n  useLayoutEffect(() => {\r\n    if (cardRef.current && (header || footer)) {\r\n      const rect = cardRef.current.getBoundingClientRect();\r\n      setCardWidth(rect.width);\r\n    }\r\n  }, [children, combinedStyles, header, footer]);\r\n\r\n  // Shared cursor state for synchronized blinking\r\n  const [sharedCursorVisible, setSharedCursorVisible] = useState(true);\r\n  \r\n  // Sync cursor blinking when typewriter mode is active\r\n  useLayoutEffect(() => {\r\n    if (!useAnimationMode || animationMode !== 'typewriter' || isDisabled) {\r\n      return;\r\n    }\r\n\r\n    const cursorInterval = setInterval(() => {\r\n      setSharedCursorVisible((prev) => !prev);\r\n    }, 500);\r\n\r\n    return () => clearInterval(cursorInterval);\r\n  }, [useAnimationMode, animationMode, isDisabled]);\r\n\r\n  // Helper function to render text with optional typewriter animation\r\n  const renderAnimatedText = (text: React.ReactNode, isTypewriter: boolean) => {\r\n    if (!isTypewriter || typeof text !== 'string') {\r\n      return text;\r\n    }\r\n    return (\r\n      <>\r\n        <TypewriterText\r\n          text={text}\r\n          speed={100}\r\n          deleteSpeed={50}\r\n          showCursor={false}  // Disable internal cursor\r\n          disabled={isDisabled}\r\n        />\r\n        {/* Add shared cursor */}\r\n        <span\r\n          style={{\r\n            opacity: sharedCursorVisible ? 1 : 0,\r\n            transition: 'opacity 0.1s ease-in-out',\r\n          }}\r\n        >\r\n          |\r\n        </span>\r\n      </>\r\n    );\r\n  };\r\n\r\n  // Create the card element\r\n  const cardElement = (\r\n    <div\r\n      ref={cardRef}\r\n      id={id}\r\n      className={className}\r\n      style={combinedStyles}\r\n      onClick={handleClick}\r\n      onMouseEnter={onMouseEnter}\r\n      onMouseLeave={onMouseLeave}\r\n      role={isClickable ? 'button' : undefined}\r\n      tabIndex={isClickable ? 0 : undefined}\r\n      aria-disabled={isDisabled}\r\n      data-testid={dataTestId}\r\n      {...restProps}\r\n    >\r\n      {/* Loading overlay */}\r\n      {loading && (\r\n        <div style={loadingOverlayStyles}>\r\n          <ProgressIndicator\r\n            type=\"circular\"\r\n            size=\"md\"\r\n            color={color}\r\n          />\r\n        </div>\r\n      )}\r\n\r\n      {/* Main content */}\r\n      <div style={{ flex: '1', display: 'flex', flexDirection: 'column' }}>\r\n        {children}\r\n      </div>\r\n    </div>\r\n  );\r\n\r\n  // Wrap with animation mode if applicable\r\n  const wrappedCardElement = useAnimationMode && animationMode === 'parallax' ? (\r\n    <ParallaxTiltWrapper disabled={isDisabled || !useAnimationMode}>\r\n      {cardElement}\r\n    </ParallaxTiltWrapper>\r\n  ) : cardElement;\r\n\r\n  return (\r\n    <div style={{ \r\n      display: 'flex', \r\n      flexDirection: 'column',\r\n      alignItems: 'flex-start', // Prevent stretching\r\n      width: 'fit-content' // Let card determine width\r\n    }}>\r\n      {/* External Header (above card) */}\r\n      <div style={{\r\n        width: cardWidth ? `${cardWidth}px` : '100%',\r\n        marginBottom: '4px'\r\n      }}>\r\n        {header && (\r\n          <div \r\n            style={{\r\n              textAlign: headerAlignment,\r\n              color: headerFooterColor, // Use selected color to match borders\r\n              fontWeight: '500',\r\n              fontSize: '14px',\r\n              fontFamily: 'inherit',\r\n              wordWrap: 'break-word',\r\n              overflowWrap: 'break-word',\r\n              hyphens: 'auto',\r\n            }}\r\n          >\r\n            {renderAnimatedText(header, useAnimationMode && animationMode === 'typewriter')}\r\n          </div>\r\n        )}\r\n      </div>\r\n      \r\n      {/* Card */}\r\n      {wrappedCardElement}\r\n\r\n      {/* External Footer (below card) */}\r\n      <div style={{\r\n        width: cardWidth ? `${cardWidth}px` : '100%',\r\n        marginTop: '4px'\r\n      }}>\r\n        {footer && (\r\n          <div \r\n            style={{\r\n              textAlign: footerAlignment,\r\n              color: headerFooterColor, // Use selected color to match borders\r\n              fontWeight: '500',\r\n              fontSize: '14px',\r\n              fontFamily: 'inherit',\r\n              wordWrap: 'break-word',\r\n              overflowWrap: 'break-word',\r\n              hyphens: 'auto',\r\n            }}\r\n          >\r\n            {renderAnimatedText(footer, useAnimationMode && animationMode === 'typewriter')}\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n);\r\n\r\nCard.displayName = 'Card';\r\n","import React from 'react';\r\nimport type { CheckBoxColor, CheckBoxSize, CheckBoxShape } from './CheckBox.types';\r\n\r\n// Get color variables based on color prop\r\nexport const getColorVariables = (color: CheckBoxColor, customColor: string | undefined, cssVars: any) => {\r\n  if (color === 'custom' && customColor) {\r\n    return {\r\n      main: customColor,\r\n      foreground: '#ffffff',\r\n      background: customColor + '10',\r\n      border: customColor,\r\n      hover: customColor + '20',\r\n    };\r\n  }\r\n\r\n  const colorMap: Record<string, any> = {\r\n    primary: {\r\n      main: cssVars.primary,\r\n      background: cssVars.primaryBackground,\r\n      foreground: cssVars.primaryForeground,\r\n      hover: cssVars.primaryHover,\r\n      border: cssVars.primaryBorder,\r\n    },\r\n    secondary: {\r\n      main: cssVars.secondary,\r\n      background: cssVars.secondaryBackground,\r\n      foreground: cssVars.secondaryForeground,\r\n      hover: cssVars.secondaryHover,\r\n      border: cssVars.secondaryBorder,\r\n    },\r\n    success: {\r\n      main: cssVars.success,\r\n      background: cssVars.successBackground,\r\n      foreground: cssVars.successForeground,\r\n      hover: cssVars.successHover,\r\n      border: cssVars.successBorder,\r\n    },\r\n    warning: {\r\n      main: cssVars.warning,\r\n      background: cssVars.warningBackground,\r\n      foreground: cssVars.warningForeground,\r\n      hover: cssVars.warningHover,\r\n      border: cssVars.warningBorder,\r\n    },\r\n    destructive: {\r\n      main: cssVars.destructive,\r\n      background: cssVars.destructiveBackground,\r\n      foreground: cssVars.destructiveForeground,\r\n      hover: cssVars.destructiveHover,\r\n      border: cssVars.destructiveBorder,\r\n    },\r\n    info: {\r\n      main: cssVars.info,\r\n      background: cssVars.infoBackground,\r\n      foreground: cssVars.infoForeground,\r\n      hover: cssVars.infoHover,\r\n      border: cssVars.infoBorder,\r\n    },\r\n  };\r\n\r\n  return colorMap[color] || colorMap.primary;\r\n};\r\n\r\n// Get shape styles based on shape prop\r\nexport const getShapeStyles = (shape: CheckBoxShape): React.CSSProperties => {\r\n  switch (shape) {\r\n    case 'sharp':\r\n      return { borderRadius: '0' };\r\n    case 'round':\r\n      return { borderRadius: '6px' };\r\n    case 'pill':\r\n      return { borderRadius: '9999px' };\r\n    default:\r\n      return { borderRadius: '6px' };\r\n  }\r\n};\r\n\r\nexport const getVariantStyles = (\r\n  variant: 'solid' | 'ghost' | 'outline' | 'glassmorphic' | 'invisible',\r\n  color: CheckBoxColor,\r\n  customColor: string | undefined,\r\n  cssVars: any,\r\n  checked: boolean,\r\n  error: boolean\r\n): React.CSSProperties => {\r\n  const colors = getColorVariables(color, customColor, cssVars);\r\n\r\n  // Error state override (matching Search component)\r\n  if (error) {\r\n    const baseErrorStyle = {\r\n      color: cssVars.destructiveForeground,\r\n      borderWidth: '2px',\r\n      borderStyle: 'solid' as const,\r\n    };\r\n\r\n    switch (variant) {\r\n      case 'solid':\r\n        return {\r\n          ...baseErrorStyle,\r\n          borderColor: cssVars.destructive,\r\n          backgroundColor: checked ? cssVars.destructive : (cssVars.destructiveAccent || cssVars.destructive),\r\n        };\r\n      case 'ghost':\r\n        return {\r\n          ...baseErrorStyle,\r\n          borderColor: cssVars.destructive,\r\n          backgroundColor: checked ? cssVars.destructive : 'transparent',\r\n        };\r\n      case 'glassmorphic':\r\n        return {\r\n          ...baseErrorStyle,\r\n          borderColor: cssVars.destructive,\r\n          backgroundColor: checked ? cssVars.destructive : cssVars.destructiveBackground,\r\n          backdropFilter: 'blur(10px)',\r\n          WebkitBackdropFilter: 'blur(10px)',\r\n        };\r\n      case 'outline':\r\n      default:\r\n        return {\r\n          ...baseErrorStyle,\r\n          borderColor: cssVars.destructive,\r\n          backgroundColor: checked ? cssVars.destructive : cssVars.background,\r\n        };\r\n    }\r\n  }\r\n\r\n  // Normal state styles by variant (matching Search component)\r\n  switch (variant) {\r\n    case 'solid':\r\n      return {\r\n        borderColor: checked ? (colors.accent || colors.main) : cssVars.mutedForeground,\r\n        backgroundColor: checked ? (colors.accent || colors.main) : cssVars.mutedForeground,\r\n        color: colors.foreground,\r\n        borderWidth: '2px',\r\n        borderStyle: 'solid' as const,\r\n      };\r\n    case 'ghost':\r\n      return {\r\n        borderColor: checked ? colors.main : 'transparent',\r\n        backgroundColor: checked ? colors.main : 'transparent',\r\n        color: checked ? colors.foreground : cssVars.foreground,\r\n        borderWidth: '2px',\r\n        borderStyle: 'solid' as const,\r\n      };\r\n    case 'glassmorphic':\r\n      return {\r\n        borderColor: checked ? colors.main : colors.border,\r\n        backgroundColor: checked ? colors.main : colors.background,\r\n        color: checked ? colors.foreground : colors.foreground,\r\n        borderWidth: '2px',\r\n        borderStyle: 'solid' as const,\r\n        backdropFilter: 'blur(10px)',\r\n        WebkitBackdropFilter: 'blur(10px)',\r\n      };\r\n    case 'invisible':\r\n      return {\r\n        borderColor: 'transparent',\r\n        backgroundColor: 'transparent',\r\n        color: colors.foreground,\r\n        borderWidth: '2px',\r\n        borderStyle: 'solid' as const,\r\n      };\r\n    case 'outline':\r\n    default:\r\n      return {\r\n        borderColor: colors.main,\r\n        backgroundColor: checked ? colors.main : cssVars.background,\r\n        color: colors.foreground,\r\n        borderWidth: '2px',\r\n        borderStyle: 'solid' as const,\r\n      };\r\n  }\r\n};\r\n\r\nexport const getSizeStyles = (size: CheckBoxSize): React.CSSProperties => {\r\n  const sizeMap = {\r\n    xs: {\r\n      width: '16px',\r\n      height: '16px',\r\n      fontSize: '10px',\r\n    },\r\n    sm: {\r\n      width: '18px',\r\n      height: '18px',\r\n      fontSize: '12px',\r\n    },\r\n    md: {\r\n      width: '20px',\r\n      height: '20px',\r\n      fontSize: '14px',\r\n    },\r\n    lg: {\r\n      width: '24px',\r\n      height: '24px',\r\n      fontSize: '16px',\r\n    },\r\n    xl: {\r\n      width: '28px',\r\n      height: '28px',\r\n      fontSize: '18px',\r\n    },\r\n  };\r\n  return sizeMap[size];\r\n};\r\n\r\nexport const createBaseStyles = (\r\n  disabled: boolean,\r\n  shape: CheckBoxShape,\r\n  animationsEnabled: boolean,\r\n  // Legacy support\r\n  rounded?: boolean\r\n): React.CSSProperties => {\r\n  // Handle legacy rounded prop\r\n  const finalShape = rounded !== undefined ? (rounded ? 'pill' : 'round') : shape;\r\n  \r\n  return {\r\n    position: 'relative',\r\n    display: 'inline-flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    cursor: disabled ? 'not-allowed' : 'pointer',\r\n    opacity: disabled ? 0.6 : 1,\r\n    transition: animationsEnabled \r\n      ? 'background-color var(--duration-fast) var(--animation-smooth), color var(--duration-fast) var(--animation-smooth), border-color var(--duration-fast) var(--animation-smooth), opacity var(--duration-fast) var(--animation-smooth)'\r\n      : 'none',\r\n    outline: 'none',\r\n    flexShrink: 0,\r\n    ...getShapeStyles(finalShape),\r\n  };\r\n};\r\n\r\nexport const getInputStyles = (): React.CSSProperties => ({\r\n  position: 'absolute',\r\n  opacity: 0,\r\n  width: '100%',\r\n  height: '100%',\r\n  margin: 0,\r\n  cursor: 'inherit',\r\n});\r\n\r\nexport const getLabelStyles = (cssVars: any, size: CheckBoxSize, disabled: boolean, contentToggleable: boolean): React.CSSProperties => {\r\n  const fontSizeMap = {\r\n    xs: '12px',\r\n    sm: '14px',\r\n    md: '16px',\r\n    lg: '18px',\r\n    xl: '20px',\r\n  };\r\n\r\n  return {\r\n    marginLeft: '8px',\r\n    fontSize: fontSizeMap[size],\r\n    color: disabled ? cssVars.mutedForeground : cssVars.foreground,\r\n    cursor: contentToggleable ? (disabled ? 'not-allowed' : 'pointer') : 'default',\r\n    userSelect: 'none',\r\n  };\r\n};\r\n\r\nexport const getDescriptionStyles = (cssVars: any, size: CheckBoxSize, disabled: boolean, contentToggleable: boolean): React.CSSProperties => {\r\n  const fontSizeMap = {\r\n    xs: '10px',\r\n    sm: '12px',\r\n    md: '14px',\r\n    lg: '16px',\r\n    xl: '18px',\r\n  };\r\n\r\n  return {\r\n    marginTop: '2px',\r\n    marginLeft: size === 'xs' ? '24px' : size === 'sm' ? '26px' : size === 'md' ? '28px' : size === 'lg' ? '32px' : '36px',\r\n    fontSize: fontSizeMap[size],\r\n    color: cssVars.mutedForeground,\r\n    lineHeight: '1.4',\r\n    cursor: contentToggleable ? (disabled ? 'not-allowed' : 'pointer') : 'default',\r\n    userSelect: 'none',\r\n  };\r\n};\r\n\r\nexport const getWrapperStyles = (): React.CSSProperties => ({\r\n  display: 'flex',\r\n  flexDirection: 'column',\r\n  alignItems: 'flex-start',\r\n});\r\n\r\nexport const getCheckboxWrapperStyles = (): React.CSSProperties => ({\r\n  display: 'flex',\r\n  alignItems: 'center',\r\n});\r\n\r\nexport const getFocusStyles = (\r\n  color: CheckBoxColor,\r\n  customColor: string | undefined,\r\n  cssVars: any,\r\n  error: boolean\r\n): React.CSSProperties => {\r\n  let outlineColor = cssVars.primary; // default\r\n\r\n  if (error) {\r\n    outlineColor = cssVars.destructive;\r\n  } else {\r\n    const colors = getColorVariables(color, customColor, cssVars);\r\n    outlineColor = colors.main;\r\n  }\r\n\r\n  return {\r\n    outline: `2px solid ${outlineColor}`,\r\n    outlineOffset: '2px',\r\n  };\r\n};\r\n","import React from 'react';\r\nimport { Icon } from '../Icon';\r\nimport type { CheckBoxColor } from './CheckBox.types';\r\nimport { getColorVariables } from './CheckBox.styles';\r\n\r\nexport const getIconColor = (\r\n  color: CheckBoxColor,\r\n  customColor: string | undefined,\r\n  error: boolean,\r\n  checked: boolean,\r\n  cssVars: any\r\n): string => {\r\n  // For checked states, use the color's foreground\r\n  if (checked) {\r\n    if (error) return cssVars.destructiveForeground;\r\n    \r\n    const colors = getColorVariables(color, customColor, cssVars);\r\n    return colors.foreground;\r\n  }\r\n  \r\n  // For unchecked states with asterisk, use the color's main or destructive for errors\r\n  if (error) return cssVars.destructive;\r\n  \r\n  const colors = getColorVariables(color, customColor, cssVars);\r\n  return colors.main;\r\n};\r\n\r\nexport const createCheckIcon = (\r\n  checked: boolean,\r\n  indeterminate: boolean,\r\n  error: boolean,\r\n  size: string,\r\n  color: string\r\n): React.ReactElement | null => {\r\n  if (indeterminate) {\r\n    return <Icon name=\"Minus\" size={size as any} style={{ color }} />;\r\n  }\r\n  \r\n  if (checked) {\r\n    return <Icon name=\"Check\" size={size as any} style={{ color }} />;\r\n  }\r\n  \r\n  // Show asterisk for required/error fields when unchecked\r\n  if (error && !checked) {\r\n    return <Icon name=\"Asterisk\" size={size as any} style={{ color }} />;\r\n  }\r\n  \r\n  return null;\r\n};\r\n\r\nexport const getIconSize = (checkboxSize: string): string => {\r\n  const iconSizeMap: Record<string, string> = {\r\n    xs: 'xs',\r\n    sm: 'xs', \r\n    md: 'sm',\r\n    lg: 'sm',\r\n    xl: 'md',\r\n  };\r\n  return iconSizeMap[checkboxSize] || 'sm';\r\n};\r\n\r\nexport const handleKeyDown = (\r\n  event: React.KeyboardEvent<HTMLInputElement>,\r\n  onChange?: (checked: boolean, event: React.ChangeEvent<HTMLInputElement>) => void,\r\n  checked?: boolean\r\n) => {\r\n  // Only handle Enter key - let Space key work naturally with native checkbox\r\n  if (event.key === 'Enter') {\r\n    event.preventDefault();\r\n    if (onChange) {\r\n      // Create a synthetic change event\r\n      const inputElement = event.currentTarget;\r\n      const syntheticEvent = {\r\n        target: { ...inputElement, checked: !checked },\r\n        currentTarget: { ...inputElement, checked: !checked },\r\n        type: 'change',\r\n        bubbles: true,\r\n        cancelable: true,\r\n        preventDefault: () => {},\r\n        stopPropagation: () => {},\r\n      } as unknown as React.ChangeEvent<HTMLInputElement>;\r\n      \r\n      onChange(!checked, syntheticEvent);\r\n    }\r\n  }\r\n  // Let Space key work naturally - don't preventDefault for it\r\n};\r\n","'use client';\r\n\r\nimport React, { forwardRef, useMemo, useCallback, useEffect, useRef, useState } from 'react';\r\nimport { useCSSVariables, useSettings } from '../../../providers';\r\nimport { extractFormProps, UNIVERSAL_DEFAULTS } from '../types';\r\nimport type { CheckBoxProps } from './CheckBox.types';\r\nimport {\r\n  getVariantStyles,\r\n  getSizeStyles,\r\n  createBaseStyles,\r\n  getInputStyles,\r\n  getLabelStyles,\r\n  getDescriptionStyles,\r\n  getWrapperStyles,\r\n  getCheckboxWrapperStyles,\r\n  getFocusStyles,\r\n} from './CheckBox.styles';\r\nimport { createCheckIcon, getIconSize, handleKeyDown, getIconColor } from './CheckBox.utils';\r\nimport { Icon } from '../Icon';\r\n\r\nexport const CheckBox = forwardRef<HTMLInputElement, CheckBoxProps>((allProps, ref) => {\r\n  // Filter out interactive config props that shouldn't be passed to DOM\r\n  const {\r\n    onChange,\r\n    ...propsWithoutOnChange\r\n  } = allProps;\r\n\r\n  // Extract form props and component-specific props\r\n  const [formProps, componentProps] = extractFormProps(propsWithoutOnChange);\r\n  \r\n  // Destructure form props with defaults\r\n  const {\r\n    color = UNIVERSAL_DEFAULTS.color,\r\n    customColor,\r\n    variant = UNIVERSAL_DEFAULTS.variant,\r\n    size = UNIVERSAL_DEFAULTS.size,\r\n    shape = UNIVERSAL_DEFAULTS.shape,\r\n    disabled = UNIVERSAL_DEFAULTS.disabled,\r\n    error,\r\n    label,\r\n    className,\r\n    required,\r\n    style,\r\n    id,\r\n    'data-testid': dataTestId,\r\n    animate = UNIVERSAL_DEFAULTS.animate,\r\n    rounded, // Legacy support\r\n    onKeyDown,\r\n  } = formProps;\r\n  \r\n  // Destructure component-specific props\r\n  const {\r\n    checked,\r\n    defaultChecked = false,\r\n    indeterminate = false,\r\n    description,\r\n    contentToggleable = true,\r\n    ...restProps\r\n  } = componentProps;\r\n    // Determine if component is controlled or uncontrolled\r\n    const isControlled = checked !== undefined;\r\n    \r\n    // Internal state for uncontrolled mode\r\n    const [internalChecked, setInternalChecked] = useState(defaultChecked);\r\n    \r\n    // Use controlled value if provided, otherwise use internal state\r\n    const checkedValue = isControlled ? checked : internalChecked;\r\n    // Hooks\r\n    const cssVars = useCSSVariables();\r\n    const { settings } = useSettings();\r\n    const internalRef = useRef<HTMLInputElement>(null);\r\n    const inputRef = (ref as React.RefObject<HTMLInputElement>) || internalRef;\r\n\r\n    // Computed values\r\n    const animationsEnabled = (settings.appearance.animations ?? true) && animate;\r\n    const iconSize = getIconSize(size);\r\n    const asteriskSize = (size === 'lg' || size === 'xl') ? 'sm' : 'xs';\r\n\r\n    // Determine asterisk color based on variant and error state\r\n    const getAsteriskColor = () => {\r\n      if (Boolean(error)) {\r\n        return cssVars.destructive;\r\n      }\r\n\r\n      switch (variant) {\r\n        case 'solid':\r\n          // For solid variant, use main color on foreground background when unchecked\r\n          return color === 'custom' && customColor ? customColor : (cssVars as any)[color] || cssVars.primary;\r\n        case 'glassmorphic':\r\n          // For glassmorphic variant, use primary color when unchecked\r\n          return cssVars.primary;\r\n        case 'ghost':\r\n        case 'outline':\r\n        case 'invisible':\r\n        default:\r\n          return cssVars.mutedForeground;\r\n      }\r\n    };\r\n\r\n    // Set indeterminate state\r\n    useEffect(() => {\r\n      if (inputRef.current) {\r\n        inputRef.current.indeterminate = indeterminate;\r\n      }\r\n    }, [indeterminate, inputRef]);\r\n\r\n    // Event handlers\r\n    const handleChange = useCallback((event: React.ChangeEvent<HTMLInputElement>) => {\r\n      if (disabled) return;\r\n      \r\n      const newChecked = event.target.checked;\r\n      \r\n      // Update internal state if uncontrolled\r\n      if (!isControlled) {\r\n        setInternalChecked(newChecked);\r\n      }\r\n      \r\n      // Always call onChange callback\r\n      onChange?.(newChecked, event);\r\n    }, [disabled, onChange, isControlled]);\r\n\r\n    const handleKeyDownInternal = useCallback((event: React.KeyboardEvent<HTMLInputElement>) => {\r\n      if (!disabled) {\r\n        handleKeyDown(event, onChange, checkedValue);\r\n      }\r\n      onKeyDown?.(event);\r\n    }, [disabled, onChange, checkedValue, onKeyDown]);\r\n\r\n    // Styles\r\n    const baseStyles = useMemo(() => createBaseStyles(\r\n      disabled,\r\n      shape,\r\n      animationsEnabled,\r\n      rounded // Legacy support\r\n    ), [disabled, shape, animationsEnabled, rounded]);\r\n\r\n    const variantStyles = useMemo(() => getVariantStyles(\r\n      variant,\r\n      color,\r\n      customColor,\r\n      cssVars,\r\n      checkedValue || indeterminate,\r\n      Boolean(error)\r\n    ), [variant, color, customColor, cssVars, checkedValue, indeterminate, error]);\r\n\r\n    const sizeStyles = useMemo(() => getSizeStyles(size), [size]);\r\n    const inputStyles = useMemo(() => getInputStyles(), []);\r\n    const labelStyles = useMemo(() => label ? getLabelStyles(cssVars, size, Boolean(disabled), Boolean(contentToggleable)) : {}, [cssVars, size, disabled, contentToggleable, label]);\r\n    const descriptionStyles = useMemo(() => description ? getDescriptionStyles(cssVars, size, Boolean(disabled), Boolean(contentToggleable)) : {}, [cssVars, size, disabled, contentToggleable, description]);\r\n    const wrapperStyles = useMemo(() => getWrapperStyles(), []);\r\n    const checkboxWrapperStyles = useMemo(() => getCheckboxWrapperStyles(), []);\r\n\r\n    const combinedCheckboxStyles: React.CSSProperties = {\r\n      ...baseStyles,\r\n      ...sizeStyles,\r\n      ...variantStyles,\r\n      ...style,\r\n    };\r\n\r\n    // Focus state\r\n    const [focused, setFocused] = React.useState(false);\r\n    const focusStyles = focused ? getFocusStyles(color, customColor, cssVars, Boolean(error)) : {};\r\n\r\n    const finalCheckboxStyles = {\r\n      ...combinedCheckboxStyles,\r\n      ...focusStyles,\r\n    };\r\n\r\n    return (\r\n      <div style={wrapperStyles} className={className}>\r\n        <div style={checkboxWrapperStyles}>\r\n          {/* Checkbox container */}\r\n          <div style={finalCheckboxStyles}>\r\n            {/* Hidden input */}\r\n            <input\r\n              ref={inputRef}\r\n              type=\"checkbox\"\r\n              id={id}\r\n              checked={checkedValue}\r\n              disabled={disabled}\r\n              required={required}\r\n              onChange={handleChange}\r\n              onKeyDown={handleKeyDownInternal}\r\n              onFocus={() => setFocused(true)}\r\n              onBlur={() => setFocused(false)}\r\n              style={inputStyles}\r\n              data-testid={dataTestId}\r\n              aria-checked={indeterminate ? 'mixed' : checkedValue}\r\n              aria-describedby={description ? `${id}-description` : undefined}\r\n              {...restProps}\r\n            />\r\n            \r\n            {/* Check icon or Required asterisk */}\r\n            {required && !checkedValue && !indeterminate ? (\r\n              // Show asterisk for required unchecked state\r\n              <div\r\n                style={{\r\n                  position: 'absolute',\r\n                  top: '50%',\r\n                  left: '50%',\r\n                  transform: 'translate(-50%, -50%)',\r\n                  pointerEvents: 'none',\r\n                  display: 'flex',\r\n                  alignItems: 'center',\r\n                  justifyContent: 'center',\r\n                }}\r\n              >\r\n                <Icon\r\n                  name=\"Asterisk\"\r\n                  size={asteriskSize}\r\n                  color={getAsteriskColor()}\r\n                />\r\n              </div>\r\n            ) : (\r\n              // Show normal check icon\r\n              createCheckIcon(\r\n                checkedValue,\r\n                indeterminate,\r\n                Boolean(error),\r\n                iconSize,\r\n                getIconColor(color, customColor, Boolean(error), checkedValue, cssVars)\r\n              )\r\n            )}\r\n          </div>\r\n\r\n          {/* Label */}\r\n          {label && (\r\n            <label \r\n              htmlFor={contentToggleable ? id : undefined}\r\n              style={labelStyles}\r\n            >\r\n              {label}\r\n            </label>\r\n          )}\r\n        </div>\r\n\r\n        {/* Description */}\r\n        {description && (\r\n          <div\r\n            id={`${id}-description`}\r\n            style={descriptionStyles}\r\n            onClick={contentToggleable ? () => {\r\n              if (!disabled && inputRef.current) {\r\n                inputRef.current.click();\r\n              }\r\n            } : undefined}\r\n          >\r\n            {description}\r\n          </div>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n);\r\n\r\nCheckBox.displayName = 'CheckBox';","import React from 'react';\r\nimport type { CodeBlockColor, CodeBlockVariant, CodeBlockSize, CodeBlockShape } from './CodeBlock.types';\r\n\r\n// Get color variables based on color prop\r\nexport const getColorVariables = (color: CodeBlockColor, customColor: string | undefined, cssVars: any) => {\r\n  if (color === 'custom' && customColor) {\r\n    return {\r\n      main: customColor,\r\n      foreground: '#ffffff',\r\n      background: customColor + '10',\r\n      border: customColor,\r\n      hover: customColor + '20',\r\n    };\r\n  }\r\n\r\n  const colorMap: Record<string, any> = {\r\n    primary: {\r\n      main: cssVars.primary,\r\n      background: cssVars.primaryBackground,\r\n      foreground: cssVars.primaryForeground,\r\n      hover: cssVars.primaryHover,\r\n      border: cssVars.primaryBorder,\r\n    },\r\n    secondary: {\r\n      main: cssVars.secondary,\r\n      background: cssVars.secondaryBackground,\r\n      foreground: cssVars.secondaryForeground,\r\n      hover: cssVars.secondaryHover,\r\n      border: cssVars.secondaryBorder,\r\n    },\r\n    success: {\r\n      main: cssVars.success,\r\n      background: cssVars.successBackground,\r\n      foreground: cssVars.successForeground,\r\n      hover: cssVars.successHover,\r\n      border: cssVars.successBorder,\r\n    },\r\n    warning: {\r\n      main: cssVars.warning,\r\n      background: cssVars.warningBackground,\r\n      foreground: cssVars.warningForeground,\r\n      hover: cssVars.warningHover,\r\n      border: cssVars.warningBorder,\r\n    },\r\n    destructive: {\r\n      main: cssVars.destructive,\r\n      background: cssVars.destructiveBackground,\r\n      foreground: cssVars.destructiveForeground,\r\n      hover: cssVars.destructiveHover,\r\n      border: cssVars.destructiveBorder,\r\n    },\r\n    info: {\r\n      main: cssVars.info,\r\n      background: cssVars.infoBackground,\r\n      foreground: cssVars.infoForeground,\r\n      hover: cssVars.infoHover,\r\n      border: cssVars.infoBorder,\r\n    },\r\n  };\r\n\r\n  return colorMap[color] || colorMap.primary;\r\n};\r\n\r\n// Get shape styles based on shape prop and line numbers\r\nexport const getShapeStyles = (shape: CodeBlockShape, hasLineNumbers: boolean = false): React.CSSProperties => {\r\n  const getRadius = () => {\r\n    switch (shape) {\r\n      case 'sharp':\r\n        return '0';\r\n      case 'round':\r\n        return '12px';\r\n      case 'pill':\r\n        return '9999px';\r\n      default:\r\n        return '12px';\r\n    }\r\n  };\r\n  \r\n  const radius = getRadius();\r\n  \r\n  if (hasLineNumbers) {\r\n    return { \r\n      borderRadius: `${radius}`\r\n    };\r\n  }\r\n  \r\n  return { borderRadius: radius };\r\n};\r\n\r\n// Get variant styles\r\nexport const getVariantStyles = (\r\n  color: CodeBlockColor,\r\n  customColor: string | undefined,\r\n  variant: CodeBlockVariant,\r\n  cssVars: any,\r\n  hasLineNumbers: boolean = false\r\n): React.CSSProperties => {\r\n  const colors = getColorVariables(color, customColor, cssVars);\r\n  \r\n  const baseStyles = {\r\n    borderWidth: '2px',\r\n    borderStyle: 'solid' as const,\r\n  };\r\n\r\n  switch (variant) {\r\n    case 'solid':\r\n      return {\r\n        backgroundColor: colors.main,\r\n        color: colors.foreground,\r\n        borderColor: colors.main,\r\n        ...baseStyles,\r\n      };\r\n    case 'ghost':\r\n      return {\r\n        backgroundColor: 'transparent',\r\n        color: cssVars.foreground,\r\n        borderColor: 'transparent',\r\n        ...baseStyles,\r\n      };\r\n    case 'glassmorphic':\r\n      return {\r\n        backgroundColor: colors.background || cssVars.backgroundAccent,\r\n        color: cssVars.foreground,\r\n        borderColor: colors.border || colors.main,\r\n        backdropFilter: 'blur(10px)',\r\n        ...baseStyles,\r\n      };\r\n    case 'outline':\r\n    default:\r\n      return {\r\n        backgroundColor: 'transparent',\r\n        color: cssVars.foreground,\r\n        borderColor: colors.border || colors.main,\r\n        ...baseStyles,\r\n      };\r\n  }\r\n};\r\n\r\n// Get size styles\r\nexport const getSizeStyles = (size: CodeBlockSize): React.CSSProperties => {\r\n  const sizeMap = {\r\n    xs: { \r\n      padding: '8px 12px', \r\n      fontSize: '11px', \r\n      lineHeight: 1.4,\r\n    },\r\n    sm: { \r\n      padding: '12px 16px', \r\n      fontSize: '12px', \r\n      lineHeight: 1.4,\r\n    },\r\n    md: { \r\n      padding: '16px 20px', \r\n      fontSize: '13px', \r\n      lineHeight: 1.5,\r\n    },\r\n    lg: { \r\n      padding: '20px 24px', \r\n      fontSize: '14px', \r\n      lineHeight: 1.5,\r\n    },\r\n    xl: { \r\n      padding: '24px 28px', \r\n      fontSize: '15px', \r\n      lineHeight: 1.6,\r\n    },\r\n  };\r\n  return sizeMap[size];\r\n};\r\n\r\n// Create base styles\r\nexport const createBaseStyles = (\r\n  shape: CodeBlockShape,\r\n  maxHeight: string | undefined,\r\n  animationsEnabled: boolean,\r\n  hasLineNumbers: boolean = false,\r\n  // Legacy support\r\n  rounded?: boolean\r\n): React.CSSProperties => {\r\n  // Handle legacy rounded prop\r\n  const finalShape = rounded !== undefined ? (rounded ? 'pill' : 'round') : shape;\r\n  \r\n  return {\r\n    display: 'block',\r\n    fontFamily: 'ui-monospace, SFMono-Regular, \"SF Mono\", Consolas, \"Liberation Mono\", Menlo, monospace',\r\n    whiteSpace: 'pre-wrap',\r\n    overflowX: 'auto',\r\n    overflowY: maxHeight ? 'auto' : 'visible',\r\n    maxHeight: maxHeight || 'none',\r\n    transition: animationsEnabled \r\n      ? 'background-color var(--duration-fast) var(--animation-smooth), color var(--duration-fast) var(--animation-smooth), border-color var(--duration-fast) var(--animation-smooth)'\r\n      : 'none',\r\n    position: 'relative',\r\n    wordBreak: 'break-all',\r\n    tabSize: 2,\r\n    ...getShapeStyles(finalShape, hasLineNumbers),\r\n  };\r\n};\r\n\r\n// Inline code styles\r\nexport const getInlineCodeStyles = (\r\n  color: CodeBlockColor,\r\n  customColor: string | undefined,\r\n  variant: CodeBlockVariant,\r\n  size: CodeBlockSize,\r\n  shape: CodeBlockShape,\r\n  cssVars: any\r\n): React.CSSProperties => {\r\n  const colors = getColorVariables(color, customColor, cssVars);\r\n  const shapeStyles = getShapeStyles(shape);\r\n  \r\n  // Inline code uses smaller border radius\r\n  const inlineShapeStyles = {\r\n    ...shapeStyles,\r\n    borderRadius: shape === 'sharp' ? '0' : shape === 'pill' ? '4px' : '4px'\r\n  };\r\n  \r\n  const variantStyles = (() => {\r\n    switch (variant) {\r\n      case 'solid':\r\n        return {\r\n          backgroundColor: colors.main,\r\n          color: colors.foreground,\r\n          borderColor: colors.main,\r\n        };\r\n      case 'ghost':\r\n        return {\r\n          backgroundColor: 'transparent',\r\n          color: colors.main,\r\n          borderColor: 'transparent',\r\n        };\r\n      case 'glassmorphic':\r\n        return {\r\n          backgroundColor: colors.background,\r\n          color: colors.main,\r\n          borderColor: 'transparent',\r\n        };\r\n      case 'outline':\r\n      default:\r\n        return {\r\n          backgroundColor: cssVars.backgroundAccent,\r\n          color: cssVars.foreground,\r\n          borderColor: colors.border || cssVars.border,\r\n        };\r\n    }\r\n  })();\r\n  \r\n  const sizeStyles = (() => {\r\n    switch (size) {\r\n      case 'xs': return { padding: '1px 4px', fontSize: '10px' };\r\n      case 'sm': return { padding: '2px 4px', fontSize: '11px' };\r\n      case 'md': return { padding: '2px 6px', fontSize: '12px' };\r\n      case 'lg': return { padding: '3px 6px', fontSize: '13px' };\r\n      case 'xl': return { padding: '4px 8px', fontSize: '14px' };\r\n      default: return { padding: '2px 6px', fontSize: '12px' };\r\n    }\r\n  })();\r\n\r\n  return {\r\n    display: 'inline-block',\r\n    fontFamily: 'ui-monospace, SFMono-Regular, \"SF Mono\", Consolas, \"Liberation Mono\", Menlo, monospace',\r\n    whiteSpace: 'nowrap',\r\n    borderWidth: '2px',\r\n    borderStyle: 'solid',\r\n    verticalAlign: 'baseline',\r\n    ...inlineShapeStyles,\r\n    ...variantStyles,\r\n    ...sizeStyles,\r\n  };\r\n};\r\n\r\n// Copy button styles\r\nexport const getCopyButtonStyles = (\r\n  size: CodeBlockSize,\r\n  cssVars: any, \r\n  animationsEnabled: boolean\r\n): React.CSSProperties => {\r\n  const sizeConfig = (() => {\r\n    switch (size) {\r\n      case 'xs': return { padding: '4px 6px', fontSize: '10px', top: '4px', right: '4px' };\r\n      case 'sm': return { padding: '4px 8px', fontSize: '11px', top: '6px', right: '6px' };\r\n      case 'md': return { padding: '6px 8px', fontSize: '12px', top: '8px', right: '8px' };\r\n      case 'lg': return { padding: '6px 10px', fontSize: '12px', top: '10px', right: '10px' };\r\n      case 'xl': return { padding: '8px 12px', fontSize: '13px', top: '12px', right: '12px' };\r\n      default: return { padding: '6px 8px', fontSize: '12px', top: '8px', right: '8px' };\r\n    }\r\n  })();\r\n\r\n  return {\r\n    position: 'absolute',\r\n    top: sizeConfig.top,\r\n    right: sizeConfig.right,\r\n    backgroundColor: cssVars.background,\r\n    color: cssVars.mutedForeground,\r\n    border: `2px solid ${cssVars.border}`,\r\n    borderRadius: '8px',\r\n    padding: sizeConfig.padding,\r\n    fontSize: sizeConfig.fontSize,\r\n    cursor: 'pointer',\r\n    transition: animationsEnabled\r\n      ? 'background-color var(--duration-fast) var(--animation-smooth), color var(--duration-fast) var(--animation-smooth)'\r\n      : 'none',\r\n    fontFamily: 'inherit',\r\n    zIndex: 2,\r\n    // Note: Hover styles should be handled via event handlers in the component\r\n  };\r\n};\r\n\r\n// Line number styles\r\nexport const getLineNumberStyles = (\r\n  size: CodeBlockSize,\r\n  cssVars: any,\r\n  color: string,\r\n  customColor: string | undefined,\r\n  shape: string\r\n): React.CSSProperties => {\r\n  const sizeConfig = getSizeStyles(size);\r\n  const colors = getColorVariables(color as CodeBlockColor, customColor, cssVars);\r\n  \r\n  // Get border radius based on shape, but only apply to left corners\r\n  const getBorderRadius = () => {\r\n    switch (shape) {\r\n      case 'sharp':\r\n        return '0';\r\n      case 'round':\r\n        return '12px 0 0 12px'; // Only left corners rounded\r\n      case 'pill':\r\n        return '9999px 0 0 9999px'; // Only left corners rounded\r\n      default:\r\n        return '12px 0 0 12px'; // Only left corners rounded\r\n    }\r\n  };\r\n  \r\n  return {\r\n    position: 'absolute',\r\n    left: '0',\r\n    top: '0',\r\n    bottom: '0',\r\n    width: '44px',\r\n    backgroundColor: cssVars.backgroundAccent,\r\n    borderRight: `2px solid ${colors.border || colors.main}`,\r\n    borderTop: `2px solid ${colors.border || colors.main}`,\r\n    borderBottom: `2px solid ${colors.border || colors.main}`,\r\n    borderLeft: `2px solid ${colors.border || colors.main}`,\r\n    borderRadius: getBorderRadius(),\r\n    padding: (typeof sizeConfig.padding === 'string' ? sizeConfig.padding.split(' ')[0] : '12px') + ' 8px',\r\n    paddingTop: '32px', // Account for language label\r\n    fontSize: sizeConfig.fontSize,\r\n    lineHeight: sizeConfig.lineHeight,\r\n    color: colors.main, // Same color as title/language label\r\n    userSelect: 'none',\r\n    textAlign: 'right',\r\n    fontFamily: 'ui-monospace, SFMono-Regular, \"SF Mono\", Consolas, \"Liberation Mono\", Menlo, monospace',\r\n    zIndex: 1,\r\n  };\r\n};\r\n\r\n// Code content styles (when line numbers are shown)\r\nexport const getCodeContentStyles = (\r\n  hasLineNumbers: boolean,\r\n  size: CodeBlockSize\r\n): React.CSSProperties => {\r\n  if (!hasLineNumbers) return {};\r\n  \r\n  return {\r\n    paddingLeft: '56px', // 44px + 12px margin\r\n  };\r\n};\r\n\r\n// Highlight line styles\r\nexport const getHighlightLineStyles = (\r\n  lineNumber: number,\r\n  highlightedLines: number | number[],\r\n  cssVars: any\r\n): React.CSSProperties => {\r\n  const isHighlighted = Array.isArray(highlightedLines) \r\n    ? highlightedLines.includes(lineNumber)\r\n    : lineNumber === highlightedLines;\r\n\r\n  if (!isHighlighted) return {};\r\n\r\n  return {\r\n    backgroundColor: cssVars.primary + '20',\r\n    borderLeft: `3px solid ${cssVars.primary}`,\r\n    paddingLeft: '8px',\r\n    marginLeft: '-8px',\r\n  };\r\n};","import React from 'react';\r\nimport { Icon } from '../Icon';\r\n\r\nexport const copyToClipboard = async (text: string): Promise<boolean> => {\r\n  try {\r\n    if (navigator.clipboard && window.isSecureContext) {\r\n      await navigator.clipboard.writeText(text);\r\n      return true;\r\n    } else {\r\n      // Fallback for older browsers\r\n      const textArea = document.createElement('textarea');\r\n      textArea.value = text;\r\n      document.body.appendChild(textArea);\r\n      textArea.focus();\r\n      textArea.select();\r\n      document.execCommand('copy');\r\n      document.body.removeChild(textArea);\r\n      return true;\r\n    }\r\n  } catch (err) {\r\n    console.error('Failed to copy text: ', err);\r\n    return false;\r\n  }\r\n};\r\n\r\nexport const extractTextContent = (children: React.ReactNode): string => {\r\n  if (typeof children === 'string') {\r\n    return children;\r\n  }\r\n  \r\n  if (React.isValidElement(children)) {\r\n    const element = children as React.ReactElement<any>;\r\n    return extractTextContent(element.props.children);\r\n  }\r\n  \r\n  if (Array.isArray(children)) {\r\n    return children.map(extractTextContent).join('');\r\n  }\r\n  \r\n  return String(children || '');\r\n};\r\n\r\nexport const createCopyButton = (\r\n  onCopy: () => void,\r\n  copied: boolean,\r\n  styles: React.CSSProperties,\r\n  animationsEnabled: boolean\r\n): React.ReactElement => (\r\n  <button\r\n    onClick={onCopy}\r\n    style={styles}\r\n    onMouseEnter={(e) => {\r\n      if (animationsEnabled) {\r\n        e.currentTarget.style.opacity = '1';\r\n      }\r\n    }}\r\n    onMouseLeave={(e) => {\r\n      if (animationsEnabled) {\r\n        e.currentTarget.style.opacity = '0.8';\r\n      }\r\n    }}\r\n    title={copied ? 'Copied!' : 'Copy to clipboard'}\r\n    aria-label={copied ? 'Copied!' : 'Copy to clipboard'}\r\n  >\r\n    <Icon name={copied ? 'CheckCircle' : 'Copy'} size=\"xs\" />\r\n    <span style={{ marginLeft: '4px', userSelect: 'none' }}>\r\n      {copied ? 'Copied!' : 'Copy'}\r\n    </span>\r\n  </button>\r\n);\r\n\r\nexport const createLineNumbers = (\r\n  content: string,\r\n  styles: React.CSSProperties\r\n): React.ReactElement => {\r\n  const lines = content.split('\\n');\r\n  \r\n  return (\r\n    <div style={styles}>\r\n      {lines.map((_, index) => (\r\n        <div key={index + 1}>\r\n          {index + 1}\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport const highlightLines = (\r\n  content: string,\r\n  highlight: number | number[],\r\n  cssVars: any\r\n): React.ReactElement => {\r\n  const lines = content.split('\\n');\r\n  const highlightArray = Array.isArray(highlight) ? highlight : [highlight];\r\n  \r\n  return (\r\n    <>\r\n      {lines.map((line, index) => {\r\n        const lineNumber = index + 1;\r\n        const isHighlighted = highlightArray.includes(lineNumber);\r\n        \r\n        return (\r\n          <div\r\n            key={lineNumber}\r\n            style={{\r\n              backgroundColor: isHighlighted \r\n                ? cssVars.getColorWithOpacity?.('primary', 0.1) || 'rgba(59, 130, 246, 0.1)'\r\n                : 'transparent',\r\n              padding: '0 4px',\r\n              margin: '0 -4px',\r\n            }}\r\n          >\r\n            {line}\r\n          </div>\r\n        );\r\n      })}\r\n    </>\r\n  );\r\n};\r\n\r\nexport const getLanguageLabel = (language: string): string => {\r\n  const languageMap: Record<string, string> = {\r\n    js: 'JavaScript',\r\n    ts: 'TypeScript',\r\n    tsx: 'TypeScript React',\r\n    jsx: 'JavaScript React',\r\n    py: 'Python',\r\n    sh: 'Shell',\r\n    bash: 'Bash',\r\n    css: 'CSS',\r\n    html: 'HTML',\r\n    json: 'JSON',\r\n    md: 'Markdown',\r\n    sql: 'SQL',\r\n    yaml: 'YAML',\r\n    yml: 'YAML',\r\n  };\r\n  \r\n  return languageMap[language.toLowerCase()] || language.toUpperCase();\r\n};\r\n","import React from 'react';\r\n\r\nexport interface SyntaxTheme {\r\n  keyword: string;\r\n  string: string;\r\n  comment: string;\r\n  number: string;\r\n  operator: string;\r\n  function: string;\r\n  property: string;\r\n  tag: string;\r\n  attribute: string;\r\n  punctuation: string;\r\n}\r\n\r\nexport const createSyntaxTheme = (cssVars: any): SyntaxTheme => ({\r\n  keyword: '#569cd6',      // Blue for keywords (function, const, let, etc.)\r\n  string: '#ce9178',       // Orange for strings\r\n  comment: '#6a9955',      // Green for comments\r\n  number: '#b5cea8',       // Light green for numbers\r\n  operator: '#d4d4d4',     // Light gray for operators\r\n  function: '#dcdcaa',     // Yellow for function names\r\n  property: '#9cdcfe',     // Light blue for properties\r\n  tag: '#4ec9b0',          // Cyan for HTML/JSX tags\r\n  attribute: '#92c5f8',    // Light blue for attributes\r\n  punctuation: '#cccccc',  // Light gray for punctuation\r\n});\r\n\r\nexport const getLanguagePatterns = (language: string) => {\r\n  const basePatterns = {\r\n    // Comments\r\n    comment: [\r\n      /\\/\\*[\\s\\S]*?\\*\\//g,        // Block comments\r\n      /\\/\\/.*$/gm,                // Line comments\r\n      /#.*$/gm,                   // Python/Shell comments\r\n    ],\r\n    // Strings\r\n    string: [\r\n      /\"(?:[^\"\\\\]|\\\\.)*\"/g,       // Double quotes\r\n      /'(?:[^'\\\\]|\\\\.)*'/g,       // Single quotes\r\n      /`(?:[^`\\\\]|\\\\.|`)*`/g,     // Template literals\r\n    ],\r\n    // Numbers\r\n    number: [\r\n      /\\b\\d+\\.?\\d*\\b/g,           // Numbers (int and float)\r\n    ],\r\n  };\r\n\r\n  const languageSpecific: Record<string, any> = {\r\n    javascript: {\r\n      ...basePatterns,\r\n      keyword: [\r\n        /\\b(const|let|var|function|class|extends|import|export|from|default|if|else|for|while|do|switch|case|break|continue|return|try|catch|finally|throw|new|this|super|async|await|yield|typeof|instanceof)\\b/g\r\n      ],\r\n      operator: [\r\n        /[+\\-*/%=<>!&|^~?:]/g,\r\n      ],\r\n      function: [\r\n        /\\b([a-zA-Z_$][a-zA-Z0-9_$]*)\\s*(?=\\()/g,\r\n      ],\r\n      property: [\r\n        /\\.([a-zA-Z_$][a-zA-Z0-9_$]*)/g,\r\n      ],\r\n    },\r\n    typescript: {\r\n      ...basePatterns,\r\n      keyword: [\r\n        /\\b(const|let|var|function|class|extends|import|export|from|default|if|else|for|while|do|switch|case|break|continue|return|try|catch|finally|throw|new|this|super|async|await|yield|typeof|instanceof|interface|type|enum|namespace|declare|public|private|protected|readonly|static)\\b/g\r\n      ],\r\n      operator: [\r\n        /[+\\-*/%=<>!&|^~?:]/g,\r\n      ],\r\n      function: [\r\n        /\\b([a-zA-Z_$][a-zA-Z0-9_$]*)\\s*(?=\\()/g,\r\n      ],\r\n      property: [\r\n        /\\.([a-zA-Z_$][a-zA-Z0-9_$]*)/g,\r\n      ],\r\n    },\r\n    tsx: {\r\n      ...basePatterns,\r\n      keyword: [\r\n        /\\b(const|let|var|function|class|extends|import|export|from|default|if|else|for|while|do|switch|case|break|continue|return|try|catch|finally|throw|new|this|super|async|await|yield|typeof|instanceof|interface|type|enum|namespace|declare|public|private|protected|readonly|static)\\b/g\r\n      ],\r\n      operator: [\r\n        /[+\\-*/%=<>!&|^~?:]/g,\r\n      ],\r\n      function: [\r\n        /\\b([a-zA-Z_$][a-zA-Z0-9_$]*)\\s*(?=\\()/g,\r\n      ],\r\n      property: [\r\n        /\\.([a-zA-Z_$][a-zA-Z0-9_$]*)/g,\r\n      ],\r\n      tag: [\r\n        /<\\/?[a-zA-Z][a-zA-Z0-9]*(?:\\s[^>]*)?\\/?>/g,\r\n      ],\r\n      attribute: [\r\n        /\\b([a-zA-Z-]+)(?==)/g,\r\n      ],\r\n    },\r\n    jsx: {\r\n      ...basePatterns,\r\n      keyword: [\r\n        /\\b(const|let|var|function|class|extends|import|export|from|default|if|else|for|while|do|switch|case|break|continue|return|try|catch|finally|throw|new|this|super|async|await|yield|typeof|instanceof)\\b/g\r\n      ],\r\n      operator: [\r\n        /[+\\-*/%=<>!&|^~?:]/g,\r\n      ],\r\n      function: [\r\n        /\\b([a-zA-Z_$][a-zA-Z0-9_$]*)\\s*(?=\\()/g,\r\n      ],\r\n      property: [\r\n        /\\.([a-zA-Z_$][a-zA-Z0-9_$]*)/g,\r\n      ],\r\n      tag: [\r\n        /<\\/?[a-zA-Z][a-zA-Z0-9]*(?:\\s[^>]*)?\\/?>/g,\r\n      ],\r\n      attribute: [\r\n        /\\b([a-zA-Z-]+)(?==)/g,\r\n      ],\r\n    },\r\n    css: {\r\n      ...basePatterns,\r\n      property: [\r\n        /([a-zA-Z-]+)\\s*:/g,\r\n      ],\r\n      keyword: [\r\n        /\\b(important|inherit|initial|unset|auto|none)\\b/g,\r\n      ],\r\n      function: [\r\n        /([a-zA-Z-]+)\\(/g,\r\n      ],\r\n    },\r\n    json: {\r\n      string: [\r\n        /\"(?:[^\"\\\\]|\\\\.)*\"/g,\r\n      ],\r\n      number: [\r\n        /\\b\\d+\\.?\\d*\\b/g,\r\n      ],\r\n      keyword: [\r\n        /\\b(true|false|null)\\b/g,\r\n      ],\r\n      property: [\r\n        /\"([^\"]+)\"\\s*:/g,\r\n      ],\r\n    },\r\n  };\r\n\r\n  return languageSpecific[language.toLowerCase()] || basePatterns;\r\n};\r\n\r\nexport const highlightSyntax = (code: string, language: string, theme: SyntaxTheme): React.ReactElement[] => {\r\n  if (!language || language === 'text' || language === 'plain') {\r\n    return [<span key={0}>{code}</span>];\r\n  }\r\n\r\n  const patterns = getLanguagePatterns(language);\r\n  const tokens: Array<{ type: string; content: string; start: number; end: number }> = [];\r\n\r\n  // Find all matches for each token type\r\n  Object.entries(patterns).forEach(([type, regexes]) => {\r\n    if (Array.isArray(regexes)) {\r\n      regexes.forEach(regex => {\r\n        let match;\r\n        while ((match = regex.exec(code)) !== null) {\r\n          tokens.push({\r\n            type,\r\n            content: match[0],\r\n            start: match.index,\r\n            end: match.index + match[0].length,\r\n          });\r\n        }\r\n      });\r\n    }\r\n  });\r\n\r\n  // Sort tokens by start position\r\n  tokens.sort((a, b) => a.start - b.start);\r\n\r\n  // Merge overlapping tokens (keep the first one)\r\n  const mergedTokens: typeof tokens = [];\r\n  let lastEnd = 0;\r\n\r\n  tokens.forEach(token => {\r\n    if (token.start >= lastEnd) {\r\n      mergedTokens.push(token);\r\n      lastEnd = token.end;\r\n    }\r\n  });\r\n\r\n  // Create highlighted elements\r\n  const elements: React.ReactElement[] = [];\r\n  let currentIndex = 0;\r\n\r\n  mergedTokens.forEach((token, index) => {\r\n    // Add unhighlighted text before this token\r\n    if (token.start > currentIndex) {\r\n      const text = code.slice(currentIndex, token.start);\r\n      elements.push(<span key={`text-${index}`}>{text}</span>);\r\n    }\r\n\r\n    // Add highlighted token\r\n    const color = theme[token.type as keyof SyntaxTheme] || theme.punctuation;\r\n    elements.push(\r\n      <span key={`token-${index}`} style={{ color }}>\r\n        {token.content}\r\n      </span>\r\n    );\r\n\r\n    currentIndex = token.end;\r\n  });\r\n\r\n  // Add remaining unhighlighted text\r\n  if (currentIndex < code.length) {\r\n    const text = code.slice(currentIndex);\r\n    elements.push(<span key=\"text-end\">{text}</span>);\r\n  }\r\n\r\n  return elements.length > 0 ? elements : [<span key={0}>{code}</span>];\r\n};\r\n","'use client';\r\n\r\nimport React, { forwardRef, useMemo, useState, useCallback } from 'react';\r\nimport { useCSSVariables, useSettings, useToast } from '../../../providers';\r\nimport { extractContainerProps, UNIVERSAL_DEFAULTS } from '../types';\r\nimport type { CodeBlockProps } from './CodeBlock.types';\r\nimport {\r\n  getVariantStyles,\r\n  getSizeStyles,\r\n  createBaseStyles,\r\n  getCopyButtonStyles,\r\n  getLineNumberStyles,\r\n  getColorVariables,\r\n  getInlineCodeStyles\r\n} from './CodeBlock.styles';\r\nimport { \r\n  extractTextContent, \r\n  copyToClipboard, \r\n  createCopyButton, \r\n  createLineNumbers, \r\n  highlightLines,\r\n  getLanguageLabel \r\n} from './CodeBlock.utils';\r\nimport { highlightSyntax, createSyntaxTheme } from './CodeBlock.syntax';\r\nimport { Button, Icon } from '../';\r\n\r\nexport const CodeBlock = forwardRef<HTMLElement, CodeBlockProps>((allProps, ref) => {\r\n  // Extract container props and component-specific props\r\n  const [containerProps, componentProps] = extractContainerProps(allProps);\r\n  \r\n  // Destructure container props with defaults\r\n  const {\r\n    color = UNIVERSAL_DEFAULTS.color,\r\n    customColor,\r\n    variant = UNIVERSAL_DEFAULTS.variant,\r\n    shape = UNIVERSAL_DEFAULTS.shape,\r\n    size = UNIVERSAL_DEFAULTS.size,\r\n    disabled = UNIVERSAL_DEFAULTS.disabled,\r\n    loading = UNIVERSAL_DEFAULTS.loading,\r\n    loadingKey,\r\n    width,\r\n    height,\r\n    className,\r\n    style,\r\n    id,\r\n    'data-testid': dataTestId,\r\n    animate = UNIVERSAL_DEFAULTS.animate,\r\n    rounded, // Legacy support\r\n    children,\r\n    clickable,\r\n    onClick,\r\n    onAsyncClick,\r\n    maxHeight,\r\n  } = containerProps;\r\n  \r\n  // Destructure component-specific props\r\n  const {\r\n    language,\r\n    copyable = false,\r\n    lineNumbers = false,\r\n    highlight,\r\n    syntaxHighlighting = true,\r\n    inline = false,\r\n    onCopy,\r\n    ...restProps\r\n  } = componentProps;\r\n    // Hooks\r\n    const cssVars = useCSSVariables();\r\n    const { settings } = useSettings();\r\n    const { success, error } = useToast();\r\n\r\n    // State\r\n    const [copied, setCopied] = useState(false);\r\n\r\n    // Computed values\r\n    const isInline = inline;\r\n    const animationsEnabled = (settings.appearance.animations ?? true) && animate;\r\n    const textContent = extractTextContent(children);\r\n    const syntaxTheme = useMemo(() => createSyntaxTheme(cssVars), [cssVars]);\r\n\r\n    // Event handlers\r\n    const handleCopy = useCallback(async () => {\r\n      const copySuccess = await copyToClipboard(textContent);\r\n      if (copySuccess) {\r\n        setCopied(true);\r\n        setTimeout(() => setCopied(false), 2000);\r\n        onCopy?.(textContent);\r\n        success('Code copied to clipboard!');\r\n      } else {\r\n        error('Failed to copy code to clipboard');\r\n      }\r\n    }, [textContent, onCopy, success, error]);\r\n\r\n    // Styles\r\n    const baseStyles = useMemo(() => createBaseStyles(\r\n      shape,\r\n      typeof maxHeight === 'string' ? maxHeight : maxHeight?.toString(),\r\n      animationsEnabled,\r\n      lineNumbers, // Pass line numbers flag\r\n      rounded // Legacy support\r\n    ), [shape, maxHeight, animationsEnabled, lineNumbers, rounded]);\r\n\r\n    const variantStyles = useMemo(() => getVariantStyles(color, customColor, variant, cssVars, lineNumbers), [color, customColor, variant, cssVars, lineNumbers]);\r\n    const sizeStyles = useMemo(() => getSizeStyles(size), [size]);\r\n\r\n    const combinedStyles: React.CSSProperties = {\r\n      ...baseStyles,\r\n      ...sizeStyles,\r\n      ...variantStyles,\r\n      paddingTop: language ? '32px' : sizeStyles.padding,\r\n      paddingLeft: lineNumbers ? '52px' : '16px',\r\n      width,\r\n      height,\r\n      ...style,\r\n    };\r\n\r\n    const copyButtonStyles = useMemo(() => getCopyButtonStyles(size, cssVars, animationsEnabled), [size, cssVars, animationsEnabled]);\r\n    const lineNumberStyles = useMemo(() => getLineNumberStyles(size, cssVars, color, customColor, shape), [size, cssVars, color, customColor, shape]);\r\n    const inlineStyles = useMemo(() => getInlineCodeStyles(color, customColor, variant, size, shape, cssVars), [color, customColor, variant, size, shape, cssVars]);\r\n\r\n    // Content rendering\r\n    const renderContent = () => {\r\n      if (typeof children === 'string') {\r\n        // Apply syntax highlighting if language is specified and enabled\r\n        if (language && syntaxHighlighting) {\r\n          const highlightedElements = highlightSyntax(children, language, syntaxTheme);\r\n          \r\n          // If we also have line highlighting, we need to combine both\r\n          if (highlight) {\r\n            const lines = children.split('\\n');\r\n            const highlightArray = Array.isArray(highlight) ? highlight : [highlight];\r\n            \r\n            return lines.map((line, index) => {\r\n              const lineNumber = index + 1;\r\n              const isHighlighted = highlightArray.includes(lineNumber);\r\n              const lineHighlighted = highlightSyntax(line, language, syntaxTheme);\r\n              \r\n              return (\r\n                <div\r\n                  key={lineNumber}\r\n                  style={{\r\n                    backgroundColor: isHighlighted \r\n                      ? cssVars.getColorWithOpacity?.('primary', 0.1) || 'rgba(59, 130, 246, 0.1)'\r\n                      : 'transparent',\r\n                    padding: '0 4px',\r\n                    margin: '0 -4px',\r\n                  }}\r\n                >\r\n                  {lineHighlighted}\r\n                  {index < lines.length - 1 && '\\n'}\r\n                </div>\r\n              );\r\n            });\r\n          }\r\n          \r\n          return highlightedElements;\r\n        }\r\n        \r\n        // Fallback to line highlighting without syntax highlighting\r\n        if (highlight) {\r\n          return highlightLines(children, highlight, cssVars);\r\n        }\r\n      }\r\n      \r\n      return children;\r\n    };\r\n\r\n    // For inline code blocks, use <code> element\r\n    if (isInline) {\r\n      return (\r\n        <code\r\n          ref={ref as React.Ref<HTMLElement>}\r\n          id={id}\r\n          style={{...inlineStyles, ...style}}\r\n          className={className}\r\n          data-testid={dataTestId}\r\n          {...restProps}\r\n        >\r\n          {children}\r\n        </code>\r\n      );\r\n    }\r\n\r\n    return (\r\n      <div style={{ position: 'relative' }}>\r\n        {/* Language label */}\r\n        {language && (\r\n          <div\r\n            style={{\r\n              position: 'absolute',\r\n              top: '12px',\r\n              left: lineNumbers ? '52px' : '16px', // Move right when line numbers are present\r\n              fontSize: '12px',\r\n              color: variant === 'solid'\r\n                ? getColorVariables(color, customColor, cssVars).foreground\r\n                : getColorVariables(color, customColor, cssVars).main,\r\n              fontFamily: 'inherit',\r\n              zIndex: 2, // Higher z-index to appear above line numbers\r\n              opacity: 0.8,\r\n              userSelect: 'none',\r\n              fontWeight: '500',\r\n            }}\r\n          >\r\n            {getLanguageLabel(language)}\r\n          </div>\r\n        )}\r\n\r\n        {/* Copy button */}\r\n        {copyable && (\r\n          <div style={{\r\n            position: 'absolute',\r\n            top: '4px',\r\n            right: '8px',\r\n            zIndex: 2\r\n          }}>\r\n            <Button\r\n              size=\"sm\"\r\n              variant=\"ghost\"\r\n              color={color}\r\n              onClick={handleCopy}\r\n              animate={animationsEnabled}\r\n              style={{\r\n                minWidth: 'auto',\r\n                padding: '6px 8px',\r\n                color: variant === 'solid'\r\n                  ? getColorVariables(color, customColor, cssVars).foreground\r\n                  : (variant === 'outline' || variant === 'glassmorphic' || variant === 'ghost')\r\n                    ? getColorVariables(color, customColor, cssVars).main\r\n                    : undefined\r\n              }}\r\n            >\r\n              <Icon \r\n                name={copied ? \"CheckCircle\" : \"Copy\"} \r\n                size=\"sm\" \r\n              />\r\n            </Button>\r\n          </div>\r\n        )}\r\n\r\n        {/* Line numbers */}\r\n        {lineNumbers && createLineNumbers(textContent, lineNumberStyles)}\r\n\r\n        {/* Main code block */}\r\n        <pre\r\n          ref={ref as React.Ref<HTMLPreElement>}\r\n          id={id}\r\n          style={combinedStyles}\r\n          className={className}\r\n          data-testid={dataTestId}\r\n          {...restProps}\r\n        >\r\n          <code>\r\n            {renderContent()}\r\n          </code>\r\n        </pre>\r\n      </div>\r\n    );\r\n  }\r\n);\r\n\r\nCodeBlock.displayName = 'CodeBlock';","import React from 'react';\r\nimport type { DividerColor, DividerSize, DividerOrientation, DividerSpacing } from './Divider.types';\r\n\r\n// Get color variables based on color prop\r\nexport const getColorVariables = (color: DividerColor, customColor: string | undefined, cssVars: any) => {\r\n  if (color === 'custom' && customColor) {\r\n    return {\r\n      main: customColor,\r\n      foreground: customColor,\r\n      border: customColor,\r\n    };\r\n  }\r\n\r\n  const colorMap: Record<string, any> = {\r\n    primary: {\r\n      main: cssVars.primary,\r\n      foreground: cssVars.primary,\r\n      border: cssVars.primary,\r\n    },\r\n    secondary: {\r\n      main: cssVars.secondary,\r\n      foreground: cssVars.secondary,\r\n      border: cssVars.secondary,\r\n    },\r\n    success: {\r\n      main: cssVars.success,\r\n      foreground: cssVars.success,\r\n      border: cssVars.success,\r\n    },\r\n    warning: {\r\n      main: cssVars.warning,\r\n      foreground: cssVars.warning,\r\n      border: cssVars.warning,\r\n    },\r\n    destructive: {\r\n      main: cssVars.destructive,\r\n      foreground: cssVars.destructive,\r\n      border: cssVars.destructive,\r\n    },\r\n    info: {\r\n      main: cssVars.info,\r\n      foreground: cssVars.info,\r\n      border: cssVars.info,\r\n    },\r\n    muted: {\r\n      main: cssVars.border,\r\n      foreground: cssVars.border,\r\n      border: cssVars.border,\r\n    },\r\n  };\r\n\r\n  return colorMap[color] || colorMap.muted;\r\n};\r\n\r\nexport const getVariantStyles = (\r\n  color: DividerColor, \r\n  customColor: string | undefined,\r\n  cssVars: any, \r\n  useBorder: boolean = false,\r\n  orientation: DividerOrientation = 'horizontal',\r\n  dashed: boolean = false,\r\n  dotted: boolean = false,\r\n  size: DividerSize = 'md'\r\n) => {\r\n  const colors = getColorVariables(color, customColor, cssVars);\r\n  const colorValue = colors.main;\r\n\r\n  const sizeMap = {\r\n    xs: 1,\r\n    sm: 2,\r\n    md: 3,\r\n    lg: 4,\r\n    xl: 6,\r\n  };\r\n  \r\n  const thickness = sizeMap[size];\r\n\r\n  // For custom dashed and dotted patterns\r\n  if (dashed || dotted) {\r\n    const styles: React.CSSProperties = {\r\n      borderColor: 'transparent',\r\n      backgroundColor: 'transparent',\r\n    };\r\n\r\n    if (dashed) {\r\n      // Create custom dashed pattern with wider, rounded dashes\r\n      const dashLength = Math.max(thickness * 3, 8); // Wider dashes\r\n      const gapLength = Math.max(thickness * 2, 4);\r\n      \r\n      if (orientation === 'vertical') {\r\n        styles.backgroundImage = `linear-gradient(to bottom, ${colorValue} 0%, ${colorValue} 100%)`;\r\n        styles.backgroundSize = `${thickness}px ${dashLength}px`;\r\n        styles.backgroundRepeat = 'repeat-y';\r\n        styles.backgroundPosition = `0 0, 0 ${dashLength + gapLength}px`;\r\n        styles.maskImage = `repeating-linear-gradient(to bottom, black 0px, black ${dashLength}px, transparent ${dashLength}px, transparent ${dashLength + gapLength}px)`;\r\n        styles.WebkitMaskImage = `repeating-linear-gradient(to bottom, black 0px, black ${dashLength}px, transparent ${dashLength}px, transparent ${dashLength + gapLength}px)`;\r\n      } else {\r\n        styles.backgroundImage = `linear-gradient(to right, ${colorValue} 0%, ${colorValue} 100%)`;\r\n        styles.backgroundSize = `${dashLength}px ${thickness}px`;\r\n        styles.backgroundRepeat = 'repeat-x';\r\n        styles.backgroundPosition = `0 0, ${dashLength + gapLength}px 0`;\r\n        styles.maskImage = `repeating-linear-gradient(to right, black 0px, black ${dashLength}px, transparent ${dashLength}px, transparent ${dashLength + gapLength}px)`;\r\n        styles.WebkitMaskImage = `repeating-linear-gradient(to right, black 0px, black ${dashLength}px, transparent ${dashLength}px, transparent ${dashLength + gapLength}px)`;\r\n      }\r\n      \r\n      // Add rounded corners to the dashes\r\n      styles.borderRadius = `${Math.min(thickness / 2, 2)}px`;\r\n    } else if (dotted) {\r\n      // Create custom dotted pattern with rounded dots\r\n      const dotSize = Math.max(thickness, 2);\r\n      const spacing = dotSize * 2.5;\r\n      \r\n      if (orientation === 'vertical') {\r\n        styles.backgroundImage = `radial-gradient(circle, ${colorValue} ${dotSize / 2}px, transparent ${dotSize / 2}px)`;\r\n        styles.backgroundSize = `${dotSize}px ${spacing}px`;\r\n        styles.backgroundRepeat = 'repeat-y';\r\n        styles.backgroundPosition = 'center 0';\r\n      } else {\r\n        styles.backgroundImage = `radial-gradient(circle, ${colorValue} ${dotSize / 2}px, transparent ${dotSize / 2}px)`;\r\n        styles.backgroundSize = `${spacing}px ${dotSize}px`;\r\n        styles.backgroundRepeat = 'repeat-x';\r\n        styles.backgroundPosition = '0 center';\r\n      }\r\n    }\r\n\r\n    return styles;\r\n  }\r\n\r\n  // For solid dividers or border-based patterns\r\n  if (useBorder) {\r\n    return {\r\n      borderColor: colorValue,\r\n      backgroundColor: 'transparent',\r\n    };\r\n  }\r\n\r\n  return {\r\n    borderColor: colorValue,\r\n    backgroundColor: colorValue,\r\n  };\r\n};\r\n\r\nexport const getSizeStyles = (\r\n  size: DividerSize, \r\n  orientation: DividerOrientation, \r\n  useBorder: boolean = false,\r\n  useCustomPattern: boolean = false\r\n) => {\r\n  const sizeMap = {\r\n    xs: 1,\r\n    sm: 2,\r\n    md: 3,\r\n    lg: 4,\r\n    xl: 6,\r\n  };\r\n  \r\n  const thickness = sizeMap[size];\r\n  \r\n  if (orientation === 'vertical') {\r\n    if (useBorder && !useCustomPattern) {\r\n      return {\r\n        borderLeftWidth: `${thickness}px`,\r\n        width: 'auto',\r\n        height: 'auto',\r\n        minHeight: '20px',\r\n      };\r\n    } else {\r\n      return {\r\n        width: `${thickness}px`,\r\n        height: 'auto',\r\n        minHeight: '20px',\r\n      };\r\n    }\r\n  }\r\n  \r\n  if (useBorder && !useCustomPattern) {\r\n    return {\r\n      borderTopWidth: `${thickness}px`,\r\n      height: 'auto',\r\n      width: 'auto',\r\n      minWidth: '20px',\r\n    };\r\n  } else {\r\n    return {\r\n      height: `${thickness}px`,\r\n      width: 'auto',\r\n      minWidth: '20px',\r\n    };\r\n  }\r\n};\r\n\r\nexport const getSpacingStyles = (spacing: DividerSpacing, orientation: DividerOrientation) => {\r\n  const spacingMap = {\r\n    none: 0,\r\n    xs: 8,\r\n    sm: 12,\r\n    md: 16,\r\n    lg: 20,\r\n    xl: 24,\r\n  };\r\n  \r\n  const space = spacingMap[spacing];\r\n  \r\n  if (orientation === 'vertical') {\r\n    return {\r\n      marginLeft: `${space}px`,\r\n      marginRight: `${space}px`,\r\n    };\r\n  }\r\n  \r\n  return {\r\n    marginTop: `${space}px`,\r\n    marginBottom: `${space}px`,\r\n  };\r\n};\r\n\r\nexport const createBaseStyles = (\r\n  orientation: DividerOrientation,\r\n  fullSize: boolean,\r\n  rounded: boolean,\r\n  subtle: boolean,\r\n  dashed: boolean,\r\n  dotted: boolean\r\n): React.CSSProperties => {\r\n  const baseStyles: React.CSSProperties = {\r\n    position: 'relative',\r\n    borderWidth: '0',\r\n    borderStyle: 'solid',\r\n    borderColor: 'transparent',\r\n    flexShrink: 0,\r\n    opacity: subtle ? 0.5 : 1,\r\n  };\r\n  \r\n  // For dashed/dotted styles, we'll use CSS mask or background for better control\r\n  const useCustomPattern = dashed || dotted;\r\n  \r\n  if (orientation === 'vertical') {\r\n    baseStyles.alignSelf = fullSize ? 'stretch' : 'auto';\r\n    baseStyles.height = fullSize ? '100%' : 'auto';\r\n    \r\n    if (useCustomPattern) {\r\n      // We'll handle custom patterns in the variant styles\r\n      baseStyles.width = '1px'; // This will be overridden by size styles\r\n    } else {\r\n      // For solid lines, use background color for better appearance\r\n      baseStyles.width = '1px'; // This will be overridden by size styles\r\n    }\r\n  } else {\r\n    baseStyles.width = fullSize ? '100%' : 'auto';\r\n    \r\n    if (useCustomPattern) {\r\n      // We'll handle custom patterns in the variant styles\r\n      baseStyles.height = '1px'; // This will be overridden by size styles\r\n    } else {\r\n      // For solid lines, use background color for better appearance\r\n      baseStyles.height = '1px'; // This will be overridden by size styles\r\n    }\r\n  }\r\n  \r\n  if (rounded && !useCustomPattern) {\r\n    baseStyles.borderRadius = '4px';\r\n  }\r\n  \r\n  return baseStyles;\r\n};\r\n\r\nexport const createLabelStyles = (\r\n  orientation: DividerOrientation,\r\n  labelPosition: 'start' | 'center' | 'end',\r\n  cssVars: any,\r\n  variantStyles: any\r\n): React.CSSProperties => {\r\n  const baseStyles: React.CSSProperties = {\r\n    backgroundColor: 'transparent',\r\n    fontSize: '12px',\r\n    fontWeight: '500',\r\n    color: variantStyles.borderColor || variantStyles.backgroundColor,\r\n    whiteSpace: 'nowrap',\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    flexShrink: 0,\r\n  };\r\n  \r\n  // Adjust padding and positioning based on label position\r\n  if (labelPosition === 'start') {\r\n    baseStyles.paddingRight = '8px';\r\n    baseStyles.paddingLeft = '0px';\r\n    baseStyles.justifyContent = 'flex-start';\r\n  } else if (labelPosition === 'end') {\r\n    baseStyles.paddingLeft = '8px';\r\n    baseStyles.paddingRight = '0px';\r\n    baseStyles.justifyContent = 'flex-end';\r\n  } else {\r\n    baseStyles.padding = '0 8px';\r\n    baseStyles.justifyContent = 'center';\r\n  }\r\n  \r\n  if (orientation === 'vertical') {\r\n    baseStyles.transform = 'rotate(90deg)';\r\n    baseStyles.transformOrigin = 'center';\r\n  }\r\n  \r\n  return baseStyles;\r\n};\r\n\r\nexport const createGappedDividerStyles = (\r\n  orientation: DividerOrientation,\r\n  labelPosition: 'start' | 'center' | 'end',\r\n  variantStyles: any,\r\n  sizeStyles: any,\r\n  rounded: boolean,\r\n  subtle: boolean,\r\n  dashed: boolean,\r\n  dotted: boolean\r\n): { \r\n  beforeStyles: React.CSSProperties, \r\n  afterStyles: React.CSSProperties,\r\n  containerStyles: React.CSSProperties \r\n} => {\r\n  const opacity = subtle ? 0.5 : 1;\r\n  const useCustomPattern = dashed || dotted;\r\n  \r\n  const baseDividerStyles: React.CSSProperties = {\r\n    ...variantStyles,\r\n    opacity,\r\n    flexShrink: 0,\r\n  };\r\n  \r\n  if (rounded && !useCustomPattern) {\r\n    baseDividerStyles.borderRadius = '4px';\r\n  }\r\n  \r\n  if (orientation === 'vertical') {\r\n    const containerStyles: React.CSSProperties = {\r\n      display: 'flex',\r\n      flexDirection: 'column',\r\n      alignItems: 'center',\r\n      height: '100%',\r\n    };\r\n    \r\n    const dividerStyles: React.CSSProperties = {\r\n      ...baseDividerStyles,\r\n      height: 'auto',\r\n      flex: 1,\r\n      minHeight: '20px',\r\n    };\r\n    \r\n    // Apply size styles\r\n    if (useCustomPattern) {\r\n      dividerStyles.width = sizeStyles.width;\r\n    } else if (sizeStyles.borderLeftWidth) {\r\n      dividerStyles.borderLeftWidth = sizeStyles.borderLeftWidth;\r\n      dividerStyles.borderLeftStyle = 'solid';\r\n      dividerStyles.borderLeftColor = variantStyles.borderColor;\r\n      dividerStyles.width = 'auto';\r\n      dividerStyles.backgroundColor = 'transparent';\r\n    } else {\r\n      dividerStyles.width = sizeStyles.width;\r\n      dividerStyles.backgroundColor = variantStyles.backgroundColor;\r\n    }\r\n    \r\n    let beforeStyles = { ...dividerStyles };\r\n    let afterStyles = { ...dividerStyles };\r\n    \r\n    if (labelPosition === 'start') {\r\n      beforeStyles = { display: 'none' };\r\n    } else if (labelPosition === 'end') {\r\n      afterStyles = { display: 'none' };\r\n    }\r\n    \r\n    return { beforeStyles, afterStyles, containerStyles };\r\n  } else {\r\n    // Horizontal\r\n    const containerStyles: React.CSSProperties = {\r\n      display: 'flex',\r\n      alignItems: 'center',\r\n      width: '100%',\r\n    };\r\n    \r\n    const dividerStyles: React.CSSProperties = {\r\n      ...baseDividerStyles,\r\n      width: 'auto',\r\n      minWidth: '20px',\r\n    };\r\n    \r\n    // Apply size styles\r\n    if (useCustomPattern) {\r\n      dividerStyles.height = sizeStyles.height;\r\n    } else if (sizeStyles.borderTopWidth) {\r\n      dividerStyles.borderTopWidth = sizeStyles.borderTopWidth;\r\n      dividerStyles.borderTopStyle = 'solid';\r\n      dividerStyles.borderTopColor = variantStyles.borderColor;\r\n      dividerStyles.height = 'auto';\r\n      dividerStyles.backgroundColor = 'transparent';\r\n    } else {\r\n      dividerStyles.height = sizeStyles.height;\r\n      dividerStyles.backgroundColor = variantStyles.backgroundColor;\r\n    }\r\n    \r\n    let beforeStyles = { ...dividerStyles };\r\n    let afterStyles = { ...dividerStyles };\r\n    \r\n    if (labelPosition === 'start') {\r\n      // For start position, no divider before label, full divider after\r\n      beforeStyles = { display: 'none' };\r\n      afterStyles = { ...dividerStyles, flex: 1 };\r\n    } else if (labelPosition === 'end') {\r\n      // For end position, full divider before label, no divider after\r\n      beforeStyles = { ...dividerStyles, flex: 1 };\r\n      afterStyles = { display: 'none' };\r\n    } else {\r\n      // For center position, equal dividers on both sides\r\n      beforeStyles = { ...dividerStyles, flex: 1 };\r\n      afterStyles = { ...dividerStyles, flex: 1 };\r\n    }\r\n    \r\n    return { beforeStyles, afterStyles, containerStyles };\r\n  }\r\n};\r\n\r\nexport const createContainerStyles = (\r\n  orientation: DividerOrientation,\r\n  hasLabel: boolean\r\n): React.CSSProperties => {\r\n  if (!hasLabel) return {};\r\n  \r\n  return {\r\n    position: 'relative',\r\n    display: 'flex',\r\n    alignItems: orientation === 'horizontal' ? 'center' : 'stretch',\r\n    justifyContent: orientation === 'vertical' ? 'center' : 'stretch',\r\n  };\r\n};\r\n","/**\r\n * Creates accessible attributes for the divider\r\n */\r\nexport const createAccessibilityProps = (label?: React.ReactNode) => ({\r\n  role: 'separator',\r\n  'aria-orientation': 'horizontal' as const,\r\n  'aria-label': typeof label === 'string' ? label : undefined,\r\n});\r\n\r\n/**\r\n * Creates vertical accessibility attributes for the divider\r\n */\r\nexport const createVerticalAccessibilityProps = (label?: React.ReactNode) => ({\r\n  role: 'separator',\r\n  'aria-orientation': 'vertical' as const,\r\n  'aria-label': typeof label === 'string' ? label : undefined,\r\n});\r\n\r\n/**\r\n * Validates if the divider configuration is valid\r\n */\r\nexport const validateDividerProps = (\r\n  dashed: boolean,\r\n  dotted: boolean,\r\n  orientation: string,\r\n  fullSize: boolean\r\n): boolean => {\r\n  // Cannot be both dashed and dotted\r\n  if (dashed && dotted) {\r\n    console.warn('Divider: Cannot be both dashed and dotted. Dashed will take precedence.');\r\n    return false;\r\n  }\r\n  \r\n  // Vertical dividers should have a minimum height when not fullSize\r\n  if (orientation === 'vertical' && !fullSize) {\r\n    // This is handled in styles, just a note for developers\r\n  }\r\n  \r\n  return true;\r\n};\r\n\r\n/**\r\n * Creates theme-aware label content\r\n */\r\nexport const createLabelContent = (\r\n  label: React.ReactNode,\r\n  cssVars: any\r\n): React.ReactElement => {\r\n  if (typeof label === 'string') {\r\n    return (\r\n      <span>\r\n        {label}\r\n      </span>\r\n    );\r\n  }\r\n  \r\n  return label as React.ReactElement;\r\n};\r\n","'use client';\r\n\r\nimport React, { forwardRef, useMemo } from 'react';\r\nimport { useCSSVariables } from '../../../providers';\r\nimport { extractContainerProps, UNIVERSAL_DEFAULTS } from '../types';\r\nimport type { DividerProps } from './Divider.types';\r\nimport { \r\n  getVariantStyles,\r\n  getSizeStyles,\r\n  getSpacingStyles,\r\n  createBaseStyles,\r\n  createLabelStyles,\r\n  createGappedDividerStyles,\r\n  createContainerStyles\r\n} from './Divider.styles';\r\nimport { \r\n  createAccessibilityProps,\r\n  createVerticalAccessibilityProps,\r\n  validateDividerProps,\r\n  createLabelContent\r\n} from './Divider.utils';\r\n\r\nexport const Divider = forwardRef<HTMLDivElement, DividerProps>((allProps, ref) => {\r\n  // Extract container props and component-specific props\r\n  const [containerProps, componentProps] = extractContainerProps(allProps);\r\n  \r\n  // Destructure container props with defaults\r\n  const {\r\n    color = 'muted', // Default to muted for dividers\r\n    customColor,\r\n    size = UNIVERSAL_DEFAULTS.size,\r\n    disabled = UNIVERSAL_DEFAULTS.disabled,\r\n    loading = UNIVERSAL_DEFAULTS.loading,\r\n    loadingKey,\r\n    width,\r\n    height,\r\n    className,\r\n    style,\r\n    id,\r\n    'data-testid': dataTestId,\r\n    animate = UNIVERSAL_DEFAULTS.animate,\r\n    rounded = false, // Keep divider-specific default\r\n    children,\r\n    clickable,\r\n    onClick,\r\n    onAsyncClick,\r\n  } = containerProps;\r\n  \r\n  // Destructure component-specific props\r\n  const {\r\n    orientation = 'horizontal',\r\n    spacing = 'md',\r\n    fullSize = true,\r\n    label,\r\n    labelPosition = 'center',\r\n    subtle = false,\r\n    dashed = false,\r\n    dotted = false,\r\n    ...restProps\r\n  } = componentProps;\r\n    // Hooks\r\n    const cssVars = useCSSVariables();\r\n\r\n    // Validation\r\n    validateDividerProps(dashed, dotted, orientation, fullSize);\r\n\r\n    // Computed values\r\n    const hasLabel = Boolean(label);\r\n    const isVertical = orientation === 'vertical';\r\n    const useBorder = dashed || dotted;\r\n    const useCustomPattern = dashed || dotted;\r\n\r\n    // Accessibility props\r\n    const accessibilityProps = useMemo(() => \r\n      isVertical \r\n        ? createVerticalAccessibilityProps(label)\r\n        : createAccessibilityProps(label),\r\n      [isVertical, label]\r\n    );\r\n\r\n    // Styles\r\n    const baseStyles = useMemo(() => \r\n      createBaseStyles(orientation, fullSize, rounded, subtle, dashed, dotted),\r\n      [orientation, fullSize, rounded, subtle, dashed, dotted]\r\n    );\r\n\r\n    const variantStyles = useMemo(() => \r\n      getVariantStyles(color, customColor, cssVars, useBorder, orientation, dashed, dotted, size),\r\n      [color, customColor, cssVars, useBorder, orientation, dashed, dotted, size]\r\n    );\r\n\r\n    const sizeStyles = useMemo(() => \r\n      getSizeStyles(size, orientation, useBorder, useCustomPattern),\r\n      [size, orientation, useBorder, useCustomPattern]\r\n    );\r\n\r\n    const spacingStyles = useMemo(() => \r\n      getSpacingStyles(spacing, orientation),\r\n      [spacing, orientation]\r\n    );\r\n\r\n    const labelStyles = useMemo(() => \r\n      hasLabel ? createLabelStyles(orientation, labelPosition, cssVars, variantStyles) : {},\r\n      [hasLabel, orientation, labelPosition, cssVars, variantStyles]\r\n    );\r\n\r\n    // For labeled dividers, create gapped styles\r\n    const gappedStyles = useMemo(() => {\r\n      if (!hasLabel) return null;\r\n      return createGappedDividerStyles(\r\n        orientation, \r\n        labelPosition, \r\n        variantStyles, \r\n        sizeStyles, \r\n        rounded, \r\n        subtle, \r\n        dashed, \r\n        dotted\r\n      );\r\n    }, [hasLabel, orientation, labelPosition, variantStyles, sizeStyles, rounded, subtle, dashed, dotted]);\r\n\r\n    const combinedStyles: React.CSSProperties = {\r\n      ...baseStyles,\r\n      ...variantStyles,\r\n      ...sizeStyles,\r\n      ...spacingStyles,\r\n      width,\r\n      height,\r\n      ...style,\r\n    };\r\n\r\n    // If there's a label, use the gapped approach\r\n    if (hasLabel && gappedStyles) {\r\n      return (\r\n        <div\r\n          ref={ref}\r\n          id={id}\r\n          className={className}\r\n          style={{ ...gappedStyles.containerStyles, ...spacingStyles, width, height }}\r\n          data-testid={dataTestId}\r\n          {...accessibilityProps}\r\n          {...restProps}\r\n        >\r\n          {/* Before divider segment */}\r\n          <div style={gappedStyles.beforeStyles} />\r\n          \r\n          {/* Label */}\r\n          <div style={labelStyles}>\r\n            {createLabelContent(label, cssVars)}\r\n          </div>\r\n          \r\n          {/* After divider segment */}\r\n          <div style={gappedStyles.afterStyles} />\r\n        </div>\r\n      );\r\n    }\r\n\r\n    // Simple divider without label\r\n    return (\r\n      <div\r\n        ref={ref}\r\n        id={id}\r\n        className={className}\r\n        style={combinedStyles}\r\n        data-testid={dataTestId}\r\n        {...accessibilityProps}\r\n        {...restProps}\r\n      />\r\n    );\r\n  }\r\n);\r\n\r\nDivider.displayName = 'Divider';\r\n","import React from 'react';\r\nimport type { DropdownColor, DropdownVariant, DropdownSize, DropdownShape, DropdownPosition } from './Dropdown.types';\r\n\r\n// Get color variables based on color prop\r\nexport const getColorVariables = (color: DropdownColor, customColor: string | undefined, cssVars: any) => {\r\n  if (color === 'custom' && customColor) {\r\n    return {\r\n      main: customColor,\r\n      foreground: '#ffffff',\r\n      background: customColor + '10',\r\n      border: customColor,\r\n      hover: customColor + '20',\r\n    };\r\n  }\r\n\r\n  const colorMap: Record<string, any> = {\r\n    primary: {\r\n      main: cssVars.primary,\r\n      background: cssVars.primaryBackground,\r\n      foreground: cssVars.primaryForeground,\r\n      hover: cssVars.primaryHover,\r\n      accent: cssVars.primaryAccent,\r\n      shadow: cssVars.primaryShadow,\r\n      disabled: cssVars.primaryDisabled,\r\n      border: cssVars.primaryBorder,\r\n    },\r\n    secondary: {\r\n      main: cssVars.secondary,\r\n      background: cssVars.secondaryBackground,\r\n      foreground: cssVars.secondaryForeground,\r\n      hover: cssVars.secondaryHover,\r\n      accent: cssVars.secondaryAccent,\r\n      shadow: cssVars.secondaryShadow,\r\n      disabled: cssVars.secondaryDisabled,\r\n      border: cssVars.secondaryBorder,\r\n    },\r\n    success: {\r\n      main: cssVars.success,\r\n      background: cssVars.successBackground,\r\n      foreground: cssVars.successForeground,\r\n      hover: cssVars.successHover,\r\n      accent: cssVars.successAccent,\r\n      shadow: cssVars.successShadow,\r\n      disabled: cssVars.successDisabled,\r\n      border: cssVars.successBorder,\r\n    },\r\n    warning: {\r\n      main: cssVars.warning,\r\n      background: cssVars.warningBackground,\r\n      foreground: cssVars.warningForeground,\r\n      hover: cssVars.warningHover,\r\n      accent: cssVars.warningAccent,\r\n      shadow: cssVars.warningShadow,\r\n      disabled: cssVars.warningDisabled,\r\n      border: cssVars.warningBorder,\r\n    },\r\n    destructive: {\r\n      main: cssVars.destructive,\r\n      background: cssVars.destructiveBackground,\r\n      foreground: cssVars.destructiveForeground,\r\n      hover: cssVars.destructiveHover,\r\n      accent: cssVars.destructiveAccent,\r\n      shadow: cssVars.destructiveShadow,\r\n      disabled: cssVars.destructiveDisabled,\r\n      border: cssVars.destructiveBorder,\r\n    },\r\n    info: {\r\n      main: cssVars.info,\r\n      background: cssVars.infoBackground,\r\n      foreground: cssVars.infoForeground,\r\n      hover: cssVars.infoHover,\r\n      accent: cssVars.infoAccent,\r\n      shadow: cssVars.infoShadow,\r\n      disabled: cssVars.infoDisabled,\r\n      border: cssVars.infoBorder,\r\n    },\r\n  };\r\n\r\n  return colorMap[color] || colorMap.primary;\r\n};\r\n\r\n// Get shape styles based on shape prop\r\nexport const getShapeStyles = (shape: DropdownShape): React.CSSProperties => {\r\n  switch (shape) {\r\n    case 'sharp':\r\n      return { borderRadius: '0' };\r\n    case 'round':\r\n      return { borderRadius: '12px' };\r\n    case 'pill':\r\n      return { borderRadius: '9999px' };\r\n    default:\r\n      return { borderRadius: '12px' };\r\n  }\r\n};\r\n\r\nexport const createBaseStyles = (\r\n  size: DropdownSize,\r\n  shape: DropdownShape,\r\n  animationsEnabled: boolean,\r\n  width?: string | number,\r\n  // Legacy support\r\n  rounded?: boolean\r\n): React.CSSProperties => {\r\n  // Handle legacy rounded prop\r\n  const finalShape = rounded !== undefined ? (rounded ? 'pill' : 'round') : shape;\r\n  \r\n  const baseStyles: React.CSSProperties = {\r\n    position: 'relative',\r\n    display: 'inline-block',\r\n    width: width || '200px',\r\n    minWidth: '120px',\r\n    transition: animationsEnabled \r\n      ? 'width var(--duration-fast) var(--animation-smooth), opacity var(--duration-fast) var(--animation-smooth)' \r\n      : 'none',\r\n    ...getShapeStyles(finalShape),\r\n  };\r\n\r\n  return baseStyles;\r\n};\r\n\r\n// Get size styles for dropdowns\r\nexport const getSizeStyles = (size: DropdownSize): React.CSSProperties => {\r\n  const sizeMap = {\r\n    xs: { paddingTop: '4px', paddingRight: '12px', paddingBottom: '4px', paddingLeft: '12px', fontSize: '14px', minHeight: '40px' },\r\n    sm: { paddingTop: '6px', paddingRight: '12px', paddingBottom: '6px', paddingLeft: '12px', fontSize: '14px', minHeight: '40px' },\r\n    md: { paddingTop: '8px', paddingRight: '16px', paddingBottom: '8px', paddingLeft: '16px', fontSize: '16px', minHeight: '48px' },\r\n    lg: { paddingTop: '10px', paddingRight: '20px', paddingBottom: '10px', paddingLeft: '20px', fontSize: '16px', minHeight: '52px' },\r\n    xl: { paddingTop: '12px', paddingRight: '24px', paddingBottom: '12px', paddingLeft: '24px', fontSize: '18px', minHeight: '60px' },\r\n  };\r\n  return sizeMap[size] || sizeMap.md;\r\n};\r\n\r\nexport const getTriggerStyles = (\r\n  color: DropdownColor,\r\n  variant: DropdownVariant,\r\n  size: DropdownSize,\r\n  shape: DropdownShape,\r\n  disabled: boolean,\r\n  error: boolean,\r\n  open: boolean,\r\n  customColor: string | undefined,\r\n  cssVars: any,\r\n  animationsEnabled: boolean,\r\n  // Legacy support\r\n  rounded?: boolean\r\n): React.CSSProperties => {\r\n  const colors = getColorVariables(color, customColor, cssVars);\r\n  const sizeStyles = getSizeStyles(size);\r\n  const finalShape = rounded !== undefined ? (rounded ? 'pill' : 'round') : shape;\r\n\r\n  // Base trigger styles\r\n  const baseStyles: React.CSSProperties = {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'space-between',\r\n    width: '100%',\r\n    cursor: disabled ? 'not-allowed' : 'pointer',\r\n    outline: 'none',\r\n    fontFamily: 'inherit',\r\n    transition: animationsEnabled\r\n      ? 'background-color var(--duration-fast) var(--animation-smooth), color var(--duration-fast) var(--animation-smooth), border-top-color var(--duration-fast) var(--animation-smooth), border-right-color var(--duration-fast) var(--animation-smooth), border-bottom-color var(--duration-fast) var(--animation-smooth), border-left-color var(--duration-fast) var(--animation-smooth)'\r\n      : 'none',\r\n    position: 'relative',\r\n    boxShadow: 'none',\r\n    WebkitAppearance: 'none',\r\n    MozAppearance: 'none',\r\n    opacity: disabled ? 0.6 : 1,\r\n    ...sizeStyles,\r\n    ...getShapeStyles(finalShape),\r\n  };\r\n\r\n  // Base border styles (individual properties to avoid conflicts) - matching Search component\r\n  const baseBorderStyles = {\r\n    borderTopWidth: '2px',\r\n    borderRightWidth: '2px',\r\n    borderBottomWidth: '2px',\r\n    borderLeftWidth: '2px',\r\n    borderTopStyle: 'solid' as const,\r\n    borderRightStyle: 'solid' as const,\r\n    borderBottomStyle: 'solid' as const,\r\n    borderLeftStyle: 'solid' as const,\r\n  };\r\n\r\n  // Variant-specific styles (matching Search component)\r\n  const variantStyles = (() => {\r\n    switch (variant) {\r\n      case 'solid':\r\n        return {\r\n          backgroundColor: colors.accent || colors.main,\r\n          color: colors.foreground,\r\n          borderTopColor: colors.accent || colors.main,\r\n          borderRightColor: colors.accent || colors.main,\r\n          borderBottomColor: colors.accent || colors.main,\r\n          borderLeftColor: colors.accent || colors.main,\r\n          ...baseBorderStyles,\r\n        };\r\n      case 'ghost':\r\n        return {\r\n          backgroundColor: 'transparent',\r\n          color: cssVars.foreground,\r\n          borderTopColor: 'transparent',\r\n          borderRightColor: 'transparent',\r\n          borderBottomColor: 'transparent',\r\n          borderLeftColor: 'transparent',\r\n          ...baseBorderStyles,\r\n        };\r\n      case 'glassmorphic':\r\n        return {\r\n          backgroundColor: colors.background,\r\n          color: colors.foreground,\r\n          borderTopColor: colors.border,\r\n          borderRightColor: colors.border,\r\n          borderBottomColor: colors.border,\r\n          borderLeftColor: colors.border,\r\n          backdropFilter: 'blur(10px)',\r\n          WebkitBackdropFilter: 'blur(10px)',\r\n          ...baseBorderStyles,\r\n        };\r\n      case 'outline':\r\n      default:\r\n        return {\r\n          backgroundColor: cssVars.background,\r\n          color: cssVars.foreground,\r\n          borderTopColor: colors.main,\r\n          borderRightColor: colors.main,\r\n          borderBottomColor: colors.main,\r\n          borderLeftColor: colors.main,\r\n          ...baseBorderStyles,\r\n        };\r\n    }\r\n  })();\r\n\r\n  // Error state override (matching Search component)\r\n  if (error) {\r\n    const destructiveVariantStyles = (() => {\r\n      switch (variant) {\r\n        case 'solid':\r\n          return {\r\n            backgroundColor: cssVars.destructiveAccent || cssVars.destructive,\r\n            color: colors.foreground,\r\n            borderTopColor: cssVars.destructive,\r\n            borderRightColor: cssVars.destructive,\r\n            borderBottomColor: cssVars.destructive,\r\n            borderLeftColor: cssVars.destructive,\r\n            ...baseBorderStyles,\r\n          };\r\n        case 'ghost':\r\n          return {\r\n            backgroundColor: 'transparent',\r\n            color: cssVars.foreground,\r\n            borderTopColor: cssVars.destructive,\r\n            borderRightColor: cssVars.destructive,\r\n            borderBottomColor: cssVars.destructive,\r\n            borderLeftColor: cssVars.destructive,\r\n            ...baseBorderStyles,\r\n          };\r\n        case 'glassmorphic':\r\n          return {\r\n            backgroundColor: cssVars.destructiveBackground,\r\n            color: cssVars.destructiveForeground,\r\n            borderTopColor: cssVars.destructive,\r\n            borderRightColor: cssVars.destructive,\r\n            borderBottomColor: cssVars.destructive,\r\n            borderLeftColor: cssVars.destructive,\r\n            backdropFilter: 'blur(10px)',\r\n            WebkitBackdropFilter: 'blur(10px)',\r\n            ...baseBorderStyles,\r\n          };\r\n        case 'outline':\r\n        default:\r\n          return {\r\n            backgroundColor: cssVars.background,\r\n            color: cssVars.foreground,\r\n            borderTopColor: cssVars.destructive,\r\n            borderRightColor: cssVars.destructive,\r\n            borderBottomColor: cssVars.destructive,\r\n            borderLeftColor: cssVars.destructive,\r\n            ...baseBorderStyles,\r\n          };\r\n      }\r\n    })();\r\n\r\n    return {\r\n      ...baseStyles,\r\n      ...destructiveVariantStyles,\r\n    } as React.CSSProperties;\r\n  }\r\n\r\n  return {\r\n    ...baseStyles,\r\n    ...variantStyles,\r\n  } as React.CSSProperties;\r\n};\r\n\r\nexport const getArrowStyles = (\r\n  size: DropdownSize,\r\n  open: boolean,\r\n  animationsEnabled: boolean,\r\n  cssVars: any,\r\n  variant: DropdownVariant = 'outline',\r\n  colors?: any\r\n): React.CSSProperties => {\r\n  // Determine arrow color based on variant\r\n  let arrowColor = cssVars.foreground; // default\r\n  \r\n  if (colors) {\r\n    switch (variant) {\r\n      case 'solid':\r\n        arrowColor = colors.foreground || cssVars.foreground;\r\n        break;\r\n      case 'outline':\r\n        arrowColor = colors.main; // Match the text color in outline variant\r\n        break;\r\n      case 'ghost':\r\n        arrowColor = colors.main; // Match the text color in ghost variant\r\n        break;\r\n      case 'glassmorphic':\r\n        arrowColor = colors.main; // Match the text color in glassmorphic variant\r\n        break;\r\n      default:\r\n        arrowColor = cssVars.foreground;\r\n        break;\r\n    }\r\n  }\r\n\r\n  const baseStyles: React.CSSProperties = {\r\n    flexShrink: 0,\r\n    marginLeft: '8px',\r\n    transition: animationsEnabled ? 'transform 0.2s ease-in-out, color 0.2s ease-in-out' : 'none',\r\n    transform: open ? 'rotate(180deg)' : 'rotate(0deg)',\r\n    color: arrowColor,\r\n  };\r\n\r\n  const sizeStyles = (() => {\r\n    switch (size) {\r\n      case 'sm':\r\n        return { fontSize: '14px' };\r\n      case 'lg':\r\n        return { fontSize: '18px' };\r\n      case 'md':\r\n      default:\r\n        return { fontSize: '16px' };\r\n    }\r\n  })();\r\n\r\n  return { ...baseStyles, ...sizeStyles };\r\n};\r\n\r\nexport const getMenuStyles = (\r\n  position: DropdownPosition,\r\n  maxHeight: string,\r\n  rounded: boolean,\r\n  cssVars: any,\r\n  animationsEnabled: boolean\r\n): React.CSSProperties => {\r\n  const baseStyles: React.CSSProperties = {\r\n    position: 'absolute',\r\n    zIndex: 9999,\r\n    backgroundColor: cssVars.popover || cssVars.card || cssVars.background,\r\n    borderRadius: rounded ? '12px' : '8px',\r\n    boxShadow: '0 10px 15px -3px rgba(0, 0, 0, 0.1), 0 4px 6px -2px rgba(0, 0, 0, 0.05)',\r\n    maxHeight,\r\n    overflow: 'hidden',\r\n    minWidth: '100%',\r\n    marginTop: '4px',\r\n    opacity: 1,\r\n    transform: 'translateY(0)',\r\n    transition: animationsEnabled ? 'all 0.2s ease-in-out' : 'none',\r\n  };\r\n\r\n  // Position-specific styles\r\n  const positionStyles = (() => {\r\n    switch (position) {\r\n      case 'bottom-start':\r\n        return { top: '100%', left: '0' };\r\n      case 'bottom-end':\r\n        return { top: '100%', right: '0' };\r\n      case 'top-start':\r\n        return { bottom: '100%', left: '0', marginTop: '0', marginBottom: '4px' };\r\n      case 'top-end':\r\n        return { bottom: '100%', right: '0', marginTop: '0', marginBottom: '4px' };\r\n      case 'left':\r\n        return { top: '0', right: '100%', marginTop: '0', marginRight: '4px' };\r\n      case 'right':\r\n        return { top: '0', left: '100%', marginTop: '0', marginLeft: '4px' };\r\n      default:\r\n        return { top: '100%', left: '0' };\r\n    }\r\n  })();\r\n\r\n  return { ...baseStyles, ...positionStyles };\r\n};\r\n\r\nexport const getOptionStyles = (\r\n  size: DropdownSize,\r\n  selected: boolean,\r\n  disabled: boolean,\r\n  highlighted: boolean,\r\n  cssVars: any,\r\n  animationsEnabled: boolean,\r\n  variant: DropdownVariant = 'outline',\r\n  colors?: ReturnType<typeof getColorVariables>\r\n): React.CSSProperties => {\r\n  const baseStyles: React.CSSProperties = {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    width: '100%',\r\n    border: 'none',\r\n    backgroundColor: 'transparent',\r\n    textAlign: 'left',\r\n    cursor: disabled ? 'not-allowed' : 'pointer',\r\n    outline: 'none',\r\n    transition: animationsEnabled ? 'all 0.15s ease-in-out' : 'none',\r\n    color: 'inherit',\r\n    fontFamily: 'inherit',\r\n  };\r\n\r\n  // Size-specific styles\r\n  const sizeStyles = (() => {\r\n    switch (size) {\r\n      case 'sm':\r\n        return {\r\n          padding: '6px 12px',\r\n          fontSize: '14px',\r\n          lineHeight: '1.4',\r\n        };\r\n      case 'lg':\r\n        return {\r\n          padding: '10px 16px',\r\n          fontSize: '16px',\r\n          lineHeight: '1.5',\r\n        };\r\n      case 'md':\r\n      default:\r\n        return {\r\n          padding: '8px 14px',\r\n          fontSize: '14px',\r\n          lineHeight: '1.5',\r\n        };\r\n    }\r\n  })();\r\n\r\n  // State-specific styles\r\n  const stateStyles: React.CSSProperties = {};\r\n  \r\n  if (disabled) {\r\n    stateStyles.opacity = 0.5;\r\n    stateStyles.cursor = 'not-allowed';\r\n  } else if (selected) {\r\n    // Use the component's theme color background for selected state\r\n    stateStyles.backgroundColor = colors?.background || cssVars.primaryBackground;\r\n    stateStyles.color = colors?.main || cssVars.primary;\r\n    stateStyles.fontWeight = '500';\r\n  } else if (highlighted) {\r\n    // Enhanced hover background logic for maximum visibility across all themes\r\n    // Always use a semi-transparent overlay of the component's primary color\r\n    // This ensures consistent, visible hover effects regardless of theme\r\n    const primaryColor = colors?.main || cssVars.primary;\r\n\r\n    // Convert hex to rgba for proper transparency\r\n    let hoverBackground;\r\n    if (primaryColor.startsWith('#')) {\r\n      // Convert hex to rgba with 15% opacity for subtle but visible effect\r\n      const hex = primaryColor.replace('#', '');\r\n      const r = parseInt(hex.substr(0, 2), 16);\r\n      const g = parseInt(hex.substr(2, 2), 16);\r\n      const b = parseInt(hex.substr(4, 2), 16);\r\n      hoverBackground = `rgba(${r}, ${g}, ${b}, 0.15)`;\r\n    } else {\r\n      // Fallback for non-hex colors\r\n      hoverBackground = cssVars.backgroundHover || cssVars.muted || primaryColor + '20';\r\n    }\r\n\r\n    stateStyles.backgroundColor = hoverBackground;\r\n  }\r\n\r\n  return {\r\n    ...baseStyles,\r\n    ...sizeStyles,\r\n    ...stateStyles,\r\n  };\r\n};\r\n\r\nexport const getSearchStyles = (\r\n  size: DropdownSize,\r\n  rounded: boolean,\r\n  cssVars: any,\r\n  variant: DropdownVariant = 'outline'\r\n): React.CSSProperties => {\r\n  // Use standard foreground colors\r\n  const textColor = cssVars.foreground;\r\n  const placeholderColor = cssVars.mutedForeground;\r\n\r\n  const baseStyles: React.CSSProperties = {\r\n    width: '100%',\r\n    backgroundColor: cssVars.background,\r\n    color: textColor,\r\n    outline: 'none',\r\n    fontFamily: 'inherit',\r\n    border: '1px solid transparent',\r\n    transition: 'border-color 0.2s ease-in-out',\r\n    // Hide native search clear button\r\n    WebkitAppearance: 'none',\r\n    // Placeholder styling\r\n    '::placeholder': {\r\n      color: placeholderColor,\r\n      opacity: 1,\r\n    },\r\n  } as React.CSSProperties & {\r\n    '::placeholder': { color: string; opacity: number };\r\n  };\r\n\r\n  const sizeStyles = (() => {\r\n    switch (size) {\r\n      case 'sm':\r\n        return {\r\n          padding: '6px 12px',\r\n          fontSize: '14px',\r\n          borderRadius: rounded ? '6px' : '4px',\r\n        };\r\n      case 'lg':\r\n        return {\r\n          padding: '10px 16px',\r\n          fontSize: '16px',\r\n          borderRadius: rounded ? '10px' : '8px',\r\n        };\r\n      case 'md':\r\n      default:\r\n        return {\r\n          padding: '8px 14px',\r\n          fontSize: '14px',\r\n          borderRadius: rounded ? '8px' : '6px',\r\n        };\r\n    }\r\n  })();\r\n\r\n  return { ...baseStyles, ...sizeStyles };\r\n};\r\n\r\nexport const getLoadingStyles = (\r\n  size: DropdownSize,\r\n  cssVars: any\r\n): React.CSSProperties => {\r\n  const baseStyles: React.CSSProperties = {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    color: cssVars.mutedForeground,\r\n    fontStyle: 'italic',\r\n  };\r\n\r\n  const sizeStyles = (() => {\r\n    switch (size) {\r\n      case 'sm':\r\n        return { padding: '12px', fontSize: '14px' };\r\n      case 'lg':\r\n        return { padding: '16px', fontSize: '16px' };\r\n      case 'md':\r\n      default:\r\n        return { padding: '14px', fontSize: '14px' };\r\n    }\r\n  })();\r\n\r\n  return { ...baseStyles, ...sizeStyles };\r\n};\r\n\r\nexport const getEmptyStyles = (\r\n  size: DropdownSize,\r\n  cssVars: any\r\n): React.CSSProperties => {\r\n  return getLoadingStyles(size, cssVars);\r\n};\r\n\r\nexport const getDividerStyles = (cssVars: any): React.CSSProperties => ({\r\n  height: '1px',\r\n  backgroundColor: cssVars.border,\r\n  margin: '4px 0',\r\n});\r\n\r\nexport const getGroupLabelStyles = (\r\n  size: DropdownSize,\r\n  cssVars: any\r\n): React.CSSProperties => {\r\n  const baseStyles: React.CSSProperties = {\r\n    color: cssVars.mutedForeground,\r\n    fontWeight: '600',\r\n    textTransform: 'uppercase',\r\n    letterSpacing: '0.025em',\r\n  };\r\n\r\n  const sizeStyles = (() => {\r\n    switch (size) {\r\n      case 'sm':\r\n        return {\r\n          padding: '6px 12px 2px',\r\n          fontSize: '11px',\r\n        };\r\n      case 'lg':\r\n        return {\r\n          padding: '10px 16px 4px',\r\n          fontSize: '13px',\r\n        };\r\n      case 'md':\r\n      default:\r\n        return {\r\n          padding: '8px 14px 3px',\r\n          fontSize: '12px',\r\n        };\r\n    }\r\n  })();\r\n\r\n  return { ...baseStyles, ...sizeStyles };\r\n};\r\n\r\nexport const getPlaceholderStyles = (\r\n  cssVars: any,\r\n  variant: DropdownVariant = 'outline',\r\n  colors?: ReturnType<typeof getColorVariables>\r\n): React.CSSProperties => {\r\n  // Use component's color scheme to match the variant and selected color\r\n  let placeholderColor: string;\r\n\r\n  switch (variant) {\r\n    case 'solid':\r\n      // For solid variant, use the foreground color (usually white/light on colored background)\r\n      placeholderColor = colors?.foreground || cssVars.foreground;\r\n      break;\r\n    case 'outline':\r\n    case 'ghost':\r\n    case 'glassmorphic':\r\n      // For outline, ghost, and glassmorphic variants, use the main component color\r\n      placeholderColor = colors?.main || cssVars.primary;\r\n      break;\r\n    default:\r\n      placeholderColor = colors?.main || cssVars.primary;\r\n      break;\r\n  }\r\n\r\n  return {\r\n    color: placeholderColor,\r\n    opacity: 1,\r\n  };\r\n};\r\n\r\nexport const getValueDisplayStyles = (): React.CSSProperties => ({\r\n  flex: 1,\r\n  overflow: 'hidden',\r\n  textOverflow: 'ellipsis',\r\n  whiteSpace: 'nowrap',\r\n  textAlign: 'left',\r\n});\r\n\r\nexport const getMultiValueStyles = (\r\n  size: DropdownSize,\r\n  rounded: boolean,\r\n  cssVars: any,\r\n  variant: DropdownVariant = 'outline',\r\n  colors?: ReturnType<typeof getColorVariables>\r\n): React.CSSProperties => {\r\n  const baseStyles: React.CSSProperties = {\r\n    display: 'inline-flex',\r\n    alignItems: 'center',\r\n    margin: '2px',\r\n    maxWidth: '150px',\r\n    overflow: 'hidden',\r\n  };\r\n\r\n  // Use the component's theme color background (same as selected options)\r\n  // Text color depends on variant: solid uses foreground, outline uses main color\r\n  const textColor = variant === 'solid' \r\n    ? (colors?.foreground || cssVars.primaryForeground)\r\n    : (colors?.main || cssVars.primary);\r\n    \r\n  const variantStyles = {\r\n    backgroundColor: colors?.background || cssVars.primaryBackground,\r\n    color: textColor,\r\n  };\r\n\r\n  const sizeStyles = (() => {\r\n    switch (size) {\r\n      case 'sm':\r\n        return {\r\n          padding: '2px 6px',\r\n          fontSize: '12px',\r\n          borderRadius: rounded ? '4px' : '2px',\r\n        };\r\n      case 'lg':\r\n        return {\r\n          padding: '4px 8px',\r\n          fontSize: '14px',\r\n          borderRadius: rounded ? '8px' : '4px',\r\n        };\r\n      case 'md':\r\n      default:\r\n        return {\r\n          padding: '3px 7px',\r\n          fontSize: '13px',\r\n          borderRadius: rounded ? '6px' : '3px',\r\n        };\r\n    }\r\n  })();\r\n\r\n  return { ...baseStyles, ...variantStyles, ...sizeStyles };\r\n};\r\n\r\nexport const getFocusStyles = (\r\n  cssVars: any, \r\n  variant: DropdownVariant, \r\n  error?: boolean,\r\n  colors?: ReturnType<typeof getColorVariables>\r\n): React.CSSProperties => {\r\n  // Determine the focus outline color based on variant and error state\r\n  let outlineColor: string;\r\n\r\n  if (error) {\r\n    outlineColor = cssVars.destructive;\r\n  } else {\r\n    // Use the component's theme color for focus\r\n    outlineColor = colors?.main || cssVars.primary;\r\n  }\r\n\r\n  return {\r\n    outline: `2px solid ${outlineColor}`,\r\n    outlineOffset: '2px',\r\n    // Don't change the border color on focus - keep original variant border\r\n    boxShadow: 'none',\r\n  };\r\n};\r\n\r\n// Get isometric animation styles for Dropdown\r\nexport const getIsometricStyles = (color: any, variant: DropdownVariant, shape: DropdownShape) => {\r\n  // Ghost and glassmorphic variants don't support isometric animation\r\n  if (variant === 'ghost' || variant === 'glassmorphic') {\r\n    return {};\r\n  }\r\n  \r\n  // For outline variant, use the main color. For solid, use foreground color.\r\n  const borderColor = variant === 'outline' ? color.main : color.foreground || '#000000';\r\n  \r\n  const styles: any = {\r\n    // Use individual border properties to avoid conflict with shorthand\r\n    borderTopWidth: '1px',\r\n    borderLeftWidth: '1px', \r\n    borderRightWidth: '1px',\r\n    borderBottomWidth: '4px', // Smaller than Button/Card since Dropdown is more compact\r\n    borderTopStyle: 'solid',\r\n    borderLeftStyle: 'solid',\r\n    borderRightStyle: 'solid',\r\n    borderBottomStyle: 'solid',\r\n    borderTopColor: borderColor,\r\n    borderLeftColor: borderColor,\r\n    borderRightColor: borderColor,\r\n    borderBottomColor: borderColor,\r\n    transform: 'translateY(0)',\r\n    transition: 'all 0.4s cubic-bezier(0.34, 1.56, 0.64, 1)',\r\n    // Ensure proper box-sizing and prevent collapse\r\n    boxSizing: 'border-box',\r\n    position: 'relative',\r\n    // Adjust padding to account for larger bottom border\r\n    paddingBottom: '6px', // Reduce bottom padding to compensate for thicker border\r\n  };\r\n  \r\n  return styles;\r\n};\r\n","import React from 'react';\r\nimport { createPortal } from 'react-dom';\r\nimport type { DropdownOption, DropdownGroup } from './Dropdown.types';\r\n\r\n// Type guards\r\nexport const isGroup = (item: DropdownOption | DropdownGroup): item is DropdownGroup => {\r\n  return 'options' in item && Array.isArray(item.options);\r\n};\r\n\r\nexport const isOption = (item: DropdownOption | DropdownGroup): item is DropdownOption => {\r\n  return 'value' in item;\r\n};\r\n\r\n// Flatten groups into options for easier processing\r\nexport const flattenOptions = (items: (DropdownOption | DropdownGroup)[]): DropdownOption[] => {\r\n  const flattened: DropdownOption[] = [];\r\n  \r\n  items.forEach(item => {\r\n    if (isGroup(item)) {\r\n      flattened.push(...item.options);\r\n    } else {\r\n      flattened.push(item);\r\n    }\r\n  });\r\n  \r\n  return flattened;\r\n};\r\n\r\n// Get all non-disabled options\r\nexport const getSelectableOptions = (items: (DropdownOption | DropdownGroup)[]): DropdownOption[] => {\r\n  return flattenOptions(items).filter(option => !option.disabled);\r\n};\r\n\r\n// Default filter function for search\r\nexport const defaultFilterFunction = (option: DropdownOption, query: string): boolean => {\r\n  const searchQuery = query.toLowerCase().trim();\r\n  \r\n  if (!searchQuery) return true;\r\n  \r\n  // Search in label if it's a string\r\n  const labelText = typeof option.label === 'string' \r\n    ? option.label.toLowerCase() \r\n    : option.value.toString().toLowerCase();\r\n    \r\n  // Search in description if available\r\n  const descriptionText = option.description?.toLowerCase() || '';\r\n  \r\n  return labelText.includes(searchQuery) || descriptionText.includes(searchQuery);\r\n};\r\n\r\n// Filter options based on search query\r\nexport const filterOptions = (\r\n  items: (DropdownOption | DropdownGroup)[],\r\n  query: string,\r\n  filterFn: (option: DropdownOption, query: string) => boolean = defaultFilterFunction\r\n): (DropdownOption | DropdownGroup)[] => {\r\n  if (!query.trim()) return items;\r\n  \r\n  return items.map(item => {\r\n    if (isGroup(item)) {\r\n      const filteredOptions = item.options.filter(option => filterFn(option, query));\r\n      return filteredOptions.length > 0 ? { ...item, options: filteredOptions } : null;\r\n    } else {\r\n      return filterFn(item, query) ? item : null;\r\n    }\r\n  }).filter(Boolean) as (DropdownOption | DropdownGroup)[];\r\n};\r\n\r\n// Check if a value is selected\r\nexport const isSelected = (\r\n  optionValue: string | number,\r\n  selectedValue: string | number | (string | number)[] | undefined,\r\n  multiple: boolean\r\n): boolean => {\r\n  if (selectedValue === undefined) return false;\r\n  \r\n  if (multiple) {\r\n    return Array.isArray(selectedValue) && selectedValue.includes(optionValue);\r\n  }\r\n  \r\n  return selectedValue === optionValue;\r\n};\r\n\r\n// Get display text for selected values\r\nexport const getDisplayText = (\r\n  selectedValue: string | number | (string | number)[] | undefined,\r\n  options: (DropdownOption | DropdownGroup)[],\r\n  multiple: boolean,\r\n  placeholder: string\r\n): string => {\r\n  if (selectedValue === undefined || (Array.isArray(selectedValue) && selectedValue.length === 0)) {\r\n    return placeholder;\r\n  }\r\n  \r\n  const allOptions = flattenOptions(options);\r\n  \r\n  if (multiple && Array.isArray(selectedValue)) {\r\n    if (selectedValue.length === 1) {\r\n      const option = allOptions.find(opt => opt.value === selectedValue[0]);\r\n      return typeof option?.label === 'string' ? option.label : selectedValue[0].toString();\r\n    }\r\n    return `${selectedValue.length} selected`;\r\n  }\r\n  \r\n  const option = allOptions.find(opt => opt.value === selectedValue);\r\n  return typeof option?.label === 'string' ? option.label : selectedValue?.toString() || placeholder;\r\n};\r\n\r\n// Handle selection change\r\nexport const handleSelectionChange = (\r\n  optionValue: string | number,\r\n  currentValue: string | number | (string | number)[] | undefined,\r\n  multiple: boolean,\r\n  onChange?: (value: string | number | (string | number)[]) => void\r\n): string | number | (string | number)[] => {\r\n  if (multiple) {\r\n    const currentArray = Array.isArray(currentValue) ? currentValue : [];\r\n    const isCurrentlySelected = currentArray.includes(optionValue);\r\n    \r\n    const newValue = isCurrentlySelected\r\n      ? currentArray.filter(v => v !== optionValue)\r\n      : [...currentArray, optionValue];\r\n      \r\n    onChange?.(newValue);\r\n    return newValue;\r\n  } else {\r\n    onChange?.(optionValue);\r\n    return optionValue;\r\n  }\r\n};\r\n\r\n// Keyboard navigation helpers\r\nexport const getNextSelectableIndex = (\r\n  currentIndex: number,\r\n  options: DropdownOption[],\r\n  direction: 'up' | 'down'\r\n): number => {\r\n  const selectableOptions = options.filter(opt => !opt.disabled);\r\n  const currentSelectableIndex = selectableOptions.findIndex(\r\n    opt => opt === options[currentIndex]\r\n  );\r\n  \r\n  let nextIndex: number;\r\n  \r\n  if (direction === 'down') {\r\n    nextIndex = currentSelectableIndex < selectableOptions.length - 1 \r\n      ? currentSelectableIndex + 1 \r\n      : 0;\r\n  } else {\r\n    nextIndex = currentSelectableIndex > 0 \r\n      ? currentSelectableIndex - 1 \r\n      : selectableOptions.length - 1;\r\n  }\r\n  \r\n  const nextOption = selectableOptions[nextIndex];\r\n  return options.findIndex(opt => opt === nextOption);\r\n};\r\n\r\n// Handle keyboard events\r\nexport const handleKeyDown = (\r\n  event: React.KeyboardEvent,\r\n  isOpen: boolean,\r\n  highlightedIndex: number,\r\n  options: DropdownOption[],\r\n  onToggle: () => void,\r\n  onSelect: (index: number) => void,\r\n  onHighlight: (index: number) => void,\r\n  onClose: () => void\r\n): void => {\r\n  switch (event.key) {\r\n    case 'ArrowDown':\r\n      event.preventDefault();\r\n      if (!isOpen) {\r\n        onToggle();\r\n      } else if (options.length > 0) {\r\n        const nextIndex = getNextSelectableIndex(highlightedIndex, options, 'down');\r\n        onHighlight(nextIndex);\r\n      }\r\n      break;\r\n      \r\n    case 'ArrowUp':\r\n      event.preventDefault();\r\n      if (!isOpen) {\r\n        onToggle();\r\n      } else if (options.length > 0) {\r\n        const nextIndex = getNextSelectableIndex(highlightedIndex, options, 'up');\r\n        onHighlight(nextIndex);\r\n      }\r\n      break;\r\n      \r\n    case 'Enter':\r\n    case ' ':\r\n      event.preventDefault();\r\n      if (!isOpen) {\r\n        onToggle();\r\n      } else if (highlightedIndex >= 0 && highlightedIndex < options.length) {\r\n        onSelect(highlightedIndex);\r\n      }\r\n      break;\r\n      \r\n    case 'Escape':\r\n      event.preventDefault();\r\n      if (isOpen) {\r\n        onClose();\r\n      }\r\n      break;\r\n      \r\n    case 'Tab':\r\n      if (isOpen) {\r\n        onClose();\r\n      }\r\n      break;\r\n      \r\n    default:\r\n      break;\r\n  }\r\n};\r\n\r\n// Generate unique ID for accessibility\r\nexport const generateDropdownId = (): string => {\r\n  return `dropdown-${Math.random().toString(36).substr(2, 9)}`;\r\n};\r\n\r\n// Create accessibility props\r\nexport const createAccessibilityProps = (\r\n  id: string,\r\n  isOpen: boolean,\r\n  highlightedIndex: number,\r\n  hasError: boolean\r\n) => ({\r\n  'aria-haspopup': 'listbox' as const,\r\n  'aria-expanded': isOpen,\r\n  'aria-controls': `${id}-menu`,\r\n  'aria-activedescendant': highlightedIndex >= 0 ? `${id}-option-${highlightedIndex}` : undefined,\r\n  'aria-invalid': hasError,\r\n  role: 'combobox',\r\n});\r\n\r\n// Create menu accessibility props\r\nexport const createMenuAccessibilityProps = (id: string) => ({\r\n  id: `${id}-menu`,\r\n  role: 'listbox',\r\n  'aria-label': 'Options',\r\n});\r\n\r\n// Create option accessibility props\r\nexport const createOptionAccessibilityProps = (\r\n  id: string,\r\n  index: number,\r\n  selected: boolean,\r\n  disabled: boolean\r\n) => ({\r\n  id: `${id}-option-${index}`,\r\n  role: 'option',\r\n  'aria-selected': selected,\r\n  'aria-disabled': disabled,\r\n});\r\n\r\n// Click outside detector\r\nexport const useClickOutside = (\r\n  ref: React.RefObject<HTMLElement | null>,\r\n  handler: () => void,\r\n  enabled: boolean = true\r\n): void => {\r\n  React.useEffect(() => {\r\n    if (!enabled) return;\r\n    \r\n    const handleClickOutside = (event: MouseEvent) => {\r\n      if (ref.current && !ref.current.contains(event.target as Node)) {\r\n        handler();\r\n      }\r\n    };\r\n\r\n    document.addEventListener('mousedown', handleClickOutside);\r\n    return () => {\r\n      document.removeEventListener('mousedown', handleClickOutside);\r\n    };\r\n  }, [ref, handler, enabled]);\r\n};\r\n\r\n// Focus management\r\nexport const useFocusManagement = (\r\n  isOpen: boolean,\r\n  triggerRef: React.RefObject<HTMLElement | null>,\r\n  menuRef: React.RefObject<HTMLElement | null>\r\n) => {\r\n  const previousOpenRef = React.useRef(isOpen);\r\n  \r\n  React.useEffect(() => {\r\n    // Only manage focus if the open state actually changed (not on initial mount)\r\n    if (previousOpenRef.current !== isOpen) {\r\n      if (isOpen && triggerRef.current) {\r\n        // Keep focus on trigger when menu opens for keyboard navigation\r\n        triggerRef.current.focus();\r\n      }\r\n      // Don't auto-focus on close to prevent unwanted scrolling\r\n    }\r\n    \r\n    previousOpenRef.current = isOpen;\r\n  }, [isOpen, triggerRef, menuRef]);\r\n};\r\n\r\n// Portal helper for dropdown positioning\r\nexport const createDropdownPortal = (children: React.ReactNode, container?: Element): React.ReactPortal | React.ReactNode => {\r\n  if (typeof document === 'undefined') return children;\r\n  \r\n  const portalContainer = container || document.body;\r\n  \r\n  // Use createPortal from react-dom\r\n  return createPortal(children, portalContainer);\r\n};\r\n","'use client';\r\n\r\nimport React, { forwardRef, useState, useRef, useMemo, useCallback, useEffect } from 'react';\r\nimport { useCSSVariables, useSettings } from '../../../providers';\r\nimport { extractContainerProps, UNIVERSAL_DEFAULTS } from '../types';\r\nimport { Icon } from '../Icon';\r\nimport type { DropdownProps, DropdownOption, DropdownGroup } from './Dropdown.types';\r\nimport {\r\n  createBaseStyles,\r\n  getTriggerStyles,\r\n  getArrowStyles,\r\n  getMenuStyles,\r\n  getOptionStyles,\r\n  getSearchStyles,\r\n  getLoadingStyles,\r\n  getEmptyStyles,\r\n  getDividerStyles,\r\n  getGroupLabelStyles,\r\n  getPlaceholderStyles,\r\n  getValueDisplayStyles,\r\n  getMultiValueStyles,\r\n  getFocusStyles,\r\n  getIsometricStyles,\r\n  getColorVariables,\r\n} from './Dropdown.styles';\r\nimport {\r\n  isGroup,\r\n  isOption,\r\n  flattenOptions,\r\n  getSelectableOptions,\r\n  filterOptions,\r\n  isSelected,\r\n  getDisplayText,\r\n  handleSelectionChange,\r\n  handleKeyDown,\r\n  generateDropdownId,\r\n  createAccessibilityProps,\r\n  createMenuAccessibilityProps,\r\n  createOptionAccessibilityProps,\r\n  useClickOutside,\r\n  useFocusManagement,\r\n  createDropdownPortal,\r\n  getNextSelectableIndex,\r\n} from './Dropdown.utils';\r\nimport { ParallaxTiltWrapper } from '../Button/animations/ParallaxTiltWrapper';\r\nimport { TypewriterText } from '../Button/animations/TypewriterText';\r\n\r\nexport const Dropdown = forwardRef<HTMLDivElement, DropdownProps>((allProps, ref) => {\r\n  // Extract container props and component-specific props\r\n  const [containerProps, componentProps] = extractContainerProps(allProps) as any;\r\n  \r\n  // Destructure container props with defaults\r\n  const {\r\n    color = UNIVERSAL_DEFAULTS.color,\r\n    customColor,\r\n    variant = 'outline', // Dropdown-specific default\r\n    shape = UNIVERSAL_DEFAULTS.shape,\r\n    size = UNIVERSAL_DEFAULTS.size,\r\n    disabled = UNIVERSAL_DEFAULTS.disabled,\r\n    loading = UNIVERSAL_DEFAULTS.loading,\r\n    loadingKey,\r\n    width,\r\n    height,\r\n    className,\r\n    style,\r\n    id,\r\n    'data-testid': dataTestId,\r\n    animate = UNIVERSAL_DEFAULTS.animate,\r\n    animationMode = UNIVERSAL_DEFAULTS.animationMode,\r\n    rounded, // Legacy support\r\n  } = containerProps;\r\n  \r\n  // Destructure component-specific props\r\n  const {\r\n    position = 'bottom-start',\r\n    options = [],\r\n    multiple = false,\r\n    searchable = false,\r\n    searchPlaceholder = 'Search...',\r\n    filterFunction,\r\n    closeOnSelect = true,\r\n    maxHeight = '300px',\r\n    trigger,\r\n    portal = false,\r\n    emptyMessage = 'No options available',\r\n    noResultsMessage = 'No results found',\r\n    open: controlledOpen,\r\n    onOpenChange,\r\n    icon,\r\n    showArrow = true,\r\n    menuClassName,\r\n    menuStyle,\r\n    onClose,\r\n    onOpen,\r\n    onChange,\r\n    value,\r\n    placeholder = 'Select option...',\r\n    error,\r\n    errorText,\r\n    header,\r\n    headerAlignment = 'left',\r\n    ...restProps\r\n  } = componentProps;\r\n    // Hooks\r\n    const cssVars = useCSSVariables();\r\n    const { settings } = useSettings();\r\n    const animationsEnabled = (settings.appearance.animations ?? true) && animate;\r\n    const useAnimationMode = animationsEnabled && animationMode !== 'none';\r\n    const hasIsometricAnimation = useAnimationMode && animationMode === 'isometric' && variant !== 'ghost' && variant !== 'glassmorphic';\r\n\r\n    // State\r\n    const [internalOpen, setInternalOpen] = useState(false);\r\n    const [searchQuery, setSearchQuery] = useState('');\r\n    const [highlightedIndex, setHighlightedIndex] = useState(-1);\r\n    const [isFocused, setIsFocused] = useState(false);\r\n\r\n    // Controlled vs uncontrolled open state\r\n    const isOpen = controlledOpen !== undefined ? controlledOpen : internalOpen;\r\n    const setIsOpen = useCallback((open: boolean) => {\r\n      if (controlledOpen === undefined) {\r\n        setInternalOpen(open);\r\n      }\r\n      onOpenChange?.(open);\r\n    }, [controlledOpen, onOpenChange]);\r\n\r\n    // Refs\r\n    const containerRef = useRef<HTMLDivElement>(null);\r\n    const triggerRef = useRef<HTMLButtonElement>(null);\r\n    const menuRef = useRef<HTMLDivElement>(null);\r\n    const searchRef = useRef<HTMLInputElement>(null);\r\n\r\n    // Generate unique ID\r\n    const dropdownId = useMemo(() => generateDropdownId(), []);\r\n\r\n    // Process options\r\n    const filteredOptions = useMemo(() => {\r\n      if (!searchable || !searchQuery) return options;\r\n      return filterOptions(options, searchQuery, filterFunction);\r\n    }, [options, searchQuery, searchable, filterFunction]);\r\n\r\n    const flatOptions = useMemo(() => flattenOptions(filteredOptions), [filteredOptions]);\r\n    const selectableOptions = useMemo(() => getSelectableOptions(filteredOptions), [filteredOptions]);\r\n\r\n    // Display text\r\n    const displayText = useMemo(() => \r\n      getDisplayText(value, options, multiple, placeholder),\r\n      [value, options, multiple, placeholder]\r\n    );\r\n\r\n    // Helper function to render text with optional typewriter animation\r\n    const renderAnimatedText = (text: React.ReactNode, isTypewriter: boolean) => {\r\n      if (!isTypewriter || typeof text !== 'string') {\r\n        return text;\r\n      }\r\n      return (\r\n        <TypewriterText\r\n          text={text}\r\n          speed={100}\r\n          deleteSpeed={50}\r\n          showCursor={true}\r\n          disabled={Boolean(disabled)}\r\n        />\r\n      );\r\n    };\r\n\r\n    // Event handlers\r\n    const handleToggle = useCallback(() => {\r\n      if (disabled) return;\r\n      \r\n      const newOpen = !isOpen;\r\n      if (newOpen) {\r\n        onOpen?.();\r\n        // Set initial highlighted index to first selectable option\r\n        const selectableOptions = getSelectableOptions(filteredOptions);\r\n        const firstSelectableIndex = selectableOptions.length > 0 ? 0 : -1;\r\n        setHighlightedIndex(firstSelectableIndex);\r\n      } else {\r\n        onClose?.();\r\n      }\r\n      setIsOpen(newOpen);\r\n      \r\n      if (!newOpen) {\r\n        setSearchQuery('');\r\n        setHighlightedIndex(-1);\r\n      }\r\n    }, [disabled, isOpen, setIsOpen, onOpen, onClose, filteredOptions]);\r\n\r\n    const handleClose = useCallback(() => {\r\n      setIsOpen(false);\r\n      setSearchQuery('');\r\n      setHighlightedIndex(-1);\r\n      onClose?.();\r\n    }, [setIsOpen, onClose]);\r\n\r\n    const handleOptionSelect = useCallback((option: DropdownOption) => {\r\n      if (option.disabled) return;\r\n      \r\n      const newValue = handleSelectionChange(option.value, value, multiple, onChange);\r\n      \r\n      if (!multiple && closeOnSelect) {\r\n        handleClose();\r\n      }\r\n      \r\n      return newValue;\r\n    }, [value, multiple, onChange, closeOnSelect, handleClose]);\r\n\r\n    const handleOptionClick = useCallback((option: DropdownOption) => {\r\n      handleOptionSelect(option);\r\n    }, [handleOptionSelect]);\r\n\r\n    const handleSearchChange = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\r\n      setSearchQuery(e.target.value);\r\n      setHighlightedIndex(-1);\r\n    }, []);\r\n\r\n    const handleKeyDownInternal = useCallback((e: React.KeyboardEvent) => {\r\n      handleKeyDown(\r\n        e,\r\n        isOpen,\r\n        highlightedIndex,\r\n        selectableOptions,\r\n        handleToggle,\r\n        (index) => {\r\n          const option = selectableOptions[index];\r\n          if (option) handleOptionSelect(option);\r\n        },\r\n        setHighlightedIndex,\r\n        handleClose\r\n      );\r\n    }, [isOpen, highlightedIndex, selectableOptions, handleToggle, handleOptionSelect, handleClose]);\r\n\r\n    // Click outside to close\r\n    useClickOutside(containerRef, handleClose, isOpen);\r\n\r\n    // Focus management\r\n    useFocusManagement(isOpen, triggerRef, menuRef);\r\n\r\n    // Reset highlighted index when options change\r\n    useEffect(() => {\r\n      setHighlightedIndex(-1);\r\n    }, [filteredOptions]);\r\n\r\n    // Styles\r\n    const baseStyles = useMemo(() => \r\n      createBaseStyles(size, shape, animationsEnabled, width, rounded),\r\n      [size, shape, animationsEnabled, width, rounded]\r\n    );\r\n\r\n    const colorVariables = useMemo(() => \r\n      getColorVariables(color, customColor, cssVars),\r\n      [color, customColor, cssVars]\r\n    );\r\n\r\n    const triggerStyles = useMemo(() => {\r\n      const baseStyles = getTriggerStyles(color, variant, size, shape, Boolean(disabled), Boolean(error), isOpen, customColor, cssVars, animationsEnabled, rounded);\r\n      const shouldShowFocus = (isFocused || isOpen) && !disabled;\r\n      const focusStyles = shouldShowFocus ? getFocusStyles(cssVars, variant, Boolean(error), colorVariables) : {};\r\n      const isometricStyles = hasIsometricAnimation ? getIsometricStyles(colorVariables, variant, shape) : {};\r\n      return { ...baseStyles, ...focusStyles, ...isometricStyles };\r\n    }, [color, customColor, variant, size, disabled, error, isOpen, shape, rounded, cssVars, animationsEnabled, isFocused, hasIsometricAnimation, colorVariables]);\r\n\r\n    const arrowStyles = useMemo(() => \r\n      getArrowStyles(size, isOpen, animationsEnabled, cssVars, variant, colorVariables),\r\n      [size, isOpen, animationsEnabled, cssVars, variant, colorVariables]\r\n    );\r\n\r\n    const menuStyles = useMemo(() => \r\n      getMenuStyles(position, maxHeight, Boolean(rounded) || (shape === 'round'), cssVars, animationsEnabled),\r\n      [position, maxHeight, shape, rounded, cssVars, animationsEnabled]\r\n    );\r\n\r\n    const searchStyles = useMemo(() => \r\n      getSearchStyles(size, Boolean(rounded) || (shape === 'round'), cssVars, variant),\r\n      [size, shape, rounded, cssVars, variant]\r\n    );\r\n\r\n    const combinedStyles: React.CSSProperties = {\r\n      ...baseStyles,\r\n      ...style,\r\n    };\r\n\r\n    const combinedMenuStyles: React.CSSProperties = {\r\n      ...menuStyles,\r\n      ...menuStyle,\r\n    };\r\n\r\n    // Accessibility props\r\n    const accessibilityProps = createAccessibilityProps(dropdownId, isOpen, highlightedIndex, Boolean(error));\r\n    const menuAccessibilityProps = createMenuAccessibilityProps(dropdownId);\r\n\r\n    // Isometric hover handlers\r\n    const handleMouseEnter = useCallback((e: React.MouseEvent<HTMLButtonElement>) => {\r\n      if (!disabled && animationsEnabled && hasIsometricAnimation && variant !== 'ghost' && variant !== 'glassmorphic') {\r\n        // Small bouncy press animation - button moves down, border reduces\r\n        e.currentTarget.style.transform = 'translateY(3px)';\r\n        e.currentTarget.style.borderBottomWidth = '3px';\r\n        // Ensure the border color is maintained\r\n        const borderColor = variant === 'outline' ? colorVariables.main : colorVariables.foreground;\r\n        if (borderColor) {\r\n          e.currentTarget.style.borderBottomColor = borderColor;\r\n          // For solid variant, also update all other border colors to match\r\n          if (variant === 'solid') {\r\n            e.currentTarget.style.borderTopColor = borderColor;\r\n            e.currentTarget.style.borderRightColor = borderColor;\r\n            e.currentTarget.style.borderLeftColor = borderColor;\r\n          }\r\n        }\r\n      }\r\n    }, [disabled, animationsEnabled, hasIsometricAnimation, variant, colorVariables]);\r\n\r\n    const handleMouseLeave = useCallback((e: React.MouseEvent<HTMLButtonElement>) => {\r\n      if (!disabled && hasIsometricAnimation && variant !== 'ghost' && variant !== 'glassmorphic') {\r\n        // Return to rest position\r\n        e.currentTarget.style.transform = 'translateY(0)';\r\n        e.currentTarget.style.borderBottomWidth = '6px';\r\n        // Ensure the border color is maintained\r\n        const borderColor = variant === 'outline' ? colorVariables.main : colorVariables.foreground;\r\n        if (borderColor) {\r\n          e.currentTarget.style.borderBottomColor = borderColor;\r\n          // For solid variant, also update all other border colors to match\r\n          if (variant === 'solid') {\r\n            e.currentTarget.style.borderTopColor = borderColor;\r\n            e.currentTarget.style.borderRightColor = borderColor;\r\n            e.currentTarget.style.borderLeftColor = borderColor;\r\n          }\r\n        }\r\n      }\r\n    }, [disabled, hasIsometricAnimation, variant, colorVariables]);\r\n\r\n    // Render trigger\r\n    const renderTrigger = () => {\r\n      if (trigger) {\r\n        const customTrigger = React.cloneElement(trigger as React.ReactElement, {\r\n          onClick: handleToggle,\r\n          onKeyDown: handleKeyDownInternal,\r\n          onFocus: () => setIsFocused(true),\r\n          onBlur: () => setIsFocused(false),\r\n          ...accessibilityProps,\r\n        } as any);\r\n\r\n        // Wrap custom trigger with parallax if needed\r\n        if (useAnimationMode && animationMode === 'parallax') {\r\n          return (\r\n            <ParallaxTiltWrapper disabled={disabled || !useAnimationMode}>\r\n              {customTrigger}\r\n            </ParallaxTiltWrapper>\r\n          );\r\n        }\r\n        return customTrigger;\r\n      }\r\n\r\n      const triggerButton = (\r\n        <button\r\n          ref={triggerRef}\r\n          type=\"button\"\r\n          style={triggerStyles}\r\n          onClick={handleToggle}\r\n          onKeyDown={handleKeyDownInternal}\r\n          onFocus={() => setIsFocused(true)}\r\n          onBlur={() => setIsFocused(false)}\r\n          onMouseEnter={handleMouseEnter}\r\n          onMouseLeave={handleMouseLeave}\r\n          disabled={disabled}\r\n          {...accessibilityProps}\r\n        >\r\n          <div style={getValueDisplayStyles()}>\r\n            {icon && <span style={{ marginRight: '8px' }}>{icon}</span>}\r\n            {multiple && Array.isArray(value) && value.length > 0 ? (\r\n              <div style={{ display: 'flex', flexWrap: 'wrap', gap: '2px' }}>\r\n                {value.slice(0, 3).map((val) => {\r\n                  const option = flatOptions.find(opt => opt.value === val);\r\n                  const label = typeof option?.label === 'string' ? option.label : val.toString();\r\n                  return (\r\n                    <span key={val} style={getMultiValueStyles(size, Boolean(rounded) || (shape === 'round'), cssVars, variant, colorVariables)}>\r\n                      {label}\r\n                    </span>\r\n                  );\r\n                })}\r\n                {value.length > 3 && (\r\n                  <span style={getMultiValueStyles(size, Boolean(rounded) || (shape === 'round'), cssVars, variant, colorVariables)}>\r\n                    +{value.length - 3}\r\n                  </span>\r\n                )}\r\n              </div>\r\n            ) : (\r\n              <span style={value ? {} : getPlaceholderStyles(cssVars, variant, colorVariables)}>\r\n                {renderAnimatedText(displayText, useAnimationMode && animationMode === 'typewriter')}\r\n              </span>\r\n            )}\r\n          </div>\r\n          {showArrow && (\r\n            <div style={arrowStyles}>\r\n              <Icon name=\"NavArrowDown\" size={size === 'lg' ? 'md' : 'sm'} />\r\n            </div>\r\n          )}\r\n        </button>\r\n      );\r\n\r\n      // Wrap trigger button with parallax if needed\r\n      if (useAnimationMode && animationMode === 'parallax') {\r\n        return (\r\n          <ParallaxTiltWrapper disabled={disabled || !useAnimationMode}>\r\n            {triggerButton}\r\n          </ParallaxTiltWrapper>\r\n        );\r\n      }\r\n\r\n      return triggerButton;\r\n    };\r\n\r\n    // Render option\r\n    const renderOption = (option: DropdownOption, index: number, globalIndex: number) => {\r\n      const selected = isSelected(option.value, value, multiple);\r\n      const highlighted = globalIndex === highlightedIndex;\r\n      const optionStyles = getOptionStyles(size, selected, !!option.disabled, highlighted, cssVars, animationsEnabled, variant, colorVariables);\r\n      const optionAccessibilityProps = createOptionAccessibilityProps(dropdownId, globalIndex, selected, !!option.disabled);\r\n\r\n      return (\r\n        <React.Fragment key={option.value}>\r\n          {option.divider && <div style={getDividerStyles(cssVars)} />}\r\n          <button\r\n            type=\"button\"\r\n            style={optionStyles}\r\n            onClick={() => !option.disabled && handleOptionClick(option)}\r\n            onMouseEnter={() => setHighlightedIndex(globalIndex)}\r\n            disabled={option.disabled}\r\n            {...optionAccessibilityProps}\r\n          >\r\n            {option.icon && <span style={{ marginRight: '8px' }}>{option.icon}</span>}\r\n            <div style={{ flex: 1, textAlign: 'left' }}>\r\n              <div>{option.label}</div>\r\n              {option.description && (\r\n                <div style={{ \r\n                  fontSize: '0.875em', \r\n                  opacity: 0.7, \r\n                  marginTop: '2px' \r\n                }}>\r\n                  {option.description}\r\n                </div>\r\n              )}\r\n            </div>\r\n            {selected && multiple && (\r\n              <span style={{ marginLeft: '8px' }}>\r\n                <Icon name=\"Check\" size=\"sm\" />\r\n              </span>\r\n            )}\r\n          </button>\r\n        </React.Fragment>\r\n      );\r\n    };\r\n\r\n    // Render menu content\r\n    const renderMenuContent = () => {\r\n      if (loading) {\r\n        return (\r\n          <div style={getLoadingStyles(size, cssVars)}>\r\n            Loading...\r\n          </div>\r\n        );\r\n      }\r\n\r\n      if (filteredOptions.length === 0) {\r\n        return (\r\n          <div style={getEmptyStyles(size, cssVars)}>\r\n            {searchQuery ? noResultsMessage : emptyMessage}\r\n          </div>\r\n        );\r\n      }\r\n\r\n      let globalIndex = 0;\r\n\r\n      return filteredOptions.map((item: any, groupIndex: number) => {\r\n        if (isGroup(item)) {\r\n          return (\r\n            <div key={`group-${groupIndex}`}>\r\n              {item.label && (\r\n                <div style={getGroupLabelStyles(size, cssVars)}>\r\n                  {item.label}\r\n                </div>\r\n              )}\r\n              {item.options.map((option, optionIndex) => {\r\n                const currentGlobalIndex = globalIndex++;\r\n                return renderOption(option, optionIndex, currentGlobalIndex);\r\n              })}\r\n            </div>\r\n          );\r\n        } else {\r\n          const currentGlobalIndex = globalIndex++;\r\n          return renderOption(item, groupIndex, currentGlobalIndex);\r\n        }\r\n      });\r\n    };\r\n\r\n    // Render menu\r\n    const renderMenu = () => {\r\n      if (!isOpen) return null;\r\n\r\n      const menuContent = (\r\n        <div\r\n          ref={menuRef}\r\n          style={combinedMenuStyles}\r\n          className={menuClassName}\r\n          {...menuAccessibilityProps}\r\n        >\r\n          {searchable && (\r\n            <div style={{\r\n              padding: '8px',\r\n              borderBottom: `1px solid ${cssVars.border}`,\r\n              position: 'relative',\r\n              display: 'flex',\r\n              alignItems: 'center'\r\n            }}>\r\n              <Icon\r\n                name=\"Search\"\r\n                size=\"sm\"\r\n                style={{\r\n                  position: 'absolute',\r\n                  left: '16px',\r\n                  zIndex: 1,\r\n                  color: cssVars.foregroundAccent || cssVars.foreground,\r\n                  pointerEvents: 'none'\r\n                }}\r\n              />\r\n              <input\r\n                ref={searchRef}\r\n                type=\"text\"\r\n                placeholder={searchPlaceholder}\r\n                value={searchQuery}\r\n                onChange={handleSearchChange}\r\n                style={{\r\n                  ...searchStyles,\r\n                  paddingLeft: '36px' // Add space for the icon\r\n                }}\r\n                autoComplete=\"off\"\r\n              />\r\n            </div>\r\n          )}\r\n          <div\r\n            className=\"dropdown-scrollable-content\"\r\n            style={{\r\n              maxHeight,\r\n              overflowY: 'auto',\r\n              // Hide scrollbar for IE and Edge\r\n              msOverflowStyle: 'none',\r\n              // Hide scrollbar for Firefox\r\n              scrollbarWidth: 'none'\r\n            }}>\r\n            {renderMenuContent()}\r\n          </div>\r\n        </div>\r\n      );\r\n\r\n      return portal ? createDropdownPortal(menuContent) : menuContent;\r\n    };\r\n\r\n    // Render header function (copied from Card component pattern)\r\n    const renderHeader = () => {\r\n      // Show error text in header when in error state, similar to card component\r\n      // Priority: if error state and errorText exists, show errorText; otherwise show header\r\n      let headerText: React.ReactNode = null;\r\n      let isErrorText = false;\r\n\r\n      if (error && errorText && errorText.toString().trim()) {\r\n        // Error state takes priority - show error text\r\n        headerText = errorText;\r\n        isErrorText = true;\r\n      } else if (header && header.toString().trim()) {\r\n        // Normal state - show regular header (only if not empty string)\r\n        headerText = header;\r\n        isErrorText = false;\r\n      }\r\n\r\n      // Always render header section if we have error text, even if no regular header\r\n      if (!headerText || headerText.toString().trim() === '') return null;\r\n\r\n      // Use destructive color for error text, otherwise use component theme color\r\n      const headerColor = isErrorText ? cssVars.destructive : (colorVariables.main || cssVars.primary);\r\n\r\n      return (\r\n        <div\r\n          style={{\r\n            textAlign: headerAlignment,\r\n            color: headerColor,\r\n            fontWeight: '500',\r\n            fontSize: '14px',\r\n            fontFamily: 'inherit',\r\n            wordWrap: 'break-word',\r\n            overflowWrap: 'break-word',\r\n            marginBottom: '0px', // Remove margin since positioning is absolute\r\n            // Constrain the header to not be wider than the dropdown\r\n            display: 'block',\r\n            overflow: 'hidden', // Hide any overflow\r\n            boxSizing: 'border-box',\r\n          }}\r\n        >\r\n          {renderAnimatedText(headerText, useAnimationMode && animationMode === 'typewriter')}\r\n        </div>\r\n      );\r\n    };\r\n\r\n    // Create the dropdown element\r\n    const dropdownElement = (\r\n      <div\r\n        ref={ref || containerRef}\r\n        style={combinedStyles}\r\n        id={id}\r\n        className={className}\r\n        data-testid={dataTestId}\r\n        {...restProps}\r\n      >\r\n        {renderTrigger()}\r\n        {renderMenu()}\r\n      </div>\r\n    );\r\n\r\n    // Create the complete component with header\r\n    // Include header wrapper if there's a header OR if there's error text to display\r\n    const shouldIncludeHeader = header || (error && errorText);\r\n    const completeElement = shouldIncludeHeader ? (\r\n      <div style={{\r\n        position: 'relative',\r\n        display: 'inline-block',\r\n      }}>\r\n        <div style={{\r\n          // Position header absolutely to avoid affecting container size\r\n          position: 'absolute',\r\n          top: 0,\r\n          left: 0,\r\n          right: 0,\r\n          transform: 'translateY(calc(-100% - 8px))', // Move up by full height + spacing\r\n        }}>\r\n          {renderHeader()}\r\n        </div>\r\n        {dropdownElement}\r\n      </div>\r\n    ) : dropdownElement;\r\n\r\n    return completeElement;\r\n  }\r\n);\r\n\r\nDropdown.displayName = 'Dropdown';","import React from 'react';\r\nimport type { NotificationColor, NotificationVariant, NotificationSize, NotificationShape } from './Notification.types';\r\n\r\n// Get color variables based on color prop\r\nexport const getColorVariables = (color: NotificationColor, customColor: string | undefined, cssVars: any) => {\r\n  if (color === 'custom' && customColor) {\r\n    return {\r\n      main: customColor,\r\n      foreground: '#ffffff',\r\n      background: customColor + '10',\r\n      border: customColor,\r\n      hover: customColor + '20',\r\n    };\r\n  }\r\n\r\n  const colorMap: Record<string, any> = {\r\n    primary: {\r\n      main: cssVars.primary,\r\n      background: cssVars.primaryBackground,\r\n      foreground: cssVars.primaryForeground,\r\n      hover: cssVars.primaryHover,\r\n      border: cssVars.primaryBorder,\r\n    },\r\n    secondary: {\r\n      main: cssVars.secondary,\r\n      background: cssVars.secondaryBackground,\r\n      foreground: cssVars.secondaryForeground,\r\n      hover: cssVars.secondaryHover,\r\n      border: cssVars.secondaryBorder,\r\n    },\r\n    success: {\r\n      main: cssVars.success,\r\n      background: cssVars.successBackground,\r\n      foreground: cssVars.successForeground,\r\n      hover: cssVars.successHover,\r\n      border: cssVars.successBorder,\r\n    },\r\n    warning: {\r\n      main: cssVars.warning,\r\n      background: cssVars.warningBackground,\r\n      foreground: cssVars.warningForeground,\r\n      hover: cssVars.warningHover,\r\n      border: cssVars.warningBorder,\r\n    },\r\n    destructive: {\r\n      main: cssVars.destructive,\r\n      background: cssVars.destructiveBackground,\r\n      foreground: cssVars.destructiveForeground,\r\n      hover: cssVars.destructiveHover,\r\n      border: cssVars.destructiveBorder,\r\n    },\r\n    info: {\r\n      main: cssVars.info,\r\n      background: cssVars.infoBackground,\r\n      foreground: cssVars.infoForeground,\r\n      hover: cssVars.infoHover,\r\n      border: cssVars.infoBorder,\r\n    },\r\n  };\r\n\r\n  return colorMap[color] || colorMap.primary;\r\n};\r\n\r\n// Get shape styles based on shape prop\r\nexport const getShapeStyles = (shape: NotificationShape): React.CSSProperties => {\r\n  switch (shape) {\r\n    case 'sharp':\r\n      return { borderRadius: '0' };\r\n    case 'round':\r\n      return { borderRadius: '12px' };\r\n    case 'pill':\r\n      return { borderRadius: '24px' };\r\n    default:\r\n      return { borderRadius: '12px' };\r\n  }\r\n};\r\n\r\n// Get size configuration\r\nexport const getSizeConfig = (size: NotificationSize) => {\r\n  const configs = {\r\n    xs: {\r\n      padding: '8px 12px',\r\n      fontSize: '11px',\r\n      lineHeight: 1.4,\r\n      iconSize: '14px',\r\n      titleSize: '12px',\r\n      descriptionSize: '10px',\r\n      buttonPadding: '2px 6px',\r\n      buttonFontSize: '10px',\r\n      dismissButtonSize: '18px',\r\n      dismissIconSize: '12px',\r\n    },\r\n    sm: {\r\n      padding: '12px 16px',\r\n      fontSize: '12px',\r\n      lineHeight: 1.4,\r\n      iconSize: '16px',\r\n      titleSize: '14px',\r\n      descriptionSize: '11px',\r\n      buttonPadding: '4px 8px',\r\n      buttonFontSize: '11px',\r\n      dismissButtonSize: '20px',\r\n      dismissIconSize: '14px',\r\n    },\r\n    md: {\r\n      padding: '16px 20px',\r\n      fontSize: '14px',\r\n      lineHeight: 1.5,\r\n      iconSize: '20px',\r\n      titleSize: '16px',\r\n      descriptionSize: '13px',\r\n      buttonPadding: '6px 12px',\r\n      buttonFontSize: '12px',\r\n      dismissButtonSize: '24px',\r\n      dismissIconSize: '16px',\r\n    },\r\n    lg: {\r\n      padding: '20px 24px',\r\n      fontSize: '16px',\r\n      lineHeight: 1.5,\r\n      iconSize: '24px',\r\n      titleSize: '18px',\r\n      descriptionSize: '14px',\r\n      buttonPadding: '8px 16px',\r\n      buttonFontSize: '13px',\r\n      dismissButtonSize: '28px',\r\n      dismissIconSize: '18px',\r\n    },\r\n    xl: {\r\n      padding: '24px 28px',\r\n      fontSize: '18px',\r\n      lineHeight: 1.6,\r\n      iconSize: '28px',\r\n      titleSize: '20px',\r\n      descriptionSize: '16px',\r\n      buttonPadding: '10px 20px',\r\n      buttonFontSize: '14px',\r\n      dismissButtonSize: '32px',\r\n      dismissIconSize: '20px',\r\n    },\r\n  };\r\n\r\n  return configs[size];\r\n};\r\n\r\n// Container styles\r\nexport const createNotificationContainerStyles = (\r\n  size: NotificationSize,\r\n  rounded: boolean,\r\n  animationsEnabled: boolean\r\n): React.CSSProperties => {\r\n  // Handle legacy rounded prop\r\n  const finalShape = rounded ? 'pill' : 'round';\r\n  \r\n  return {\r\n    position: 'relative',\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    width: 'auto',\r\n    height: 'auto',\r\n    minWidth: '300px',\r\n    maxWidth: '500px',\r\n    boxShadow: '0 4px 6px -1px rgba(0, 0, 0, 0.1), 0 2px 4px -1px rgba(0, 0, 0, 0.06)',\r\n    transition: animationsEnabled \r\n      ? 'all var(--duration-fast) var(--animation-smooth)'\r\n      : 'none',\r\n    ...getShapeStyles(finalShape),\r\n  };\r\n};\r\n\r\n// Main notification styles\r\nexport const getNotificationStyles = (\r\n  color: NotificationColor,\r\n  customColor: string | undefined,\r\n  variant: NotificationVariant,\r\n  size: NotificationSize,\r\n  disabled: boolean,\r\n  cssVars: any\r\n): React.CSSProperties => {\r\n  const colors = getColorVariables(color, customColor, cssVars);\r\n  const sizeConfig = getSizeConfig(size);\r\n\r\n  const baseStyles: React.CSSProperties = {\r\n    display: 'flex',\r\n    alignItems: 'flex-start',\r\n    gap: '12px',\r\n    width: '100%',\r\n    padding: sizeConfig.padding,\r\n    borderTopWidth: '1px',\r\n    borderRightWidth: '1px',\r\n    borderBottomWidth: '1px',\r\n    borderLeftWidth: '1px',\r\n    borderStyle: 'solid',\r\n    fontSize: sizeConfig.fontSize,\r\n    lineHeight: sizeConfig.lineHeight,\r\n    transition: 'background-color var(--duration-fast) var(--animation-smooth), border-color var(--duration-fast) var(--animation-smooth)',\r\n    position: 'relative',\r\n  };\r\n\r\n  // Variant styles\r\n  const variantStyles = (() => {\r\n    switch (variant) {\r\n      case 'solid':\r\n        return {\r\n          backgroundColor: colors.main,\r\n          borderTopColor: colors.main,\r\n          borderRightColor: colors.main,\r\n          borderBottomColor: colors.main,\r\n          borderLeftColor: colors.main,\r\n          color: colors.foreground,\r\n        };\r\n      case 'ghost':\r\n        return {\r\n          backgroundColor: 'transparent',\r\n          borderTopColor: 'transparent',\r\n          borderRightColor: 'transparent',\r\n          borderBottomColor: 'transparent',\r\n          borderLeftColor: colors.main,\r\n          borderLeftWidth: '4px',\r\n          color: colors.main,\r\n        };\r\n      case 'glassmorphic':\r\n        return {\r\n          backgroundColor: colors.background,\r\n          borderTopColor: colors.border || cssVars.border,\r\n          borderRightColor: colors.border || cssVars.border,\r\n          borderBottomColor: colors.border || cssVars.border,\r\n          borderLeftColor: colors.main,\r\n          borderLeftWidth: '4px',\r\n          color: colors.main,\r\n          backdropFilter: 'blur(12px)',\r\n        };\r\n      case 'outline':\r\n      default:\r\n        return {\r\n          backgroundColor: cssVars.background,\r\n          borderTopColor: colors.border || cssVars.border,\r\n          borderRightColor: colors.border || cssVars.border,\r\n          borderBottomColor: colors.border || cssVars.border,\r\n          borderLeftColor: colors.main,\r\n          borderLeftWidth: '4px',\r\n          color: cssVars.foreground,\r\n        };\r\n    }\r\n  })();\r\n\r\n  // Note: Disabled styles are handled in the main component to properly combine with loading state\r\n\r\n  return {\r\n    ...baseStyles,\r\n    ...variantStyles,\r\n  };\r\n};\r\n\r\n// Icon styles\r\nexport const getIconStyles = (\r\n  size: NotificationSize,\r\n  color: NotificationColor,\r\n  cssVars: any\r\n): React.CSSProperties => {\r\n  const sizeConfig = getSizeConfig(size);\r\n  \r\n  return {\r\n    fontSize: sizeConfig.iconSize,\r\n    flexShrink: 0,\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    marginTop: '2px',\r\n    color: 'currentColor',\r\n  };\r\n};\r\n\r\n// Content area styles\r\nexport const getContentStyles = (): React.CSSProperties => ({\r\n  flex: 1,\r\n  minWidth: 0,\r\n  display: 'flex',\r\n  flexDirection: 'column',\r\n});\r\n\r\n// Title styles\r\nexport const getTitleStyles = (\r\n  size: NotificationSize,\r\n  cssVars: any\r\n): React.CSSProperties => {\r\n  const sizeConfig = getSizeConfig(size);\r\n  \r\n  return {\r\n    fontSize: sizeConfig.titleSize,\r\n    fontWeight: 600,\r\n    margin: 0,\r\n    color: 'inherit',\r\n    lineHeight: 1.4,\r\n  };\r\n};\r\n\r\n// Description styles\r\nexport const getDescriptionStyles = (\r\n  size: NotificationSize,\r\n  cssVars: any\r\n): React.CSSProperties => {\r\n  const sizeConfig = getSizeConfig(size);\r\n  \r\n  return {\r\n    fontSize: sizeConfig.descriptionSize,\r\n    margin: '4px 0 0 0',\r\n    opacity: 0.8,\r\n    color: 'inherit',\r\n    lineHeight: 1.4,\r\n  };\r\n};\r\n\r\n// Actions container styles\r\nexport const getActionsStyles = (size: NotificationSize): React.CSSProperties => {\r\n  return {\r\n    display: 'flex',\r\n    gap: '8px',\r\n    alignItems: 'center',\r\n    flexWrap: 'wrap',\r\n    marginTop: '12px',\r\n  };\r\n};\r\n\r\n// Action button styles\r\nexport const getActionButtonStyles = (\r\n  variant: NotificationVariant,\r\n  size: NotificationSize,\r\n  cssVars: any,\r\n  animationsEnabled: boolean,\r\n  notificationVariant?: NotificationVariant,\r\n  notificationColor?: string\r\n): React.CSSProperties => {\r\n  const sizeConfig = getSizeConfig(size);\r\n\r\n  // Get colors based on notification color scheme\r\n  const getNotificationColors = (color: string) => {\r\n    const colorMap: Record<string, any> = {\r\n      primary: {\r\n        main: cssVars.primary,\r\n        background: cssVars.primaryBackground,\r\n        foreground: cssVars.primaryForeground,\r\n        hover: cssVars.primaryHover,\r\n        accent: cssVars.primaryAccent,\r\n        border: cssVars.primaryBorder,\r\n      },\r\n      secondary: {\r\n        main: cssVars.secondary,\r\n        background: cssVars.secondaryBackground,\r\n        foreground: cssVars.secondaryForeground,\r\n        hover: cssVars.secondaryHover,\r\n        accent: cssVars.secondaryAccent,\r\n        border: cssVars.secondaryBorder,\r\n      },\r\n      success: {\r\n        main: cssVars.success,\r\n        background: cssVars.successBackground,\r\n        foreground: cssVars.successForeground,\r\n        hover: cssVars.successHover,\r\n        accent: cssVars.successAccent,\r\n        border: cssVars.successBorder,\r\n      },\r\n      warning: {\r\n        main: cssVars.warning,\r\n        background: cssVars.warningBackground,\r\n        foreground: cssVars.warningForeground,\r\n        hover: cssVars.warningHover,\r\n        accent: cssVars.warningAccent,\r\n        border: cssVars.warningBorder,\r\n      },\r\n      destructive: {\r\n        main: cssVars.destructive,\r\n        background: cssVars.destructiveBackground,\r\n        foreground: cssVars.destructiveForeground,\r\n        hover: cssVars.destructiveHover,\r\n        accent: cssVars.destructiveAccent,\r\n        border: cssVars.destructiveBorder,\r\n      },\r\n      info: {\r\n        main: cssVars.info,\r\n        background: cssVars.infoBackground,\r\n        foreground: cssVars.infoForeground,\r\n        hover: cssVars.infoHover,\r\n        accent: cssVars.infoAccent,\r\n        border: cssVars.infoBorder,\r\n      },\r\n    };\r\n    return colorMap[color] || colorMap.primary;\r\n  };\r\n\r\n  const colors = getNotificationColors(notificationColor || 'primary');\r\n\r\n  const baseStyles: React.CSSProperties = {\r\n    display: 'inline-flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    padding: sizeConfig.buttonPadding,\r\n    fontSize: sizeConfig.buttonFontSize,\r\n    fontWeight: 500,\r\n    borderTopWidth: '1px',\r\n    borderRightWidth: '1px',\r\n    borderBottomWidth: '1px',\r\n    borderLeftWidth: '1px',\r\n    borderStyle: 'solid',\r\n    borderRadius: '8px',\r\n    cursor: 'pointer',\r\n    textDecoration: 'none',\r\n    transition: animationsEnabled\r\n      ? 'all var(--duration-fast) var(--animation-smooth)'\r\n      : 'none',\r\n  };\r\n\r\n  const variantStyles = (() => {\r\n    // Special styling for action buttons in solid notifications for better visibility\r\n    const isInSolidNotification = notificationVariant === 'solid';\r\n\r\n    switch (variant) {\r\n      case 'solid':\r\n        if (isInSolidNotification) {\r\n          // In solid notifications, use notification text color as background\r\n          return {\r\n            backgroundColor: colors.foreground,\r\n            borderTopColor: colors.foreground,\r\n            borderRightColor: colors.foreground,\r\n            borderBottomColor: colors.foreground,\r\n            borderLeftColor: colors.foreground,\r\n            color: colors.main,\r\n          };\r\n        } else {\r\n          // Normal solid styling for other notification variants\r\n          return {\r\n            backgroundColor: colors.main,\r\n            borderTopColor: colors.main,\r\n            borderRightColor: colors.main,\r\n            borderBottomColor: colors.main,\r\n            borderLeftColor: colors.main,\r\n            color: colors.foreground,\r\n          };\r\n        }\r\n      case 'ghost':\r\n        return {\r\n          backgroundColor: 'transparent',\r\n          borderTopColor: 'transparent',\r\n          borderRightColor: 'transparent',\r\n          borderBottomColor: 'transparent',\r\n          borderLeftColor: 'transparent',\r\n          color: isInSolidNotification ? colors.foreground : colors.main,\r\n        };\r\n      case 'outline':\r\n      default:\r\n        if (isInSolidNotification) {\r\n          // In solid notifications, use notification text color for outline\r\n          return {\r\n            backgroundColor: 'transparent',\r\n            borderTopColor: colors.foreground,\r\n            borderRightColor: colors.foreground,\r\n            borderBottomColor: colors.foreground,\r\n            borderLeftColor: colors.foreground,\r\n            color: colors.foreground,\r\n          };\r\n        } else {\r\n          // Normal outline styling for other notification variants\r\n          return {\r\n            backgroundColor: 'transparent',\r\n            borderTopColor: colors.main,\r\n            borderRightColor: colors.main,\r\n            borderBottomColor: colors.main,\r\n            borderLeftColor: colors.main,\r\n            color: colors.main,\r\n          };\r\n        }\r\n    }\r\n  })();\r\n\r\n  return {\r\n    ...baseStyles,\r\n    ...variantStyles,\r\n  };\r\n};\r\n\r\n// Dismiss button styles\r\nexport const getDismissButtonStyles = (\r\n  size: NotificationSize,\r\n  cssVars: any,\r\n  animationsEnabled: boolean\r\n): React.CSSProperties => {\r\n  const sizeConfig = getSizeConfig(size);\r\n\r\n  return {\r\n    position: 'absolute',\r\n    top: '12px',\r\n    right: '12px',\r\n    width: sizeConfig.dismissButtonSize,\r\n    height: sizeConfig.dismissButtonSize,\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    background: 'none',\r\n    border: 'none',\r\n    borderRadius: '50%',\r\n    cursor: 'pointer',\r\n    opacity: 0.6,\r\n    color: 'inherit',\r\n    fontSize: sizeConfig.dismissIconSize,\r\n    transition: animationsEnabled \r\n      ? 'opacity var(--duration-fast) var(--animation-smooth), background-color var(--duration-fast) var(--animation-smooth)' \r\n      : 'none',\r\n  };\r\n};\r\n\r\n// Progress bar styles (for auto-dismiss)\r\nexport const getProgressBarStyles = (\r\n  progress: number,\r\n  color: NotificationColor,\r\n  customColor: string | undefined,\r\n  cssVars: any\r\n): React.CSSProperties => {\r\n  const colors = getColorVariables(color, customColor, cssVars);\r\n  \r\n  return {\r\n    position: 'absolute',\r\n    bottom: 0,\r\n    left: 0,\r\n    height: '3px',\r\n    width: `${progress}%`,\r\n    backgroundColor: colors.main,\r\n    borderRadius: '0 0 12px 0',\r\n    transition: 'width var(--duration-smooth) linear',\r\n  };\r\n};\r\n\r\n// Toast animation styles\r\nexport const getToastAnimationStyles = (\r\n  position: string,\r\n  isEntering: boolean,\r\n  animationsEnabled: boolean\r\n): React.CSSProperties => {\r\n  if (!animationsEnabled) return {};\r\n\r\n  const baseStyles: React.CSSProperties = {\r\n    transition: 'all var(--duration-fast) var(--animation-smooth)',\r\n  };\r\n\r\n  if (position.includes('right')) {\r\n    return {\r\n      ...baseStyles,\r\n      transform: isEntering ? 'translateX(0)' : 'translateX(100%)',\r\n    };\r\n  }\r\n\r\n  if (position.includes('left')) {\r\n    return {\r\n      ...baseStyles,\r\n      transform: isEntering ? 'translateX(0)' : 'translateX(-100%)',\r\n    };\r\n  }\r\n\r\n  if (position.includes('top')) {\r\n    return {\r\n      ...baseStyles,\r\n      transform: isEntering ? 'translateY(0)' : 'translateY(-100%)',\r\n    };\r\n  }\r\n\r\n  if (position.includes('bottom')) {\r\n    return {\r\n      ...baseStyles,\r\n      transform: isEntering ? 'translateY(0)' : 'translateY(100%)',\r\n    };\r\n  }\r\n\r\n  return baseStyles;\r\n};","import React from 'react';\r\nimport { Icon } from '../Icon';\r\nimport type { NotificationColor, NotificationSize } from './Notification.types';\r\n\r\nexport const getTypeIcon = (color: NotificationColor): string => {\r\n  switch (color) {\r\n    case 'primary':\r\n      return 'InfoCircle';\r\n    case 'secondary':\r\n      return 'Bell';\r\n    case 'warning':\r\n      return 'WarningTriangle';\r\n    case 'destructive':\r\n      return 'XmarkCircle';\r\n    case 'success':\r\n      return 'CheckCircle';\r\n    case 'info':\r\n      return 'InfoCircle';\r\n    case 'custom':\r\n    default:\r\n      return 'Bell';\r\n  }\r\n};\r\n\r\nexport const getIconSize = (notificationSize: NotificationSize): 'xs' | 'sm' | 'md' | 'lg' | 'xl' => {\r\n  switch (notificationSize) {\r\n    case 'sm':\r\n      return 'sm';\r\n    case 'lg':\r\n      return 'md';\r\n    case 'md':\r\n    default:\r\n      return 'sm';\r\n  }\r\n};\r\n\r\nexport const getTypeColor = (color: NotificationColor, cssVars: any, variant?: string): string => {\r\n  // In solid variant, use foreground color for visibility against colored background\r\n  if (variant === 'solid') {\r\n    switch (color) {\r\n      case 'primary':\r\n        return cssVars.primaryForeground;\r\n      case 'secondary':\r\n        return cssVars.secondaryForeground;\r\n      case 'warning':\r\n        return cssVars.warningForeground;\r\n      case 'destructive':\r\n        return cssVars.destructiveForeground;\r\n      case 'success':\r\n        return cssVars.successForeground;\r\n      case 'info':\r\n        return cssVars.infoForeground;\r\n      case 'custom':\r\n      default:\r\n        return cssVars.foreground;\r\n    }\r\n  }\r\n\r\n  // In outline variant, use foreground color to match text color\r\n  if (variant === 'outline') {\r\n    return cssVars.foreground;\r\n  }\r\n\r\n  // For ghost and glassmorphic variants, use the main color\r\n  switch (color) {\r\n    case 'primary':\r\n      return cssVars.primary;\r\n    case 'secondary':\r\n      return cssVars.secondary;\r\n    case 'warning':\r\n      return cssVars.warning;\r\n    case 'destructive':\r\n      return cssVars.destructive || cssVars.error;\r\n    case 'success':\r\n      return cssVars.success;\r\n    case 'info':\r\n      return cssVars.info;\r\n    case 'custom':\r\n    default:\r\n      return cssVars.foreground;\r\n  }\r\n};\r\n\r\nexport const createTypeIcon = (\r\n  color: NotificationColor,\r\n  size: NotificationSize,\r\n  cssVars: any,\r\n  customIcon?: React.ReactNode,\r\n  variant?: string\r\n): React.ReactElement => {\r\n  if (customIcon) {\r\n    return <span>{customIcon}</span>;\r\n  }\r\n\r\n  const iconName = getTypeIcon(color);\r\n  const iconSize = getIconSize(size);\r\n  const iconColor = getTypeColor(color, cssVars, variant);\r\n\r\n  return (\r\n    <Icon\r\n      name={iconName as any}\r\n      size={iconSize}\r\n      style={{ color: iconColor }}\r\n    />\r\n  );\r\n};\r\n\r\nexport const generateNotificationId = (): string => {\r\n  return `notification-${Math.random().toString(36).substr(2, 9)}-${Date.now()}`;\r\n};\r\n\r\nexport const handleKeyDown = (\r\n  event: React.KeyboardEvent,\r\n  onDismiss?: () => void\r\n) => {\r\n  if (event.key === 'Escape' && onDismiss) {\r\n    event.preventDefault();\r\n    onDismiss();\r\n  }\r\n};\r\n\r\nexport const setupAutoDismiss = (\r\n  duration: number | null,\r\n  onDismiss?: () => void\r\n): (() => void) | null => {\r\n  if (!duration || duration <= 0 || !onDismiss) {\r\n    return null;\r\n  }\r\n\r\n  const timeoutId = setTimeout(() => {\r\n    onDismiss();\r\n  }, duration);\r\n\r\n  // Return cleanup function\r\n  return () => clearTimeout(timeoutId);\r\n};\r\n\r\nexport const formatDuration = (duration: number): string => {\r\n  if (duration < 1000) {\r\n    return `${duration}ms`;\r\n  }\r\n  \r\n  const seconds = Math.floor(duration / 1000);\r\n  if (seconds < 60) {\r\n    return `${seconds}s`;\r\n  }\r\n  \r\n  const minutes = Math.floor(seconds / 60);\r\n  const remainingSeconds = seconds % 60;\r\n  return remainingSeconds > 0 ? `${minutes}m ${remainingSeconds}s` : `${minutes}m`;\r\n};\r\n\r\nexport const getAriaLabel = (\r\n  color: NotificationColor,\r\n  title: string,\r\n  description?: string\r\n): string => {\r\n  const typeLabel = color.charAt(0).toUpperCase() + color.slice(1);\r\n  const baseLabel = `${typeLabel} notification: ${title}`;\r\n  \r\n  if (description) {\r\n    return `${baseLabel}. ${description}`;\r\n  }\r\n  \r\n  return baseLabel;\r\n};\r\n","'use client';\r\n\r\nimport React, { forwardRef, useCallback, useEffect, useMemo } from 'react';\r\nimport { useCSSVariables, useSettings } from '../../../providers';\r\nimport { Button } from '../Button';\r\nimport { Icon } from '../Icon';\r\nimport { Divider } from '../Divider';\r\nimport { ProgressIndicator } from '../ProgressIndicator';\r\nimport { extractContainerProps, UNIVERSAL_DEFAULTS } from '../types';\r\nimport type { NotificationProps } from './Notification.types';\r\nimport {\r\n  createNotificationContainerStyles,\r\n  getNotificationStyles,\r\n  getIconStyles,\r\n  getContentStyles,\r\n  getTitleStyles,\r\n  getDescriptionStyles,\r\n  getActionsStyles,\r\n  getDismissButtonStyles,\r\n  getActionButtonStyles,\r\n  getSizeConfig,\r\n  getShapeStyles,\r\n} from './Notification.styles';\r\nimport {\r\n  createTypeIcon,\r\n  generateNotificationId,\r\n  handleKeyDown,\r\n  setupAutoDismiss,\r\n  getAriaLabel,\r\n} from './Notification.utils';\r\n\r\nexport const Notification = forwardRef<HTMLDivElement, NotificationProps>((allProps, ref) => {\r\n  // Extract container props and component-specific props\r\n  const [containerProps, componentProps] = extractContainerProps(allProps);\r\n  \r\n  // Destructure container props with defaults\r\n  const {\r\n    color = UNIVERSAL_DEFAULTS.color,\r\n    customColor,\r\n    variant = UNIVERSAL_DEFAULTS.variant,\r\n    shape = UNIVERSAL_DEFAULTS.shape,\r\n    size = UNIVERSAL_DEFAULTS.size,\r\n    disabled = UNIVERSAL_DEFAULTS.disabled,\r\n    loading = UNIVERSAL_DEFAULTS.loading,\r\n    loadingKey,\r\n    width,\r\n    height,\r\n    className,\r\n    style,\r\n    id,\r\n    'data-testid': dataTestId,\r\n    animate = UNIVERSAL_DEFAULTS.animate,\r\n    rounded, // Legacy support\r\n    children,\r\n    onClick,\r\n    onAsyncClick,\r\n  } = containerProps;\r\n  \r\n  // Destructure component-specific props\r\n  const {\r\n    title,\r\n    description,\r\n    dismissible = true,\r\n    showIcon = true,\r\n    customIcon,\r\n    actions,\r\n    onDismiss,\r\n    duration,\r\n    showProgress,\r\n    toastPosition,\r\n    type, // Legacy prop\r\n    ...restProps\r\n  } = componentProps;\r\n  \r\n  // Map legacy type prop to color if color is not explicitly set\r\n  const effectiveColor = type && allProps.color === undefined ? \r\n    (type === 'default' ? 'primary' : \r\n     type === 'inverted' ? 'secondary' : \r\n     type) : color;\r\n\r\n  // Hooks\r\n  const cssVars = useCSSVariables();\r\n  const { settings } = useSettings();\r\n  const animationsEnabled = (settings.appearance.animations ?? true) && animate;\r\n\r\n    // Generate ID if not provided\r\n    const notificationId = useMemo(() => id || generateNotificationId(), [id]);\r\n\r\n    // Auto-dismiss setup\r\n    useEffect(() => {\r\n      const cleanup = setupAutoDismiss(duration ?? null, onDismiss);\r\n      return cleanup || undefined;\r\n    }, [duration, onDismiss]);\r\n\r\n    // Event handlers\r\n    const handleDismiss = useCallback(() => {\r\n      onDismiss?.();\r\n    }, [onDismiss]);\r\n\r\n    const handleKeyDownInternal = useCallback((event: React.KeyboardEvent) => {\r\n      handleKeyDown(event, dismissible ? handleDismiss : undefined);\r\n    }, [dismissible, handleDismiss]);\r\n\r\n    // Styles\r\n    const baseStyles = useMemo(() => \r\n      createNotificationContainerStyles(size, shape === 'pill' || Boolean(rounded), animationsEnabled),\r\n      [size, shape, rounded, animationsEnabled]\r\n    );\r\n\r\n    const notificationStyles = useMemo(() => \r\n      getNotificationStyles(effectiveColor, customColor, variant, size, disabled, cssVars),\r\n      [effectiveColor, customColor, variant, size, disabled, cssVars]\r\n    );\r\n\r\n    const iconContainerStyles = useMemo(() => \r\n      getIconStyles(size, effectiveColor, cssVars),\r\n      [size, effectiveColor, cssVars]\r\n    );\r\n\r\n    const contentStyles = useMemo(() => \r\n      getContentStyles(),\r\n      []\r\n    );\r\n\r\n    const titleStyles = useMemo(() => \r\n      getTitleStyles(size, cssVars),\r\n      [size, cssVars]\r\n    );\r\n\r\n    const descriptionStyles = useMemo(() => \r\n      getDescriptionStyles(size, cssVars),\r\n      [size, cssVars]\r\n    );\r\n\r\n    const actionsStyles = useMemo(() => \r\n      getActionsStyles(size),\r\n      [size]\r\n    );\r\n\r\n    const dismissButtonStyles = useMemo(() => \r\n      getDismissButtonStyles(size, cssVars, animationsEnabled),\r\n      [size, cssVars, animationsEnabled]\r\n    );\r\n\r\n    const combinedStyles: React.CSSProperties = {\r\n      ...baseStyles,\r\n      ...notificationStyles,\r\n      width,\r\n      height,\r\n      // Combine loading and disabled states properly\r\n      opacity: disabled ? 0.6 : loading ? 0.7 : undefined,\r\n      cursor: disabled ? 'not-allowed' : loading ? 'wait' : undefined,\r\n      ...style,\r\n    };\r\n\r\n    // Accessibility\r\n    const ariaLabel = getAriaLabel(effectiveColor, title, description);\r\n\r\n    return (\r\n      <div\r\n        ref={ref}\r\n        id={id || notificationId}\r\n        role=\"alert\"\r\n        aria-label={ariaLabel}\r\n        className={className}\r\n        style={combinedStyles}\r\n        onKeyDown={handleKeyDownInternal}\r\n        tabIndex={dismissible ? 0 : undefined}\r\n        data-testid={dataTestId}\r\n        onClick={onClick}\r\n        {...restProps}\r\n      >\r\n        {/* Top Row: Icon + Title (left) | Close Button (right) */}\r\n        <div style={{ \r\n          display: 'flex', \r\n          justifyContent: 'space-between', \r\n          alignItems: 'flex-start',\r\n          width: '100%'\r\n        }}>\r\n          {/* Left side: Icon + Title */}\r\n          <div style={{ display: 'flex', alignItems: 'center', gap: '12px', flex: 1 }}>\r\n            {showIcon && (\r\n              <div style={iconContainerStyles}>\r\n                {loading ? (\r\n                  <ProgressIndicator\r\n                    type=\"circular\"\r\n                    size={size === 'xs' ? 'xs' : size === 'sm' ? 'sm' : size === 'lg' ? 'md' : 'sm'}\r\n                    color={variant === 'outline' ? 'primary' : effectiveColor}\r\n                    variant={variant === 'solid' ? 'solid' : 'outline'}\r\n                    disabled={disabled}\r\n                  />\r\n                ) : (\r\n                  createTypeIcon(effectiveColor, size, cssVars, customIcon, variant)\r\n                )}\r\n              </div>\r\n            )}\r\n            <h4 style={titleStyles}>{title}</h4>\r\n          </div>\r\n\r\n          {/* Right side: Close Button */}\r\n          {dismissible && onDismiss && !loading && !disabled && (\r\n            <button\r\n              onClick={handleDismiss}\r\n              style={{\r\n                background: 'none',\r\n                border: 'none',\r\n                cursor: 'pointer',\r\n                opacity: 0.6,\r\n                color: 'inherit',\r\n                display: 'flex',\r\n                alignItems: 'center',\r\n                justifyContent: 'center',\r\n                borderRadius: '4px',\r\n                transition: animationsEnabled ? 'opacity 0.2s ease-in-out' : 'none',\r\n                width: size === 'sm' ? '20px' : size === 'lg' ? '28px' : '24px',\r\n                height: size === 'sm' ? '20px' : size === 'lg' ? '28px' : '24px',\r\n                fontSize: size === 'sm' ? '16px' : size === 'lg' ? '20px' : '18px',\r\n                marginLeft: '12px',\r\n                flexShrink: 0\r\n              }}\r\n              aria-label=\"Dismiss notification\"\r\n              onMouseEnter={(e) => {\r\n                if (animationsEnabled) {\r\n                  e.currentTarget.style.opacity = '1';\r\n                }\r\n              }}\r\n              onMouseLeave={(e) => {\r\n                if (animationsEnabled) {\r\n                  e.currentTarget.style.opacity = '0.6';\r\n                }\r\n              }}\r\n            >\r\n              <Icon name=\"Xmark\" size={size === 'lg' ? 'md' : 'sm'} />\r\n            </button>\r\n          )}\r\n        </div>\r\n\r\n        {/* Divider */}\r\n        {(description || children || (actions && actions.length > 0)) && (\r\n          <div style={{ margin: '4px 0' }}>\r\n            {/* the color of the variation should match the color of the border \r\n            type DividerVariant = 'primary' | 'secondary' | 'warning' | 'destructive' | 'success' | 'outline'\r\n            */}\r\n            <Divider color={\r\n                effectiveColor === 'primary' ? 'primary' :\r\n                effectiveColor === 'secondary' ? 'secondary' :\r\n                effectiveColor === 'warning' ? 'warning' :\r\n                effectiveColor === 'destructive' ? 'destructive' :\r\n                effectiveColor === 'success' ? 'success' :\r\n                effectiveColor === 'info' ? 'info' :\r\n                'primary'\r\n              }\r\n              rounded={shape === 'pill' || Boolean(rounded)}\r\n              size=\"sm\"\r\n            />\r\n          </div>\r\n        )}\r\n\r\n        {/* Bottom Row: Description (left) | Actions (right) */}\r\n        {(description || children || (actions && actions.length > 0)) && (\r\n          <div style={{ \r\n            display: 'flex', \r\n            justifyContent: 'space-between', \r\n            alignItems: 'flex-start',\r\n            width: '100%',\r\n            gap: '12px'\r\n          }}>\r\n            {/* Left side: Description + Children */}\r\n            <div style={{ flex: 1 }}>\r\n              {description && (\r\n                <p style={{\r\n                  ...descriptionStyles,\r\n                  margin: '0'\r\n                }}>\r\n                  {description}\r\n                </p>\r\n              )}\r\n              {children && (\r\n                <div style={{ marginTop: description ? '4px' : '0' }}>\r\n                  {children}\r\n                </div>\r\n              )}\r\n            </div>\r\n\r\n            {/* Right side: Actions */}\r\n            {actions && actions.length > 0 && !loading && !disabled && (\r\n              <div style={{\r\n                display: 'flex',\r\n                gap: '8px',\r\n                alignItems: 'flex-start',\r\n                flexWrap: 'wrap',\r\n                flexShrink: 0\r\n              }}>\r\n                {actions.map((action, index) => {\r\n                  const actionVariant = action.variant || 'outline';\r\n                  const baseStyles = getActionButtonStyles(actionVariant, size, cssVars, animationsEnabled, variant, effectiveColor);\r\n\r\n                  // Get notification-specific colors for hover effects\r\n                  const getHoverColors = (color: string) => {\r\n                    const colorMap: Record<string, any> = {\r\n                      primary: { hover: cssVars.primaryHover },\r\n                      secondary: { hover: cssVars.secondaryHover },\r\n                      success: { hover: cssVars.successHover },\r\n                      warning: { hover: cssVars.warningHover },\r\n                      destructive: { hover: cssVars.destructiveHover },\r\n                      info: { hover: cssVars.infoHover },\r\n                    };\r\n                    return colorMap[color]?.hover || cssVars.primaryHover;\r\n                  };\r\n\r\n                  const hoverColor = getHoverColors(effectiveColor);\r\n\r\n                  return (\r\n                    <button\r\n                      key={index}\r\n                      onClick={action.onClick}\r\n                      style={baseStyles}\r\n                      onMouseEnter={(e) => {\r\n                        if (animationsEnabled) {\r\n                          const isInSolidNotification = variant === 'solid';\r\n\r\n                          if (actionVariant === 'solid') {\r\n                            if (isInSolidNotification) {\r\n                              // Solid button in solid notification: slightly darken the text color background\r\n                              e.currentTarget.style.backgroundColor = cssVars.foregroundAccent;\r\n                              e.currentTarget.style.borderTopColor = cssVars.foregroundAccent;\r\n                              e.currentTarget.style.borderRightColor = cssVars.foregroundAccent;\r\n                              e.currentTarget.style.borderBottomColor = cssVars.foregroundAccent;\r\n                              e.currentTarget.style.borderLeftColor = cssVars.foregroundAccent;\r\n                              e.currentTarget.style.color = hoverColor;\r\n                            } else {\r\n                              // Normal solid button hover\r\n                              e.currentTarget.style.backgroundColor = hoverColor;\r\n                              e.currentTarget.style.borderTopColor = hoverColor;\r\n                              e.currentTarget.style.borderRightColor = hoverColor;\r\n                              e.currentTarget.style.borderBottomColor = hoverColor;\r\n                              e.currentTarget.style.borderLeftColor = hoverColor;\r\n                            }\r\n                          } else if (actionVariant === 'outline') {\r\n                            if (isInSolidNotification) {\r\n                              // Outline button in solid notification: add subtle text color background\r\n                              e.currentTarget.style.backgroundColor = cssVars.foregroundAccent;\r\n                            } else {\r\n                              // Normal outline button hover - use notification color scheme\r\n                              const notificationBg = (cssVars as any)[`${effectiveColor}Background`] || cssVars.primaryBackground;\r\n                              e.currentTarget.style.backgroundColor = notificationBg;\r\n                              e.currentTarget.style.borderTopColor = hoverColor;\r\n                              e.currentTarget.style.borderRightColor = hoverColor;\r\n                              e.currentTarget.style.borderBottomColor = hoverColor;\r\n                              e.currentTarget.style.borderLeftColor = hoverColor;\r\n                              e.currentTarget.style.color = hoverColor;\r\n                            }\r\n                          } else if (actionVariant === 'ghost') {\r\n                            const ghostBg = (cssVars as any)[`${effectiveColor}Background`] || cssVars.primaryBackground;\r\n                            e.currentTarget.style.backgroundColor = ghostBg;\r\n                            e.currentTarget.style.color = hoverColor;\r\n                          }\r\n                        }\r\n                      }}\r\n                      onMouseLeave={(e) => {\r\n                        if (animationsEnabled) {\r\n                          // Reset to base styles\r\n                          Object.assign(e.currentTarget.style, baseStyles);\r\n                        }\r\n                      }}\r\n                    >\r\n                      {action.label}\r\n                    </button>\r\n                  );\r\n                })}\r\n              </div>\r\n            )}\r\n          </div>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n);\r\n\r\nNotification.displayName = 'Notification';","import { CSSProperties } from 'react';\r\nimport type { SearchColor, SearchVariant, SearchSize, SearchShape } from './Search.types';\r\n\r\n// Get color variables based on color prop\r\nexport const getColorVariables = (color: SearchColor, customColor: string | undefined, cssVars: any) => {\r\n  if (color === 'custom' && customColor) {\r\n    return {\r\n      main: customColor,\r\n      foreground: '#ffffff',\r\n      background: customColor + '10',\r\n      border: customColor,\r\n      hover: customColor + '20',\r\n    };\r\n  }\r\n\r\n  const colorMap: Record<string, any> = {\r\n    primary: {\r\n      main: cssVars.primary,\r\n      background: cssVars.primaryBackground,\r\n      foreground: cssVars.primaryForeground,\r\n      hover: cssVars.primaryHover,\r\n      accent: cssVars.primaryAccent,\r\n      shadow: cssVars.primaryShadow,\r\n      disabled: cssVars.primaryDisabled,\r\n      border: cssVars.primaryBorder,\r\n    },\r\n    secondary: {\r\n      main: cssVars.secondary,\r\n      background: cssVars.secondaryBackground,\r\n      foreground: cssVars.secondaryForeground,\r\n      hover: cssVars.secondaryHover,\r\n      accent: cssVars.secondaryAccent,\r\n      shadow: cssVars.secondaryShadow,\r\n      disabled: cssVars.secondaryDisabled,\r\n      border: cssVars.secondaryBorder,\r\n    },\r\n    success: {\r\n      main: cssVars.success,\r\n      background: cssVars.successBackground,\r\n      foreground: cssVars.successForeground,\r\n      hover: cssVars.successHover,\r\n      accent: cssVars.successAccent,\r\n      shadow: cssVars.successShadow,\r\n      disabled: cssVars.successDisabled,\r\n      border: cssVars.successBorder,\r\n    },\r\n    warning: {\r\n      main: cssVars.warning,\r\n      background: cssVars.warningBackground,\r\n      foreground: cssVars.warningForeground,\r\n      hover: cssVars.warningHover,\r\n      accent: cssVars.warningAccent,\r\n      shadow: cssVars.warningShadow,\r\n      disabled: cssVars.warningDisabled,\r\n      border: cssVars.warningBorder,\r\n    },\r\n    destructive: {\r\n      main: cssVars.destructive,\r\n      background: cssVars.destructiveBackground,\r\n      foreground: cssVars.destructiveForeground,\r\n      hover: cssVars.destructiveHover,\r\n      accent: cssVars.destructiveAccent,\r\n      shadow: cssVars.destructiveShadow,\r\n      disabled: cssVars.destructiveDisabled,\r\n      border: cssVars.destructiveBorder,\r\n    },\r\n    info: {\r\n      main: cssVars.info,\r\n      background: cssVars.infoBackground,\r\n      foreground: cssVars.infoForeground,\r\n      hover: cssVars.infoHover,\r\n      accent: cssVars.infoAccent,\r\n      shadow: cssVars.infoShadow,\r\n      disabled: cssVars.infoDisabled,\r\n      border: cssVars.infoBorder,\r\n    },\r\n  };\r\n\r\n  return colorMap[color] || colorMap.primary;\r\n};\r\n\r\n// Size configurations following design standards (matching Button component heights)\r\nexport const getSearchDimensions = (size: SearchSize) => {\r\n  switch (size) {\r\n    case 'xs':\r\n      return {\r\n        height: 40, // Matches Button xs height\r\n        minWidth: 200,\r\n        fontSize: '14px',\r\n        iconSize: 16,\r\n        paddingX: 8,\r\n        paddingY: 6,\r\n        borderRadius: 12,\r\n      };\r\n    case 'sm':\r\n      return {\r\n        height: 40, // Matches Button sm height\r\n        minWidth: 220,\r\n        fontSize: '14px',\r\n        iconSize: 18,\r\n        paddingX: 10,\r\n        paddingY: 8,\r\n        borderRadius: 12,\r\n      };\r\n    case 'lg':\r\n      return {\r\n        height: 52, // Matches Button lg height\r\n        minWidth: 260,\r\n        fontSize: '16px',\r\n        iconSize: 22,\r\n        paddingX: 14,\r\n        paddingY: 12,\r\n        borderRadius: 12,\r\n      };\r\n    case 'xl':\r\n      return {\r\n        height: 60, // Matches Button xl height\r\n        minWidth: 280,\r\n        fontSize: '18px',\r\n        iconSize: 24,\r\n        paddingX: 16,\r\n        paddingY: 14,\r\n        borderRadius: 12,\r\n      };\r\n    case 'md':\r\n    default:\r\n      return {\r\n        height: 48, // Matches Button md height\r\n        minWidth: 240,\r\n        fontSize: '16px', // Updated to match Button md fontSize\r\n        iconSize: 20,\r\n        paddingX: 12,\r\n        paddingY: 10,\r\n        borderRadius: 12,\r\n      };\r\n  }\r\n};\r\n\r\n// Get variant styles for search input\r\nexport const getVariantStyles = (\r\n  variant: SearchVariant,\r\n  color: SearchColor,\r\n  customColor: string | undefined,\r\n  cssVars: any,\r\n  error: boolean\r\n): CSSProperties => {\r\n  const colors = getColorVariables(color, customColor, cssVars);\r\n\r\n  // Error state override\r\n  if (error) {\r\n    const baseErrorStyle = {\r\n      borderWidth: '2px',\r\n      borderStyle: 'solid' as const,\r\n      borderColor: cssVars.destructive,\r\n    };\r\n\r\n    switch (variant) {\r\n      case 'solid':\r\n        return {\r\n          ...baseErrorStyle,\r\n          backgroundColor: cssVars.destructiveAccent || cssVars.destructive,\r\n          color: colors.foreground, // Keep original foreground color, not destructive\r\n        };\r\n      case 'ghost':\r\n        return {\r\n          ...baseErrorStyle,\r\n          backgroundColor: 'transparent',\r\n          color: cssVars.foreground,\r\n        };\r\n      case 'glassmorphic':\r\n        return {\r\n          ...baseErrorStyle,\r\n          backgroundColor: cssVars.destructiveBackground,\r\n          color: cssVars.destructiveForeground,\r\n        };\r\n      case 'outline':\r\n      default:\r\n        return {\r\n          ...baseErrorStyle,\r\n          backgroundColor: cssVars.background,\r\n          color: cssVars.foreground,\r\n        };\r\n    }\r\n  }\r\n\r\n  // Normal state styles by variant\r\n  switch (variant) {\r\n    case 'solid':\r\n      return {\r\n        borderColor: colors.accent || colors.main,\r\n        backgroundColor: colors.accent || colors.main,\r\n        color: colors.foreground,\r\n        borderWidth: '2px',\r\n        borderStyle: 'solid' as const,\r\n      };\r\n    case 'ghost':\r\n      return {\r\n        borderColor: 'transparent',\r\n        backgroundColor: 'transparent',\r\n        color: cssVars.foreground,\r\n        borderWidth: '2px',\r\n        borderStyle: 'solid' as const,\r\n      };\r\n    case 'glassmorphic':\r\n      return {\r\n        borderColor: colors.border,\r\n        backgroundColor: colors.background,\r\n        color: colors.foreground,\r\n        borderWidth: '2px',\r\n        borderStyle: 'solid' as const,\r\n      };\r\n    case 'outline':\r\n    default:\r\n      return {\r\n        borderColor: colors.main,\r\n        backgroundColor: cssVars.background,\r\n        color: cssVars.foreground,\r\n        borderWidth: '2px',\r\n        borderStyle: 'solid' as const,\r\n      };\r\n  }\r\n};\r\n\r\n// Get shape styles based on shape prop\r\nexport const getShapeStyles = (shape: SearchShape, size: SearchSize): CSSProperties => {\r\n  const dimensions = getSearchDimensions(size);\r\n\r\n  switch (shape) {\r\n    case 'sharp':\r\n      return { borderRadius: '0' };\r\n    case 'round':\r\n      return { borderRadius: `${dimensions.borderRadius}px` };\r\n    case 'pill':\r\n      return { borderRadius: '9999px' };\r\n    default:\r\n      return { borderRadius: `${dimensions.borderRadius}px` };\r\n  }\r\n};\r\n\r\n// Main search container styles\r\nexport const getSearchContainerStyles = (\r\n  size: SearchSize,\r\n  variant: SearchVariant,\r\n  color: SearchColor,\r\n  customColor: string | undefined,\r\n  shape: SearchShape,\r\n  disabled: boolean,\r\n  focused: boolean,\r\n  error: boolean,\r\n  animationsEnabled: boolean,\r\n  cssVars: any,\r\n  width?: string | number\r\n): CSSProperties => {\r\n  const dimensions = getSearchDimensions(size);\r\n  const variantStyles = getVariantStyles(variant, color, customColor, cssVars, error);\r\n  const shapeStyles = getShapeStyles(shape, size);\r\n  const colors = getColorVariables(color, customColor, cssVars);\r\n\r\n  const baseStyles: CSSProperties = {\r\n    position: 'relative',\r\n    display: 'inline-flex',\r\n    alignItems: 'center',\r\n    width: width || 'auto',\r\n    minWidth: `${dimensions.minWidth}px`,\r\n    height: `${dimensions.height}px`,\r\n    fontFamily: 'inherit',\r\n    transition: animationsEnabled\r\n      ? 'border-color var(--duration-fast) var(--animation-smooth), background-color var(--duration-fast) var(--animation-smooth), opacity var(--duration-fast) var(--animation-smooth)'\r\n      : 'none',\r\n    cursor: disabled ? 'not-allowed' : 'text',\r\n    opacity: disabled ? 0.6 : 1,\r\n  };\r\n\r\n  const focusStyles: CSSProperties = focused ? {\r\n    outline: `2px solid ${error ? cssVars.destructive : colors.main}`,\r\n    outlineOffset: '2px',\r\n  } : {};\r\n\r\n  return {\r\n    ...baseStyles,\r\n    ...variantStyles,\r\n    ...shapeStyles,\r\n    ...focusStyles,\r\n  };\r\n};\r\n\r\n// Search input styles\r\nexport const getSearchInputStyles = (\r\n  size: SearchSize,\r\n  variant: SearchVariant,\r\n  color: SearchColor,\r\n  customColor: string | undefined,\r\n  disabled: boolean,\r\n  hasLeftIcon: boolean,\r\n  hasRightIcon: boolean,\r\n  cssVars: any\r\n): CSSProperties => {\r\n  const dimensions = getSearchDimensions(size);\r\n  const colors = getColorVariables(color, customColor, cssVars);\r\n\r\n  // Calculate padding based on icons\r\n  const leftPadding = hasLeftIcon ? dimensions.iconSize + dimensions.paddingX + 8 : dimensions.paddingX;\r\n  const rightPadding = hasRightIcon ? dimensions.iconSize + dimensions.paddingX + 8 : dimensions.paddingX;\r\n\r\n  const baseStyles: CSSProperties = {\r\n    flex: 1,\r\n    border: 'none',\r\n    outline: 'none',\r\n    backgroundColor: 'transparent',\r\n    fontFamily: 'inherit',\r\n    fontSize: dimensions.fontSize,\r\n    lineHeight: 1.5,\r\n    paddingLeft: `${leftPadding}px`,\r\n    paddingRight: `${rightPadding}px`,\r\n    paddingTop: `${dimensions.paddingY}px`,\r\n    paddingBottom: `${dimensions.paddingY}px`,\r\n    // Reset browser styles\r\n    WebkitAppearance: 'none',\r\n    MozAppearance: 'none',\r\n  };\r\n\r\n  // Color based on variant\r\n  const getInputColor = () => {\r\n    switch (variant) {\r\n      case 'solid':\r\n        return colors.foreground;\r\n      case 'outline':\r\n      case 'ghost':\r\n      case 'glassmorphic':\r\n      default:\r\n        return cssVars.foreground;\r\n    }\r\n  };\r\n\r\n  return {\r\n    ...baseStyles,\r\n    color: getInputColor(),\r\n    cursor: disabled ? 'not-allowed' : 'text',\r\n  };\r\n};\r\n\r\n// Separate function to get placeholder color for use in component\r\nexport const getPlaceholderColor = (cssVars: any, variant: SearchVariant = 'outline'): string => {\r\n  switch (variant) {\r\n    case 'solid':\r\n      return cssVars.primaryForeground;\r\n    case 'outline':\r\n      return cssVars.mutedForeground;\r\n    case 'ghost':\r\n      return cssVars.mutedForeground;\r\n    default:\r\n      return cssVars.mutedForeground;\r\n  }\r\n};\r\n\r\n// Search icon styles\r\nexport const getSearchIconStyles = (\r\n  size: SearchSize,\r\n  position: 'left' | 'right',\r\n  variant: SearchVariant,\r\n  color: SearchColor,\r\n  customColor: string | undefined,\r\n  disabled: boolean,\r\n  clickable: boolean,\r\n  animationsEnabled: boolean,\r\n  cssVars: any\r\n): CSSProperties => {\r\n  const dimensions = getSearchDimensions(size);\r\n  const colors = getColorVariables(color, customColor, cssVars);\r\n\r\n  // Determine icon color based on variant\r\n  const getIconColor = () => {\r\n    switch (variant) {\r\n      case 'solid':\r\n        return colors.foreground;\r\n      case 'outline':\r\n      case 'ghost':\r\n      case 'glassmorphic':\r\n      default:\r\n        return cssVars.mutedForeground;\r\n    }\r\n  };\r\n\r\n  const baseStyles: CSSProperties = {\r\n    position: 'absolute',\r\n    top: '50%',\r\n    transform: 'translateY(-50%)',\r\n    [position]: `${dimensions.paddingX}px`,\r\n    width: `${dimensions.iconSize}px`,\r\n    height: `${dimensions.iconSize}px`,\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    border: 'none',\r\n    background: 'transparent',\r\n    color: getIconColor(),\r\n    cursor: clickable && !disabled ? 'pointer' : 'default',\r\n    opacity: disabled ? 0.5 : 1,\r\n    transition: animationsEnabled ? 'color var(--duration-fast) var(--animation-smooth), opacity var(--duration-fast) var(--animation-smooth)' : 'none',\r\n    zIndex: 1,\r\n  };\r\n\r\n  return baseStyles;\r\n};\r\n\r\n// Loading spinner styles\r\nexport const getLoadingStyles = (\r\n  size: SearchSize,\r\n  animationsEnabled: boolean\r\n): CSSProperties => {\r\n  const dimensions = getSearchDimensions(size);\r\n\r\n  return {\r\n    animation: animationsEnabled ? 'spin 1s linear infinite' : 'none',\r\n    width: `${dimensions.iconSize}px`,\r\n    height: `${dimensions.iconSize}px`,\r\n  };\r\n};\r\n","import { useEffect, useRef, useCallback } from 'react';\r\n\r\n// Debounce hook for search input\r\nexport const useDebounce = (\r\n  value: string,\r\n  delay: number,\r\n  callback: (value: string) => void\r\n) => {\r\n  const timeoutRef = useRef<NodeJS.Timeout | null>(null);\r\n\r\n  useEffect(() => {\r\n    if (timeoutRef.current) {\r\n      clearTimeout(timeoutRef.current);\r\n    }\r\n\r\n    timeoutRef.current = setTimeout(() => {\r\n      callback(value);\r\n    }, delay);\r\n\r\n    return () => {\r\n      if (timeoutRef.current) {\r\n        clearTimeout(timeoutRef.current);\r\n      }\r\n    };\r\n  }, [value, delay, callback]);\r\n};\r\n\r\n// Keyboard event handlers\r\nexport const handleSearchKeyDown = (\r\n  event: React.KeyboardEvent<HTMLInputElement>,\r\n  value: string,\r\n  onSearch?: (value: string) => void,\r\n  onClear?: () => void,\r\n  clearOnEscape: boolean = true\r\n) => {\r\n  switch (event.key) {\r\n    case 'Enter':\r\n      event.preventDefault();\r\n      onSearch?.(value);\r\n      break;\r\n    case 'Escape':\r\n      if (clearOnEscape && value) {\r\n        event.preventDefault();\r\n        onClear?.();\r\n      }\r\n      break;\r\n  }\r\n};\r\n\r\n// Generate unique IDs for accessibility\r\nexport const generateSearchId = (() => {\r\n  let counter = 0;\r\n  return (prefix: string = 'search') => `${prefix}-${++counter}`;\r\n})();\r\n\r\n// Create accessibility props\r\nexport const createSearchAccessibilityProps = (\r\n  id: string,\r\n  disabled: boolean,\r\n  error: boolean,\r\n  loading: boolean\r\n) => ({\r\n  id,\r\n  'aria-disabled': disabled,\r\n  'aria-invalid': error,\r\n  'aria-busy': loading,\r\n  role: 'searchbox',\r\n  type: 'search',\r\n});\r\n\r\n// Focus management\r\nexport const useFocusManagement = (\r\n  inputRef: React.RefObject<HTMLInputElement>,\r\n  autoFocus: boolean = false\r\n) => {\r\n  useEffect(() => {\r\n    if (autoFocus && inputRef.current) {\r\n      inputRef.current.focus();\r\n    }\r\n  }, [autoFocus, inputRef]);\r\n\r\n  const focus = useCallback(() => {\r\n    inputRef.current?.focus();\r\n  }, [inputRef]);\r\n\r\n  const blur = useCallback(() => {\r\n    inputRef.current?.blur();\r\n  }, [inputRef]);\r\n\r\n  const select = useCallback(() => {\r\n    inputRef.current?.select();\r\n  }, [inputRef]);\r\n\r\n  return { focus, blur, select };\r\n};\r\n\r\n// Search value validation\r\nexport const validateSearchValue = (\r\n  value: string,\r\n  minLength?: number,\r\n  maxLength?: number,\r\n  pattern?: RegExp\r\n): { isValid: boolean; error?: string } => {\r\n  if (minLength && value.length < minLength) {\r\n    return {\r\n      isValid: false,\r\n      error: `Search must be at least ${minLength} characters`,\r\n    };\r\n  }\r\n\r\n  if (maxLength && value.length > maxLength) {\r\n    return {\r\n      isValid: false,\r\n      error: `Search must be no more than ${maxLength} characters`,\r\n    };\r\n  }\r\n\r\n  if (pattern && !pattern.test(value)) {\r\n    return {\r\n      isValid: false,\r\n      error: 'Search contains invalid characters',\r\n    };\r\n  }\r\n\r\n  return { isValid: true };\r\n};\r\n\r\n// Handle search icon click\r\nexport const handleSearchIconClick = (\r\n  value: string,\r\n  onSearch?: (value: string) => void,\r\n  inputRef?: React.RefObject<HTMLInputElement>\r\n) => {\r\n  if (onSearch) {\r\n    onSearch(value);\r\n  } else {\r\n    // If no onSearch handler, just focus the input\r\n    inputRef?.current?.focus();\r\n  }\r\n};\r\n\r\n// Handle clear button click\r\nexport const handleClearClick = (\r\n  onClear?: () => void,\r\n  onChange?: (value: string) => void,\r\n  inputRef?: React.RefObject<HTMLInputElement>\r\n) => {\r\n  if (onClear) {\r\n    onClear();\r\n  } else if (onChange) {\r\n    onChange('');\r\n  }\r\n  \r\n  // Focus the input after clearing\r\n  setTimeout(() => {\r\n    inputRef?.current?.focus();\r\n  }, 0);\r\n};\r\n","'use client';\r\n\r\nimport React, { forwardRef, useState, useRef, useMemo, useCallback } from 'react';\r\nimport { useCSSVariables, useSettings } from '../../../providers';\r\nimport { extractFormProps, UNIVERSAL_DEFAULTS } from '../types';\r\nimport { Icon } from '../Icon';\r\nimport type { SearchProps } from './Search.types';\r\nimport {\r\n  getSearchContainerStyles,\r\n  getSearchInputStyles,\r\n  getSearchIconStyles,\r\n  getLoadingStyles,\r\n  getPlaceholderColor,\r\n} from './Search.styles';\r\nimport {\r\n  generateSearchId,\r\n  useFocusManagement,\r\n} from './Search.utils';\r\n\r\nexport const Search = forwardRef<HTMLInputElement, SearchProps>((allProps, ref) => {\r\n  // Extract form props and component-specific props\r\n  const [formProps, componentProps] = extractFormProps(allProps);\r\n  \r\n  // Destructure form props with defaults\r\n  const {\r\n    color = UNIVERSAL_DEFAULTS.color,\r\n    customColor,\r\n    variant = 'outline', // Search-specific default\r\n    shape = UNIVERSAL_DEFAULTS.shape,\r\n    size = UNIVERSAL_DEFAULTS.size,\r\n    disabled = UNIVERSAL_DEFAULTS.disabled,\r\n    loading = UNIVERSAL_DEFAULTS.loading,\r\n    error,\r\n    label,\r\n    helperText,\r\n    placeholder = 'Search...',\r\n    width,\r\n    height,\r\n    className,\r\n    style,\r\n    id: providedId,\r\n    'data-testid': dataTestId,\r\n    animate = UNIVERSAL_DEFAULTS.animate,\r\n    rounded, // Legacy support\r\n    // Form-specific props\r\n    name,\r\n    value: controlledValue,\r\n    required,\r\n    readOnly,\r\n    autoComplete,\r\n    autoFocus = false,\r\n    onChange,\r\n  } = formProps;\r\n  \r\n  // Destructure component-specific props\r\n  const {\r\n    onSearch,\r\n    onClear,\r\n    showSearchIcon = true,\r\n    showClearButton = true,\r\n    searchIconPosition = 'left',\r\n    debounceDelay = 300,\r\n    searchIcon,\r\n    clearIcon,\r\n    clearOnEscape = true,\r\n    ...rest\r\n  } = componentProps;\r\n\r\n  // Hooks\r\n  const cssVars = useCSSVariables();\r\n  const { settings } = useSettings();\r\n  const animationsEnabled = (settings.appearance.animations ?? true) && animate;\r\n  \r\n  // Internal state for uncontrolled mode\r\n  const [internalValue, setInternalValue] = useState('');\r\n  const isControlled = controlledValue !== undefined;\r\n  const value = isControlled ? controlledValue : internalValue;\r\n  \r\n  // Refs\r\n  const inputRef = useRef<HTMLInputElement>(null);\r\n  const combinedRef = ref || inputRef;\r\n  \r\n  // Generate unique ID\r\n  const searchId = useMemo(() => providedId || generateSearchId(), [providedId]);\r\n  \r\n  // Focus management\r\n  const { focus, blur, select } = useFocusManagement(\r\n    combinedRef as React.RefObject<HTMLInputElement>,\r\n    autoFocus\r\n  );\r\n\r\n  // Map search sizes to icon sizes\r\n  const getIconSize = (searchSize: typeof size): 'xs' | 'sm' | 'md' | 'lg' | 'xl' => {\r\n    const iconSizeMap = {\r\n      xs: 'sm' as const,\r\n      sm: 'sm' as const,\r\n      md: 'md' as const,\r\n      lg: 'md' as const,\r\n      xl: 'lg' as const,\r\n    };\r\n    return iconSizeMap[searchSize];\r\n  };\r\n\r\n  const iconSize = getIconSize(size);\r\n  \r\n  // Focus state\r\n  const [isFocused, setIsFocused] = useState(false);\r\n  \r\n  // Debounced search callback\r\n  const debouncedSearch = useCallback((searchValue: string) => {\r\n    onChange?.(searchValue);\r\n  }, [onChange]);\r\n  \r\n  // Use debounce hook (if available)\r\n  // useDebounce(debouncedSearch, debounceDelay, value);\r\n  \r\n  // Handle value change\r\n  const handleValueChange = useCallback(\r\n    (newValue: string) => {\r\n      if (!isControlled) {\r\n        setInternalValue(newValue);\r\n      }\r\n      // Call onChange immediately for controlled components\r\n      if (isControlled) {\r\n        onChange?.(newValue);\r\n      }\r\n    },\r\n    [isControlled, onChange]\r\n  );\r\n  \r\n  // Event handlers\r\n  const handleInputChange = useCallback(\r\n    (event: React.ChangeEvent<HTMLInputElement>) => {\r\n      const newValue = event.target.value;\r\n      handleValueChange(newValue);\r\n    },\r\n    [handleValueChange]\r\n  );\r\n  \r\n  // Extract event handlers from formProps  \r\n  const { onKeyDown: originalOnKeyDown, onFocus: originalOnFocus, onBlur: originalOnBlur } = formProps;\r\n  \r\n  const handleKeyDown = useCallback(\r\n    (event: React.KeyboardEvent<HTMLInputElement>) => {\r\n      if (event.key === 'Enter' && onSearch) {\r\n        onSearch(value);\r\n      } else if (event.key === 'Escape' && clearOnEscape) {\r\n        handleValueChange('');\r\n        onClear?.();\r\n      }\r\n      originalOnKeyDown?.(event);\r\n    },\r\n    [value, onSearch, clearOnEscape, handleValueChange, onClear, originalOnKeyDown]\r\n  );\r\n  \r\n  const handleFocus = useCallback(\r\n    (event: React.FocusEvent<HTMLInputElement>) => {\r\n      setIsFocused(true);\r\n      originalOnFocus?.(event);\r\n    },\r\n    [originalOnFocus]\r\n  );\r\n  \r\n  const handleBlur = useCallback(\r\n    (event: React.FocusEvent<HTMLInputElement>) => {\r\n      setIsFocused(false);\r\n      originalOnBlur?.(event);\r\n    },\r\n    [originalOnBlur]\r\n  );\r\n  \r\n  const handleSearchClick = useCallback(() => {\r\n    if (onSearch) {\r\n      onSearch(value);\r\n    }\r\n    focus();\r\n  }, [value, onSearch, focus]);\r\n  \r\n  const handleClearIconClick = useCallback(() => {\r\n    handleValueChange('');\r\n    onClear?.();\r\n    focus();\r\n  }, [handleValueChange, onClear, focus]);\r\n  \r\n  // Handle legacy rounded prop\r\n  const finalShape = rounded !== undefined ? (rounded ? 'pill' : 'round') : shape;\r\n  \r\n  // Generate styles using new styling functions\r\n  const containerStyles = useMemo(() => getSearchContainerStyles(\r\n    size,\r\n    variant,\r\n    color,\r\n    customColor,\r\n    finalShape,\r\n    Boolean(disabled),\r\n    isFocused,\r\n    Boolean(error),\r\n    animationsEnabled,\r\n    cssVars,\r\n    width\r\n  ), [size, variant, color, customColor, finalShape, disabled, isFocused, error, animationsEnabled, cssVars, width]);\r\n\r\n  const inputStyles = useMemo(() => getSearchInputStyles(\r\n    size,\r\n    variant,\r\n    color,\r\n    customColor,\r\n    Boolean(disabled),\r\n    showSearchIcon && searchIconPosition === 'left',\r\n    showClearButton && Boolean(value),\r\n    cssVars\r\n  ), [size, variant, color, customColor, disabled, showSearchIcon, searchIconPosition, showClearButton, value, cssVars]);\r\n\r\n  const searchIconStyles = useMemo(() => getSearchIconStyles(\r\n    size,\r\n    searchIconPosition,\r\n    variant,\r\n    color,\r\n    customColor,\r\n    Boolean(disabled),\r\n    true, // clickable\r\n    animationsEnabled,\r\n    cssVars\r\n  ), [size, searchIconPosition, variant, color, customColor, disabled, animationsEnabled, cssVars]);\r\n\r\n  const clearIconStyles = useMemo(() => getSearchIconStyles(\r\n    size,\r\n    'right',\r\n    variant,\r\n    color,\r\n    customColor,\r\n    Boolean(disabled),\r\n    true, // clickable\r\n    animationsEnabled,\r\n    cssVars\r\n  ), [size, variant, color, customColor, disabled, animationsEnabled, cssVars]);\r\n\r\n  const loadingStyles = useMemo(() => getLoadingStyles(\r\n    size,\r\n    animationsEnabled\r\n  ), [size, animationsEnabled]);\r\n\r\n  const combinedStyles: React.CSSProperties = {\r\n    ...containerStyles,\r\n    ...style,\r\n  };\r\n  \r\n  // Accessibility props\r\n  const accessibilityProps = {\r\n    'aria-label': label,\r\n    'aria-invalid': Boolean(error),\r\n    'aria-required': Boolean(required),\r\n    'aria-disabled': Boolean(disabled),\r\n  };\r\n  \r\n  return (\r\n    <div\r\n      className={className}\r\n      style={combinedStyles}\r\n      data-testid={dataTestId}\r\n    >\r\n      {/* Search icon on left */}\r\n      {showSearchIcon && searchIconPosition === 'left' && (\r\n        <button\r\n          type=\"button\"\r\n          onClick={handleSearchClick}\r\n          disabled={disabled}\r\n          style={searchIconStyles}\r\n          tabIndex={-1}\r\n          aria-label=\"Search\"\r\n        >\r\n          {loading ? (\r\n            <div style={loadingStyles}>\r\n              <Icon name=\"Refresh\" size={iconSize} />\r\n            </div>\r\n          ) : searchIcon ? (\r\n            searchIcon\r\n          ) : (\r\n            <Icon name=\"Search\" size={iconSize} />\r\n          )}\r\n        </button>\r\n      )}\r\n      \r\n      {/* Input */}\r\n      <input\r\n        ref={combinedRef}\r\n        type=\"text\"\r\n        id={searchId}\r\n        name={name}\r\n        value={value}\r\n        onChange={handleInputChange}\r\n        onKeyDown={handleKeyDown}\r\n        onFocus={handleFocus}\r\n        onBlur={handleBlur}\r\n        placeholder={placeholder}\r\n        disabled={disabled}\r\n        required={required}\r\n        readOnly={readOnly}\r\n        autoComplete={autoComplete}\r\n        autoFocus={autoFocus}\r\n        style={inputStyles}\r\n        {...accessibilityProps}\r\n        {...rest}\r\n      />\r\n      \r\n      {/* Clear button */}\r\n      {showClearButton && value && !loading && (\r\n        <button\r\n          type=\"button\"\r\n          onClick={handleClearIconClick}\r\n          disabled={disabled}\r\n          style={clearIconStyles}\r\n          tabIndex={-1}\r\n          aria-label=\"Clear search\"\r\n        >\r\n          {clearIcon ? (\r\n            clearIcon\r\n          ) : (\r\n            <Icon name=\"Cancel\" size={iconSize} />\r\n          )}\r\n        </button>\r\n      )}\r\n      \r\n      {/* Search icon on right */}\r\n      {showSearchIcon && searchIconPosition === 'right' && (!showClearButton || !value) && (\r\n        <button\r\n          type=\"button\"\r\n          onClick={handleSearchClick}\r\n          disabled={disabled}\r\n          style={searchIconStyles}\r\n          tabIndex={-1}\r\n          aria-label=\"Search\"\r\n        >\r\n          {loading ? (\r\n            <div style={loadingStyles}>\r\n              <Icon name=\"Refresh\" size={iconSize} />\r\n            </div>\r\n          ) : searchIcon ? (\r\n            searchIcon\r\n          ) : (\r\n            <Icon name=\"Search\" size={iconSize} />\r\n          )}\r\n        </button>\r\n      )}\r\n    </div>\r\n  );\r\n});\r\n\r\nSearch.displayName = 'Search';","import React from 'react';\r\nimport type { FilePickerColor, FilePickerVariant, FilePickerSize, FilePickerShape } from './FilePicker.types';\r\n\r\n// Get color variables based on color prop\r\nexport const getColorVariables = (color: FilePickerColor, customColor: string | undefined, cssVars: any) => {\r\n  if (color === 'custom' && customColor) {\r\n    return {\r\n      main: customColor,\r\n      foreground: '#ffffff',\r\n      background: customColor + '10',\r\n      border: customColor,\r\n      hover: customColor + '20',\r\n    };\r\n  }\r\n\r\n  // Safety check for cssVars\r\n  if (!cssVars) {\r\n    console.warn('cssVars is undefined in FilePicker getColorVariables');\r\n    return {\r\n      main: '#000',\r\n      background: '#f0f0f0',\r\n      foreground: '#fff',\r\n      hover: '#333',\r\n      border: '#ccc',\r\n    };\r\n  }\r\n\r\n  const colorMap: Record<string, any> = {\r\n    primary: {\r\n      main: cssVars.primary,\r\n      background: cssVars.primaryBackground,\r\n      foreground: cssVars.primaryForeground,\r\n      hover: cssVars.primaryHover,\r\n      border: cssVars.primaryBorder,\r\n    },\r\n    secondary: {\r\n      main: cssVars.secondary,\r\n      background: cssVars.secondaryBackground,\r\n      foreground: cssVars.secondaryForeground,\r\n      hover: cssVars.secondaryHover,\r\n      border: cssVars.secondaryBorder,\r\n    },\r\n    success: {\r\n      main: cssVars.success,\r\n      background: cssVars.successBackground,\r\n      foreground: cssVars.successForeground,\r\n      hover: cssVars.successHover,\r\n      border: cssVars.successBorder,\r\n    },\r\n    warning: {\r\n      main: cssVars.warning,\r\n      background: cssVars.warningBackground,\r\n      foreground: cssVars.warningForeground,\r\n      hover: cssVars.warningHover,\r\n      border: cssVars.warningBorder,\r\n    },\r\n    destructive: {\r\n      main: cssVars.destructive,\r\n      background: cssVars.destructiveBackground,\r\n      foreground: cssVars.destructiveForeground,\r\n      hover: cssVars.destructiveHover,\r\n      border: cssVars.destructiveBorder,\r\n    },\r\n    info: {\r\n      main: cssVars.info,\r\n      background: cssVars.infoBackground,\r\n      foreground: cssVars.infoForeground,\r\n      hover: cssVars.infoHover,\r\n      border: cssVars.infoBorder,\r\n    },\r\n  };\r\n\r\n  return colorMap[color] || colorMap.primary;\r\n};\r\n\r\n// Get shape styles based on shape prop\r\nexport const getShapeStyles = (shape: FilePickerShape): React.CSSProperties => {\r\n  switch (shape) {\r\n    case 'sharp':\r\n      return { borderRadius: '0' };\r\n    case 'round':\r\n      return { borderRadius: '12px' };\r\n    case 'pill':\r\n      return { borderRadius: '24px' };\r\n    default:\r\n      return { borderRadius: '12px' };\r\n  }\r\n};\r\n\r\n// Get size configuration\r\nexport const getSizeConfig = (size: FilePickerSize) => {\r\n  const configs = {\r\n    xs: {\r\n      minHeight: '100px',\r\n      padding: '12px',\r\n      fontSize: '12px',\r\n      iconSize: '20px',\r\n    },\r\n    sm: {\r\n      minHeight: '120px',\r\n      padding: '16px',\r\n      fontSize: '14px',\r\n      iconSize: '24px',\r\n    },\r\n    md: {\r\n      minHeight: '160px',\r\n      padding: '20px',\r\n      fontSize: '16px',\r\n      iconSize: '32px',\r\n    },\r\n    lg: {\r\n      minHeight: '200px',\r\n      padding: '24px',\r\n      fontSize: '18px',\r\n      iconSize: '40px',\r\n    },\r\n    xl: {\r\n      minHeight: '240px',\r\n      padding: '28px',\r\n      fontSize: '20px',\r\n      iconSize: '48px',\r\n    },\r\n  };\r\n\r\n  return configs[size];\r\n};\r\n\r\n// Container styles\r\nexport const createFilePickerContainerStyles = (\r\n  shape: FilePickerShape,\r\n  width: string | number | undefined,\r\n  height: string | number | undefined,\r\n  animationsEnabled: boolean,\r\n  // Legacy support\r\n  rounded?: boolean\r\n): React.CSSProperties => {\r\n  // Handle legacy rounded prop\r\n  const finalShape = rounded !== undefined ? (rounded ? 'pill' : 'round') : shape;\r\n  \r\n  return {\r\n    position: 'relative',\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    width: width || 'auto',\r\n    height: height || 'auto',\r\n    minWidth: '300px',\r\n    transition: animationsEnabled \r\n      ? 'border-color var(--duration-fast) var(--animation-smooth), background-color var(--duration-fast) var(--animation-smooth)'\r\n      : 'none',\r\n    ...getShapeStyles(finalShape),\r\n  };\r\n};\r\n\r\n// Drop zone styles\r\nexport const getFilePickerDropZoneStyles = (\r\n  color: FilePickerColor,\r\n  customColor: string | undefined,\r\n  variant: FilePickerVariant,\r\n  size: FilePickerSize,\r\n  shape: FilePickerShape,\r\n  disabled: boolean,\r\n  error: boolean,\r\n  isDragActive: boolean,\r\n  animationsEnabled: boolean,\r\n  cssVars: any,\r\n  // Legacy support\r\n  rounded?: boolean\r\n): any => {\r\n  const colors = getColorVariables(color, customColor, cssVars);\r\n  const sizeConfig = getSizeConfig(size);\r\n\r\n  // Handle legacy rounded prop\r\n  const finalShape = rounded !== undefined ? (rounded ? 'pill' : 'round') : shape;\r\n\r\n  // Base styles\r\n  const baseStyles: React.CSSProperties = {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    minHeight: sizeConfig.minHeight,\r\n    padding: sizeConfig.padding,\r\n    borderWidth: '2px',\r\n    borderStyle: 'dashed',\r\n    cursor: disabled ? 'not-allowed' : 'pointer',\r\n    textAlign: 'center',\r\n    transition: animationsEnabled\r\n      ? 'all var(--duration-fast) var(--animation-smooth)'\r\n      : 'none',\r\n    position: 'relative',\r\n    fontSize: sizeConfig.fontSize,\r\n    ...getShapeStyles(finalShape),\r\n  };\r\n\r\n  // Variant styles with error state override\r\n  const variantStyles = (() => {\r\n    if (error) {\r\n      return {\r\n        borderColor: cssVars.destructive,\r\n        backgroundColor: cssVars.destructiveBackground,\r\n        color: cssVars.destructive,\r\n      };\r\n    }\r\n\r\n    if (isDragActive) {\r\n      return {\r\n        borderColor: colors.main,\r\n        backgroundColor: colors.background,\r\n        color: colors.main,\r\n        borderStyle: 'solid',\r\n      };\r\n    }\r\n\r\n    switch (variant) {\r\n      case 'solid':\r\n        return {\r\n          borderColor: colors.main,\r\n          backgroundColor: colors.main,\r\n          color: colors.foreground,\r\n        };\r\n      case 'ghost':\r\n        return {\r\n          borderColor: 'transparent',\r\n          backgroundColor: 'transparent',\r\n          color: colors.main,\r\n        };\r\n      case 'glassmorphic':\r\n        // Create reflection gradient lines using the hover color with transparency\r\n        const reflectionColor = colors.hover || colors.main || '#ffffff';\r\n        const topReflectionGradient = `linear-gradient(135deg, transparent 0%, ${reflectionColor}20 20%, ${reflectionColor}15 25%, transparent 35%)`;\r\n        const bottomReflectionGradient = `linear-gradient(135deg, transparent 45%, ${reflectionColor}25 55%, ${reflectionColor}20 65%, transparent 80%)`;\r\n\r\n        return {\r\n          background: `\r\n            ${topReflectionGradient},\r\n            ${bottomReflectionGradient},\r\n            rgba(255, 255, 255, 0.1)\r\n          `,\r\n          backdropFilter: 'blur(10px)',\r\n          WebkitBackdropFilter: 'blur(10px)', // Safari support\r\n          color: colors.main,\r\n          borderWidth: '2px',\r\n          borderStyle: 'solid',\r\n          borderTopColor: 'rgba(255, 255, 255, 0.2)',\r\n          borderRightColor: 'rgba(255, 255, 255, 0.2)',\r\n          borderBottomColor: 'rgba(255, 255, 255, 0.2)',\r\n          borderLeftColor: 'rgba(255, 255, 255, 0.2)',\r\n          boxShadow: `0 8px 32px 0 ${colors.main}40`, // Colored shadow for glowing effect\r\n          position: 'relative',\r\n          overflow: 'hidden',\r\n        };\r\n      case 'outline':\r\n      default:\r\n        return {\r\n          borderColor: colors.border || cssVars.border,\r\n          backgroundColor: cssVars.background,\r\n          color: cssVars.foreground,\r\n        };\r\n    }\r\n  })();\r\n\r\n  // Disabled styles\r\n  if (disabled) {\r\n    baseStyles.opacity = 0.6;\r\n    baseStyles.backgroundColor = cssVars.muted;\r\n    baseStyles.color = cssVars.mutedForeground;\r\n    baseStyles.borderColor = cssVars.border;\r\n  }\r\n\r\n  return {\r\n    ...baseStyles,\r\n    ...variantStyles,\r\n  };\r\n};\r\n\r\n// Icon styles\r\nexport const getIconStyles = (\r\n  size: FilePickerSize,\r\n  cssVars: any\r\n): React.CSSProperties => {\r\n  const sizeConfig = getSizeConfig(size);\r\n  \r\n  return {\r\n    fontSize: sizeConfig.iconSize,\r\n    marginBottom: '12px',\r\n    opacity: 0.7,\r\n    color: 'currentColor',\r\n  };\r\n};\r\n\r\n// Text styles\r\nexport const getUploadTextStyles = (\r\n  size: FilePickerSize,\r\n  cssVars: any\r\n): React.CSSProperties => {\r\n  const sizeConfig = getSizeConfig(size);\r\n  \r\n  return {\r\n    fontSize: sizeConfig.fontSize,\r\n    fontWeight: 500,\r\n    marginBottom: '4px',\r\n    color: 'currentColor',\r\n  };\r\n};\r\n\r\n// Sub text styles\r\nexport const getSubTextStyles = (\r\n  size: FilePickerSize,\r\n  cssVars: any\r\n): React.CSSProperties => {\r\n  const fontSizeMap = {\r\n    xs: '10px',\r\n    sm: '12px',\r\n    md: '14px',\r\n    lg: '16px',\r\n    xl: '18px',\r\n  };\r\n  \r\n  return {\r\n    fontSize: fontSizeMap[size],\r\n    color: cssVars.mutedForeground,\r\n    marginBottom: '8px',\r\n  };\r\n};\r\n\r\n// Helper text styles\r\nexport const getHelperTextStyles = (\r\n  size: FilePickerSize,\r\n  disabled: boolean,\r\n  error: boolean,\r\n  cssVars: any\r\n): React.CSSProperties => {\r\n  const fontSizeMap = {\r\n    xs: '10px',\r\n    sm: '12px',\r\n    md: '14px',\r\n    lg: '16px',\r\n    xl: '18px',\r\n  };\r\n  \r\n  return {\r\n    fontSize: fontSizeMap[size],\r\n    color: disabled \r\n      ? cssVars.mutedForeground \r\n      : error \r\n        ? cssVars.destructive \r\n        : cssVars.mutedForeground,\r\n    marginTop: '8px',\r\n    textAlign: 'left',\r\n  };\r\n};\r\n\r\n// File list styles\r\nexport const getFileListStyles = (): React.CSSProperties => ({\r\n  marginTop: '16px',\r\n  display: 'flex',\r\n  flexDirection: 'column',\r\n  gap: '8px',\r\n});\r\n\r\n// File item styles\r\nexport const getFileItemStyles = (\r\n  color: FilePickerColor,\r\n  customColor: string | undefined,\r\n  variant: FilePickerVariant,\r\n  size: FilePickerSize,\r\n  shape: FilePickerShape,\r\n  disabled: boolean,\r\n  animationsEnabled: boolean,\r\n  cssVars: any,\r\n  // Legacy support\r\n  rounded?: boolean\r\n): React.CSSProperties => {\r\n  const colors = getColorVariables(color, customColor, cssVars);\r\n  const sizeConfig = getSizeConfig(size);\r\n\r\n  // Handle legacy rounded prop\r\n  const finalShape = rounded !== undefined ? (rounded ? 'pill' : 'round') : shape;\r\n\r\n  const baseStyles: React.CSSProperties = {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'space-between',\r\n    padding: '8px 12px',\r\n    fontSize: sizeConfig.fontSize,\r\n    maxWidth: '400px',\r\n    width: '100%',\r\n    transition: animationsEnabled\r\n      ? 'background-color var(--duration-fast) var(--animation-smooth)'\r\n      : 'none',\r\n    ...getShapeStyles(finalShape),\r\n  };\r\n\r\n  const variantStyles = (() => {\r\n    switch (variant) {\r\n      case 'solid':\r\n        return {\r\n          backgroundColor: cssVars.muted,\r\n          color: cssVars.foreground,\r\n          border: `1px solid ${cssVars.border}`,\r\n        };\r\n      case 'ghost':\r\n        return {\r\n          backgroundColor: colors.background,\r\n          color: colors.main,\r\n          border: `1px solid ${colors.background}`,\r\n        };\r\n      case 'glassmorphic':\r\n        return {\r\n          backgroundColor: colors.background,\r\n          color: colors.main,\r\n          border: `1px solid ${colors.border || colors.main}`,\r\n        };\r\n      case 'outline':\r\n      default:\r\n        return {\r\n          backgroundColor: cssVars.muted,\r\n          color: cssVars.foreground,\r\n          border: `1px solid ${cssVars.border}`,\r\n        };\r\n    }\r\n  })();\r\n\r\n  if (disabled) {\r\n    baseStyles.opacity = 0.6;\r\n  }\r\n\r\n  return {\r\n    ...baseStyles,\r\n    ...variantStyles,\r\n  };\r\n};\r\n\r\n// File info styles\r\nexport const getFileInfoStyles = (): React.CSSProperties => ({\r\n  display: 'flex',\r\n  alignItems: 'center',\r\n  gap: '8px',\r\n  minWidth: 0,\r\n  flex: 1,\r\n});\r\n\r\n// File name styles\r\nexport const getFileNameStyles = (cssVars: any): React.CSSProperties => ({\r\n  fontWeight: 500,\r\n  color: 'currentColor',\r\n  overflow: 'hidden',\r\n  textOverflow: 'ellipsis',\r\n  whiteSpace: 'nowrap',\r\n});\r\n\r\n// File size styles\r\nexport const getFileSizeStyles = (cssVars: any): React.CSSProperties => ({\r\n  fontSize: '0.875em',\r\n  color: cssVars.mutedForeground,\r\n  flexShrink: 0,\r\n});\r\n\r\n\r\n// Hidden input styles\r\nexport const getHiddenInputStyles = (): React.CSSProperties => ({\r\n  position: 'absolute',\r\n  width: '1px',\r\n  height: '1px',\r\n  padding: 0,\r\n  margin: '-1px',\r\n  overflow: 'hidden',\r\n  clip: 'rect(0, 0, 0, 0)',\r\n  whiteSpace: 'nowrap',\r\n  border: 0,\r\n});\r\n\r\n// Progress bar styles (for future upload progress feature)\r\nexport const getProgressBarStyles = (\r\n  progress: number,\r\n  color: FilePickerColor,\r\n  customColor: string | undefined,\r\n  cssVars: any\r\n): React.CSSProperties => {\r\n  const colors = getColorVariables(color, customColor, cssVars);\r\n  \r\n  return {\r\n    width: '100%',\r\n    height: '4px',\r\n    backgroundColor: cssVars.muted,\r\n    borderRadius: '2px',\r\n    overflow: 'hidden',\r\n    marginTop: '8px',\r\n    position: 'relative',\r\n    // ::after pseudo-element styles handled separately\r\n  };\r\n};","import React from 'react';\r\n\r\n// Format file size in human readable format\r\nexport const formatFileSize = (bytes: number): string => {\r\n  if (bytes === 0) return '0 Bytes';\r\n  \r\n  const k = 1024;\r\n  const sizes = ['Bytes', 'KB', 'MB', 'GB'];\r\n  const i = Math.floor(Math.log(bytes) / Math.log(k));\r\n  \r\n  return parseFloat((bytes / Math.pow(k, i)).toFixed(1)) + ' ' + sizes[i];\r\n};\r\n\r\n// Get file extension from filename\r\nexport const getFileExtension = (filename: string): string => {\r\n  return filename.slice((filename.lastIndexOf('.') - 1 >>> 0) + 2);\r\n};\r\n\r\n// Validate file type against accept string\r\nexport const isFileTypeAccepted = (file: File, accept?: string): boolean => {\r\n  if (!accept) return true;\r\n  \r\n  const acceptedTypes = accept.split(',').map(type => type.trim());\r\n  \r\n  return acceptedTypes.some(acceptedType => {\r\n    if (acceptedType.startsWith('.')) {\r\n      // File extension check\r\n      return file.name.toLowerCase().endsWith(acceptedType.toLowerCase());\r\n    } else if (acceptedType.includes('*')) {\r\n      // MIME type with wildcard (e.g., \"image/*\")\r\n      const [mainType] = acceptedType.split('/');\r\n      return file.type.startsWith(mainType);\r\n    } else {\r\n      // Exact MIME type check\r\n      return file.type === acceptedType;\r\n    }\r\n  });\r\n};\r\n\r\n// Validate file size\r\nexport const isFileSizeValid = (file: File, maxSize?: number): boolean => {\r\n  if (!maxSize) return true;\r\n  return file.size <= maxSize;\r\n};\r\n\r\n// Validate total number of files\r\nexport const isFileCountValid = (files: File[], maxFiles?: number): boolean => {\r\n  if (!maxFiles) return true;\r\n  return files.length <= maxFiles;\r\n};\r\n\r\n// Process dropped files\r\nexport const processDroppedFiles = (\r\n  items: DataTransferItemList,\r\n  accept?: string,\r\n  maxSize?: number,\r\n  maxFiles?: number,\r\n  multiple: boolean = false\r\n): { validFiles: File[]; errors: string[] } => {\r\n  const files: File[] = [];\r\n  const errors: string[] = [];\r\n\r\n  // Convert DataTransferItemList to File array\r\n  Array.from(items).forEach(item => {\r\n    if (item.kind === 'file') {\r\n      const file = item.getAsFile();\r\n      if (file) {\r\n        files.push(file);\r\n      }\r\n    }\r\n  });\r\n\r\n  // Filter files if not multiple\r\n  const filesToProcess = multiple ? files : files.slice(0, 1);\r\n\r\n  // Validate each file\r\n  const validFiles: File[] = [];\r\n  \r\n  filesToProcess.forEach(file => {\r\n    // Check file type\r\n    if (!isFileTypeAccepted(file, accept)) {\r\n      errors.push(`\"${file.name}\" is not an accepted file type.`);\r\n      return;\r\n    }\r\n\r\n    // Check file size\r\n    if (!isFileSizeValid(file, maxSize)) {\r\n      errors.push(`\"${file.name}\" is too large. Maximum size is ${formatFileSize(maxSize!)}.`);\r\n      return;\r\n    }\r\n\r\n    validFiles.push(file);\r\n  });\r\n\r\n  // Check total file count\r\n  if (!isFileCountValid(validFiles, maxFiles)) {\r\n    errors.push(`Too many files. Maximum allowed is ${maxFiles}.`);\r\n    return { validFiles: [], errors };\r\n  }\r\n\r\n  return { validFiles, errors };\r\n};\r\n\r\n// Handle file input change\r\nexport const handleFileInputChange = (\r\n  event: React.ChangeEvent<HTMLInputElement>,\r\n  accept?: string,\r\n  maxSize?: number,\r\n  maxFiles?: number,\r\n  multiple: boolean = false\r\n): { validFiles: File[]; errors: string[] } => {\r\n  const files = Array.from(event.target.files || []);\r\n  const errors: string[] = [];\r\n\r\n  // Filter files if not multiple\r\n  const filesToProcess = multiple ? files : files.slice(0, 1);\r\n\r\n  // Validate each file\r\n  const validFiles: File[] = [];\r\n  \r\n  filesToProcess.forEach(file => {\r\n    // Check file type\r\n    if (!isFileTypeAccepted(file, accept)) {\r\n      errors.push(`\"${file.name}\" is not an accepted file type.`);\r\n      return;\r\n    }\r\n\r\n    // Check file size\r\n    if (!isFileSizeValid(file, maxSize)) {\r\n      errors.push(`\"${file.name}\" is too large. Maximum size is ${formatFileSize(maxSize!)}.`);\r\n      return;\r\n    }\r\n\r\n    validFiles.push(file);\r\n  });\r\n\r\n  // Check total file count\r\n  if (!isFileCountValid(validFiles, maxFiles)) {\r\n    errors.push(`Too many files. Maximum allowed is ${maxFiles}.`);\r\n    return { validFiles: [], errors };\r\n  }\r\n\r\n  return { validFiles, errors };\r\n};\r\n\r\n// Custom hook for drag and drop functionality\r\nexport const useDragAndDrop = (\r\n  onFilesChange?: (files: File[]) => void,\r\n  onError?: (error: string) => void,\r\n  accept?: string,\r\n  maxSize?: number,\r\n  maxFiles?: number,\r\n  multiple: boolean = false,\r\n  disabled: boolean = false\r\n) => {\r\n  const [isDragActive, setIsDragActive] = React.useState(false);\r\n  const dragCounter = React.useRef(0);\r\n\r\n  const handleDragEnter = React.useCallback((e: React.DragEvent) => {\r\n    e.preventDefault();\r\n    e.stopPropagation();\r\n    \r\n    if (disabled) return;\r\n    \r\n    dragCounter.current++;\r\n    \r\n    if (e.dataTransfer.items && e.dataTransfer.items.length > 0) {\r\n      setIsDragActive(true);\r\n    }\r\n  }, [disabled]);\r\n\r\n  const handleDragLeave = React.useCallback((e: React.DragEvent) => {\r\n    e.preventDefault();\r\n    e.stopPropagation();\r\n    \r\n    if (disabled) return;\r\n    \r\n    dragCounter.current--;\r\n    \r\n    if (dragCounter.current === 0) {\r\n      setIsDragActive(false);\r\n    }\r\n  }, [disabled]);\r\n\r\n  const handleDragOver = React.useCallback((e: React.DragEvent) => {\r\n    e.preventDefault();\r\n    e.stopPropagation();\r\n    \r\n    if (disabled) return;\r\n    \r\n    e.dataTransfer.dropEffect = 'copy';\r\n  }, [disabled]);\r\n\r\n  const handleDrop = React.useCallback((e: React.DragEvent) => {\r\n    e.preventDefault();\r\n    e.stopPropagation();\r\n    \r\n    if (disabled) return;\r\n    \r\n    setIsDragActive(false);\r\n    dragCounter.current = 0;\r\n\r\n    if (e.dataTransfer.items) {\r\n      const { validFiles, errors } = processDroppedFiles(\r\n        e.dataTransfer.items,\r\n        accept,\r\n        maxSize,\r\n        maxFiles,\r\n        multiple\r\n      );\r\n\r\n      if (errors.length > 0) {\r\n        onError?.(errors.join(' '));\r\n      }\r\n\r\n      if (validFiles.length > 0) {\r\n        onFilesChange?.(validFiles);\r\n      }\r\n    }\r\n  }, [disabled, accept, maxSize, maxFiles, multiple, onFilesChange, onError]);\r\n\r\n  return {\r\n    isDragActive,\r\n    dragProps: {\r\n      onDragEnter: handleDragEnter,\r\n      onDragLeave: handleDragLeave,\r\n      onDragOver: handleDragOver,\r\n      onDrop: handleDrop,\r\n    },\r\n  };\r\n};\r\n\r\n// Generate unique ID for file picker\r\nexport const generateFilePickerId = (): string => {\r\n  return `filepicker-${Math.random().toString(36).substr(2, 9)}`;\r\n};\r\n\r\n// Create accessibility props\r\nexport const createFilePickerAccessibilityProps = (\r\n  id: string,\r\n  disabled: boolean,\r\n  error: boolean,\r\n  accept?: string,\r\n  multiple?: boolean\r\n) => {\r\n  const acceptDescription = accept ? ` Accepted file types: ${accept}.` : '';\r\n  const multipleDescription = multiple ? ' You can select multiple files.' : ' You can select one file.';\r\n  \r\n  return {\r\n    role: 'button',\r\n    tabIndex: disabled ? -1 : 0,\r\n    'aria-disabled': disabled,\r\n    'aria-invalid': error,\r\n    'aria-describedby': `${id}-description`,\r\n    'aria-label': `File upload area.${acceptDescription}${multipleDescription} Click to browse or drag and drop files here.`,\r\n  };\r\n};\r\n","import React, { forwardRef, useRef, useImperativeHandle } from 'react';\r\nimport { Icon } from '../Icon';\r\nimport { Button } from '../Button';\r\nimport { useCSSVariables } from '@/app/providers';\r\nimport { extractFormProps, UNIVERSAL_DEFAULTS } from '../types';\r\nimport { FilePickerProps, FilePickerRef } from './FilePicker.types';\r\nimport {\r\n  createFilePickerContainerStyles,\r\n  getFilePickerDropZoneStyles,\r\n  getIconStyles,\r\n  getUploadTextStyles,\r\n  getSubTextStyles,\r\n  getHelperTextStyles,\r\n  getFileListStyles,\r\n  getFileItemStyles,\r\n  getFileInfoStyles,\r\n  getFileNameStyles,\r\n  getFileSizeStyles,\r\n  getHiddenInputStyles\r\n} from './FilePicker.styles';\r\nimport { \r\n  useDragAndDrop, \r\n  handleFileInputChange, \r\n  formatFileSize, \r\n  generateFilePickerId,\r\n  createFilePickerAccessibilityProps \r\n} from './FilePicker.utils';\r\n\r\nexport const FilePicker = forwardRef<FilePickerRef, FilePickerProps>((allProps, ref) => {\r\n  // Extract form props and component-specific props\r\n  const [formProps, componentProps] = extractFormProps(allProps);\r\n  \r\n  // Destructure form props with defaults\r\n  const {\r\n    color = UNIVERSAL_DEFAULTS.color,\r\n    customColor,\r\n    variant = UNIVERSAL_DEFAULTS.variant,\r\n    shape = UNIVERSAL_DEFAULTS.shape,\r\n    size = UNIVERSAL_DEFAULTS.size,\r\n    disabled = UNIVERSAL_DEFAULTS.disabled,\r\n    loading = UNIVERSAL_DEFAULTS.loading,\r\n    loadingKey,\r\n    width,\r\n    height,\r\n    className,\r\n    style,\r\n    id,\r\n    'data-testid': dataTestId,\r\n    animate = UNIVERSAL_DEFAULTS.animate,\r\n    rounded, // Legacy support\r\n    helperText,\r\n    errorText,\r\n    error,\r\n  } = formProps;\r\n  \r\n  // Destructure component-specific props\r\n  const {\r\n    accept,\r\n    maxSize,\r\n    maxFiles,\r\n    uploadText,\r\n    subText,\r\n    icon,\r\n    onFilesChange,\r\n    onError,\r\n    files,\r\n    showFileList = true,\r\n    ...restProps\r\n  } = componentProps;\r\n\r\n  // Determine multiple based on maxFiles\r\n  const multiple = maxFiles !== 1;\r\n  \r\n  const cssVars = useCSSVariables();\r\n  const animationsEnabled = animate;\r\n\r\n  // Don't render if cssVars is not ready\r\n  if (!cssVars) {\r\n    return null;\r\n  }\r\n  const [internalFiles, setInternalFiles] = React.useState<File[]>([]);\r\n  const [internalError, setInternalError] = React.useState<string>('');\r\n  const fileInputRef = useRef<HTMLInputElement>(null);\r\n  const filePickerId = React.useMemo(() => id || generateFilePickerId(), [id]);\r\n\r\n  // Use controlled or uncontrolled files\r\n  const currentFiles = files !== undefined ? files : internalFiles;\r\n  const setCurrentFiles = files !== undefined ? \r\n    (newFiles: File[]) => onFilesChange?.(newFiles) : \r\n    setInternalFiles;\r\n\r\n  // Handle error states\r\n  const currentError = errorText || internalError;\r\n  const isError = error || Boolean(currentError);\r\n\r\n  // Expose methods through ref\r\n  useImperativeHandle(ref, () => ({\r\n    clear: () => {\r\n      setCurrentFiles([]);\r\n      setInternalError('');\r\n      if (fileInputRef.current) {\r\n        fileInputRef.current.value = '';\r\n      }\r\n    },\r\n    getFiles: () => currentFiles,\r\n    browse: () => {\r\n      if (!disabled && fileInputRef.current) {\r\n        fileInputRef.current.click();\r\n      }\r\n    }\r\n  }));\r\n\r\n  // Drag and drop functionality\r\n  const { isDragActive, dragProps } = useDragAndDrop(\r\n    (newFiles) => {\r\n      let updatedFiles = multiple ? [...currentFiles, ...newFiles] : newFiles;\r\n\r\n      // Enforce maxFiles limit\r\n      if (maxFiles && updatedFiles.length > maxFiles) {\r\n        updatedFiles = updatedFiles.slice(0, maxFiles);\r\n        const errorMessage = `Maximum ${maxFiles} file${maxFiles > 1 ? 's' : ''} allowed.`;\r\n        setInternalError(errorMessage);\r\n        onError?.(errorMessage);\r\n        // Clear input to allow re-selection\r\n        if (fileInputRef.current) {\r\n          fileInputRef.current.value = '';\r\n        }\r\n      } else {\r\n        setInternalError('');\r\n      }\r\n\r\n      setCurrentFiles(updatedFiles);\r\n    },\r\n    (errorMessage) => {\r\n      setInternalError(errorMessage);\r\n      onError?.(errorMessage);\r\n    },\r\n    accept,\r\n    maxSize,\r\n    maxFiles,\r\n    multiple,\r\n    disabled\r\n  );\r\n\r\n  // Handle file input change\r\n  const handleInputChange = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    const { validFiles, errors } = handleFileInputChange(\r\n      event,\r\n      accept,\r\n      maxSize,\r\n      maxFiles,\r\n      multiple\r\n    );\r\n\r\n    if (errors.length > 0) {\r\n      const errorMessage = errors.join(' ');\r\n      setInternalError(errorMessage);\r\n      onError?.(errorMessage);\r\n      return;\r\n    }\r\n\r\n    let updatedFiles = multiple ? [...currentFiles, ...validFiles] : validFiles;\r\n\r\n    // Enforce maxFiles limit\r\n    if (maxFiles && updatedFiles.length > maxFiles) {\r\n      updatedFiles = updatedFiles.slice(0, maxFiles);\r\n      const errorMessage = `Maximum ${maxFiles} file${maxFiles > 1 ? 's' : ''} allowed.`;\r\n      setInternalError(errorMessage);\r\n      onError?.(errorMessage);\r\n      // Clear input to allow re-selection\r\n      if (fileInputRef.current) {\r\n        fileInputRef.current.value = '';\r\n      }\r\n    } else {\r\n      setInternalError('');\r\n    }\r\n\r\n    setCurrentFiles(updatedFiles);\r\n  };\r\n\r\n  // Handle clicking the drop zone\r\n  const handleDropZoneClick = () => {\r\n    if (!disabled && fileInputRef.current) {\r\n      fileInputRef.current.click();\r\n    }\r\n  };\r\n\r\n  // Handle removing a file\r\n  const handleRemoveFile = (indexToRemove: number) => {\r\n    const updatedFiles = currentFiles.filter((_, index) => index !== indexToRemove);\r\n    setCurrentFiles(updatedFiles);\r\n    setInternalError('');\r\n\r\n    // Always clear the input value to allow re-selection of the same files\r\n    if (fileInputRef.current) {\r\n      fileInputRef.current.value = '';\r\n    }\r\n  };\r\n\r\n  // Handle keyboard navigation\r\n  const handleKeyDown = (event: React.KeyboardEvent) => {\r\n    if (event.key === 'Enter' || event.key === ' ') {\r\n      event.preventDefault();\r\n      handleDropZoneClick();\r\n    }\r\n  };\r\n\r\n  // Create accessibility props\r\n  const accessibilityProps = createFilePickerAccessibilityProps(\r\n    filePickerId,\r\n    disabled,\r\n    isError,\r\n    accept,\r\n    multiple\r\n  );\r\n\r\n  return (\r\n    <div \r\n      className={className} \r\n      style={{\r\n        ...createFilePickerContainerStyles(shape, width, height, animationsEnabled, rounded),\r\n        ...style\r\n      }}\r\n      data-testid={dataTestId}\r\n    >\r\n      {/* Drop Zone */}\r\n      <div\r\n        {...dragProps}\r\n        {...accessibilityProps}\r\n        onClick={handleDropZoneClick}\r\n        onKeyDown={handleKeyDown}\r\n        style={getFilePickerDropZoneStyles(\r\n          color,\r\n          customColor,\r\n          variant,\r\n          size,\r\n          shape,\r\n          disabled,\r\n          isError,\r\n          isDragActive,\r\n          animationsEnabled,\r\n          cssVars,\r\n          rounded\r\n        )}\r\n        {...restProps}\r\n      >\r\n        {/* Icon */}\r\n        <div style={getIconStyles(size, cssVars)}>\r\n          {icon || (\r\n            <Icon \r\n              name=\"CloudUpload\" \r\n              size=\"lg\"\r\n            />\r\n          )}\r\n        </div>\r\n        \r\n        {/* Main upload text */}\r\n        <div style={getUploadTextStyles(size, cssVars)}>\r\n          {isDragActive \r\n            ? 'Drop files here' \r\n            : uploadText || 'Drop files here or click to browse'\r\n          }\r\n        </div>\r\n\r\n        {/* Sub text */}\r\n        {subText && (\r\n          <div style={getSubTextStyles(size, cssVars)}>\r\n            {subText}\r\n          </div>\r\n        )}\r\n      </div>\r\n\r\n      {/* Helper text */}\r\n      {helperText && !isError && (\r\n        <div \r\n          id={`${filePickerId}-description`}\r\n          style={getHelperTextStyles(size, disabled, false, cssVars)}\r\n        >\r\n          {helperText}\r\n        </div>\r\n      )}\r\n\r\n      {/* Hidden file input */}\r\n      <input\r\n        ref={fileInputRef}\r\n        type=\"file\"\r\n        id={filePickerId}\r\n        multiple={multiple}\r\n        accept={accept}\r\n        onChange={handleInputChange}\r\n        style={getHiddenInputStyles()}\r\n        tabIndex={-1}\r\n        aria-hidden=\"true\"\r\n      />\r\n\r\n      {/* Error message */}\r\n      {isError && (\r\n        <div \r\n          id={`${filePickerId}-error`}\r\n          style={getHelperTextStyles(size, disabled, true, cssVars)}\r\n          role=\"alert\"\r\n          aria-live=\"polite\"\r\n        >\r\n          <Icon name=\"WarningCircle\" size=\"sm\" style={{ marginRight: '6px' }} />\r\n          {currentError}\r\n        </div>\r\n      )}\r\n\r\n      {/* File list */}\r\n      {showFileList && currentFiles.length > 0 && (\r\n        <div style={getFileListStyles()}>\r\n          {currentFiles.map((file, index) => (\r\n            <div\r\n              key={`${file.name}-${file.size}-${index}`}\r\n              style={getFileItemStyles(\r\n                color,\r\n                customColor,\r\n                variant,\r\n                size,\r\n                shape,\r\n                disabled,\r\n                animationsEnabled,\r\n                cssVars,\r\n                rounded\r\n              )}\r\n            >\r\n              <div style={getFileInfoStyles()}>\r\n                <Icon \r\n                  name=\"Attachment\" \r\n                  size=\"sm\"\r\n                  style={{ \r\n                    marginRight: '8px',\r\n                    flexShrink: 0\r\n                  }}\r\n                />\r\n                <div style={{ \r\n                  flex: 1,\r\n                  minWidth: 0,\r\n                  display: 'flex',\r\n                  flexDirection: 'column'\r\n                }}>\r\n                  <span style={getFileNameStyles(cssVars)}>\r\n                    {file.name}\r\n                  </span>\r\n                  <span style={getFileSizeStyles(cssVars)}>\r\n                    {formatFileSize(file.size)}\r\n                  </span>\r\n                </div>\r\n              </div>\r\n              \r\n              <Button\r\n                variant=\"ghost\"\r\n                size=\"sm\"\r\n                color={variant === 'outline' || variant === 'solid' ? 'custom' : color}\r\n                customColor={variant === 'outline' || variant === 'solid' ? cssVars.foreground : undefined}\r\n                onClick={(e) => {\r\n                  e.stopPropagation();\r\n                  handleRemoveFile(index);\r\n                }}\r\n                aria-label={`Remove ${file.name}`}\r\n                disabled={disabled}\r\n                animate={animationsEnabled}\r\n                style={{\r\n                  minWidth: 'auto',\r\n                  padding: '4px',\r\n                  borderRadius: '50%',\r\n                  aspectRatio: '1',\r\n                }}\r\n              >\r\n                <Icon\r\n                  name=\"Xmark\"\r\n                  size=\"sm\"\r\n                />\r\n              </Button>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n});\r\n\r\nFilePicker.displayName = 'FilePicker';\r\n","import { CSSProperties } from 'react';\r\nimport { RadioButtonSize, RadioButtonColor, RadioButtonShape, RadioButtonVariant } from './RadioButton.types';\r\n\r\n// Get color variables based on color prop\r\nexport const getColorVariables = (color: RadioButtonColor, customColor: string | undefined, cssVars: any) => {\r\n  if (color === 'custom' && customColor) {\r\n    return {\r\n      main: customColor,\r\n      foreground: '#ffffff',\r\n      background: customColor + '10',\r\n      border: customColor,\r\n      hover: customColor + '20',\r\n    };\r\n  }\r\n\r\n  const colorMap: Record<string, any> = {\r\n    primary: {\r\n      main: cssVars.primary,\r\n      background: cssVars.primaryBackground,\r\n      foreground: cssVars.primaryForeground,\r\n      hover: cssVars.primaryHover,\r\n      border: cssVars.primaryBorder,\r\n    },\r\n    secondary: {\r\n      main: cssVars.secondary,\r\n      background: cssVars.secondaryBackground,\r\n      foreground: cssVars.secondaryForeground,\r\n      hover: cssVars.secondaryHover,\r\n      border: cssVars.secondaryBorder,\r\n    },\r\n    success: {\r\n      main: cssVars.success,\r\n      background: cssVars.successBackground,\r\n      foreground: cssVars.successForeground,\r\n      hover: cssVars.successHover,\r\n      border: cssVars.successBorder,\r\n    },\r\n    warning: {\r\n      main: cssVars.warning,\r\n      background: cssVars.warningBackground,\r\n      foreground: cssVars.warningForeground,\r\n      hover: cssVars.warningHover,\r\n      border: cssVars.warningBorder,\r\n    },\r\n    destructive: {\r\n      main: cssVars.destructive,\r\n      background: cssVars.destructiveBackground,\r\n      foreground: cssVars.destructiveForeground,\r\n      hover: cssVars.destructiveHover,\r\n      border: cssVars.destructiveBorder,\r\n    },\r\n    info: {\r\n      main: cssVars.info,\r\n      background: cssVars.infoBackground,\r\n      foreground: cssVars.infoForeground,\r\n      hover: cssVars.infoHover,\r\n      border: cssVars.infoBorder,\r\n    },\r\n  };\r\n\r\n  return colorMap[color] || colorMap.primary;\r\n};\r\n\r\n// Get variant styles for radio button\r\nexport const getVariantStyles = (\r\n  variant: RadioButtonVariant,\r\n  color: RadioButtonColor,\r\n  customColor: string | undefined,\r\n  cssVars: any,\r\n  checked: boolean,\r\n  error: boolean\r\n): CSSProperties => {\r\n  const colors = getColorVariables(color, customColor, cssVars);\r\n\r\n  // Error state override (matching Search component)\r\n  if (error) {\r\n    const baseErrorStyle = {\r\n      borderWidth: '2px',\r\n      borderStyle: 'solid' as const,\r\n    };\r\n\r\n    switch (variant) {\r\n      case 'solid':\r\n        return {\r\n          ...baseErrorStyle,\r\n          borderColor: cssVars.destructive,\r\n          backgroundColor: checked ? cssVars.destructive : (cssVars.destructiveAccent || cssVars.destructive),\r\n        };\r\n      case 'ghost':\r\n        return {\r\n          ...baseErrorStyle,\r\n          borderColor: cssVars.destructive,\r\n          backgroundColor: checked ? cssVars.destructive : 'transparent',\r\n        };\r\n      case 'glassmorphic':\r\n        return {\r\n          ...baseErrorStyle,\r\n          borderColor: cssVars.destructive,\r\n          backgroundColor: checked ? cssVars.destructive : cssVars.destructiveBackground,\r\n          backdropFilter: 'blur(10px)',\r\n          WebkitBackdropFilter: 'blur(10px)',\r\n        };\r\n      case 'outline':\r\n      default:\r\n        return {\r\n          ...baseErrorStyle,\r\n          borderColor: cssVars.destructive,\r\n          backgroundColor: checked ? cssVars.destructive : cssVars.background,\r\n        };\r\n    }\r\n  }\r\n\r\n  // Normal state styles by variant (matching Search component)\r\n  switch (variant) {\r\n    case 'solid':\r\n      return {\r\n        borderColor: checked ? (colors.accent || colors.main) : cssVars.mutedForeground,\r\n        backgroundColor: checked ? (colors.accent || colors.main) : cssVars.mutedForeground,\r\n        borderWidth: '2px',\r\n        borderStyle: 'solid' as const,\r\n      };\r\n    case 'ghost':\r\n      return {\r\n        borderColor: checked ? colors.main : 'transparent',\r\n        backgroundColor: checked ? colors.main : 'transparent',\r\n        borderWidth: '2px',\r\n        borderStyle: 'solid' as const,\r\n      };\r\n    case 'glassmorphic':\r\n      return {\r\n        borderColor: checked ? colors.main : colors.border,\r\n        backgroundColor: checked ? colors.main : colors.background,\r\n        borderWidth: '2px',\r\n        borderStyle: 'solid' as const,\r\n        backdropFilter: 'blur(10px)',\r\n        WebkitBackdropFilter: 'blur(10px)',\r\n      };\r\n    case 'outline':\r\n    default:\r\n      return {\r\n        borderColor: checked ? colors.main : colors.main,\r\n        backgroundColor: checked ? colors.main : cssVars.background,\r\n        borderWidth: '2px',\r\n        borderStyle: 'solid' as const,\r\n      };\r\n  }\r\n};\r\n\r\n// Size configurations\r\nexport const getRadioButtonDimensions = (size: RadioButtonSize) => {\r\n  switch (size) {\r\n    case 'xs':\r\n      return {\r\n        size: 16,\r\n        dotSize: 6,\r\n        padding: 2,\r\n      };\r\n    case 'sm':\r\n      return {\r\n        size: 18,\r\n        dotSize: 6,\r\n        padding: 2,\r\n      };\r\n    case 'lg':\r\n      return {\r\n        size: 24,\r\n        dotSize: 10,\r\n        padding: 3,\r\n      };\r\n    case 'xl':\r\n      return {\r\n        size: 28,\r\n        dotSize: 12,\r\n        padding: 3,\r\n      };\r\n    case 'md':\r\n    default:\r\n      return {\r\n        size: 20,\r\n        dotSize: 8,\r\n        padding: 2,\r\n      };\r\n  }\r\n};\r\n\r\n// Get radio button colors\r\nexport const getRadioButtonColors = (\r\n  color: RadioButtonColor,\r\n  customColor: string | undefined,\r\n  checked: boolean,\r\n  disabled: boolean,\r\n  error: boolean,\r\n  cssVars: any\r\n) => {\r\n  // Handle error state first\r\n  if (error) {\r\n    return {\r\n      border: cssVars.destructive,\r\n      background: checked ? cssVars.destructive : cssVars.background,\r\n      dot: cssVars.destructiveForeground || cssVars.background,\r\n      variantColor: cssVars.destructive,\r\n    };\r\n  }\r\n\r\n  const colors = getColorVariables(color, customColor, cssVars);\r\n\r\n  if (!checked) {\r\n    return {\r\n      border: cssVars.border,\r\n      background: cssVars.background,\r\n      dot: 'transparent',\r\n      variantColor: colors.main,\r\n    };\r\n  }\r\n\r\n  return {\r\n    border: colors.main,\r\n    background: colors.main,\r\n    dot: colors.foreground,\r\n    variantColor: colors.main,\r\n  };\r\n};\r\n\r\n// Main radio button container styles\r\nexport const getRadioButtonContainerStyles = (\r\n  size: RadioButtonSize,\r\n  disabled: boolean,\r\n  contentToggleable: boolean,\r\n  className?: string\r\n): CSSProperties => {\r\n  const gapMap = {\r\n    xs: '6px',\r\n    sm: '8px',\r\n    md: '10px',\r\n    lg: '12px',\r\n    xl: '14px',\r\n  };\r\n\r\n  return {\r\n    display: 'inline-block',\r\n    cursor: disabled ? 'not-allowed' : (contentToggleable ? 'pointer' : 'default'),\r\n    fontFamily: 'inherit',\r\n  };\r\n};\r\n\r\n// Radio button circle styles\r\nexport const getRadioButtonCircleStyles = (\r\n  size: RadioButtonSize,\r\n  color: RadioButtonColor,\r\n  customColor: string | undefined,\r\n  shape: RadioButtonShape,\r\n  variant: RadioButtonVariant,\r\n  checked: boolean,\r\n  disabled: boolean,\r\n  focused: boolean,\r\n  error: boolean,\r\n  animationsEnabled: boolean,\r\n  cssVars: any\r\n): CSSProperties => {\r\n  const dimensions = getRadioButtonDimensions(size);\r\n  const variantStyles = getVariantStyles(variant, color, customColor, cssVars, checked, error);\r\n\r\n  const getBorderRadius = () => {\r\n    switch (shape) {\r\n      case 'sharp':\r\n        return '0';\r\n      case 'round':\r\n        return '12px';\r\n      case 'pill':\r\n      default:\r\n        return '50%';\r\n    }\r\n  };\r\n\r\n  const getMarginTop = () => {\r\n    const marginMap = {\r\n      xs: '1px',\r\n      sm: '1px',\r\n      md: '2px',\r\n      lg: '2px',\r\n      xl: '3px',\r\n    };\r\n    return marginMap[size];\r\n  };\r\n\r\n  const colors = getColorVariables(color, customColor, cssVars);\r\n\r\n  return {\r\n    position: 'relative',\r\n    width: `${dimensions.size}px`,\r\n    height: `${dimensions.size}px`,\r\n    borderRadius: getBorderRadius(),\r\n    ...variantStyles,\r\n    transition: animationsEnabled\r\n      ? 'border-color var(--duration-fast) var(--animation-smooth), background-color var(--duration-fast) var(--animation-smooth), opacity var(--duration-fast) var(--animation-smooth)'\r\n      : 'none',\r\n    cursor: disabled ? 'not-allowed' : 'pointer',\r\n    opacity: disabled ? 0.6 : 1,\r\n    outline: focused ? `2px solid ${colors.main}` : 'none',\r\n    outlineOffset: '2px',\r\n    flexShrink: 0,\r\n    marginTop: getMarginTop(),\r\n  };\r\n};\r\n\r\n// Radio button dot styles\r\nexport const getRadioButtonDotStyles = (\r\n  size: RadioButtonSize,\r\n  color: RadioButtonColor,\r\n  customColor: string | undefined,\r\n  shape: RadioButtonShape,\r\n  variant: RadioButtonVariant,\r\n  checked: boolean,\r\n  disabled: boolean,\r\n  error: boolean,\r\n  animationsEnabled: boolean,\r\n  cssVars: any\r\n): CSSProperties => {\r\n  const dimensions = getRadioButtonDimensions(size);\r\n  const colors = getColorVariables(color, customColor, cssVars);\r\n\r\n  const getDotRadius = () => {\r\n    switch (shape) {\r\n      case 'sharp':\r\n        return '0';\r\n      case 'round':\r\n        return '6px';\r\n      case 'pill':\r\n      default:\r\n        return '50%';\r\n    }\r\n  };\r\n\r\n  // Get dot color based on variant and state\r\n  const getDotColor = () => {\r\n    if (!checked) return 'transparent';\r\n\r\n    if (error) {\r\n      return cssVars.destructiveForeground || cssVars.background;\r\n    }\r\n\r\n    switch (variant) {\r\n      case 'solid':\r\n      case 'ghost':\r\n      case 'glassmorphic':\r\n        return colors.foreground || cssVars.background;\r\n      case 'outline':\r\n      default:\r\n        return colors.foreground || cssVars.background;\r\n    }\r\n  };\r\n\r\n  return {\r\n    position: 'absolute',\r\n    top: '50%',\r\n    left: '50%',\r\n    width: `${dimensions.dotSize}px`,\r\n    height: `${dimensions.dotSize}px`,\r\n    borderRadius: getDotRadius(),\r\n    backgroundColor: getDotColor(),\r\n    transform: `translate(-50%, -50%) scale(${checked ? 1 : 0})`,\r\n    transition: animationsEnabled\r\n      ? 'all var(--duration-fast) var(--animation-spring)'\r\n      : 'none',\r\n  };\r\n};\r\n\r\n// Hidden input styles\r\nexport const getHiddenInputStyles = (): CSSProperties => ({\r\n  position: 'absolute',\r\n  opacity: 0,\r\n  width: 0,\r\n  height: 0,\r\n  margin: 0,\r\n  padding: 0,\r\n  border: 'none',\r\n  overflow: 'hidden',\r\n  whiteSpace: 'nowrap',\r\n  clip: 'rect(0, 0, 0, 0)',\r\n});\r\n\r\n// Label styles\r\nexport const getLabelStyles = (\r\n  size: RadioButtonSize,\r\n  disabled: boolean,\r\n  error: boolean,\r\n  labelPosition: 'left' | 'right',\r\n  contentToggleable: boolean,\r\n  cssVars: any\r\n): CSSProperties => {\r\n  const fontSizeMap = {\r\n    xs: '12px',\r\n    sm: '14px',\r\n    md: '16px',\r\n    lg: '18px',\r\n    xl: '20px',\r\n  };\r\n  \r\n  const order = labelPosition === 'left' ? -1 : 1;\r\n  \r\n  return {\r\n    fontSize: fontSizeMap[size],\r\n    fontWeight: 500,\r\n    color: disabled ? cssVars.mutedForeground : (error ? cssVars.destructive : cssVars.foreground),\r\n    order,\r\n    userSelect: 'none',\r\n    lineHeight: 1.4,\r\n    cursor: disabled ? 'not-allowed' : (contentToggleable ? 'pointer' : 'default'),\r\n  };\r\n};\r\n\r\n// Header styles\r\nexport const getHeaderStyles = (\r\n  size: RadioButtonSize,\r\n  color: RadioButtonColor,\r\n  customColor: string | undefined,\r\n  disabled: boolean,\r\n  error: boolean,\r\n  checked: boolean,\r\n  contentToggleable: boolean,\r\n  cssVars: any\r\n): CSSProperties => {\r\n  const fontSizeMap = {\r\n    xs: '10px',\r\n    sm: '12px',\r\n    md: '14px',\r\n    lg: '16px',\r\n    xl: '18px',\r\n  };\r\n\r\n  // Get the color that matches the selected element\r\n  const colors = getColorVariables(color, customColor, cssVars);\r\n  let headerColor;\r\n\r\n  if (disabled) {\r\n    headerColor = cssVars.mutedForeground;\r\n  } else if (error) {\r\n    headerColor = cssVars.destructive;\r\n  } else if (checked) {\r\n    headerColor = colors.main; // Use the same color as the selected radio button\r\n  } else {\r\n    headerColor = cssVars.foreground;\r\n  }\r\n\r\n  return {\r\n    fontSize: fontSizeMap[size],\r\n    color: headerColor,\r\n    marginBottom: '8px',\r\n    lineHeight: 1.3,\r\n    userSelect: 'none',\r\n    cursor: disabled ? 'not-allowed' : (contentToggleable ? 'pointer' : 'default'),\r\n    fontWeight: '500',\r\n  };\r\n};\r\n\r\n// Label container styles (for label + description)\r\nexport const getLabelContainerStyles = (\r\n  position: 'left' | 'right'\r\n): CSSProperties => ({\r\n  display: 'flex',\r\n  flexDirection: 'column',\r\n  order: position === 'left' ? -1 : 1,\r\n});\r\n\r\n// Radio button group styles\r\nexport const getRadioButtonGroupStyles = (\r\n  orientation: 'horizontal' | 'vertical'\r\n): CSSProperties => ({\r\n  display: 'flex',\r\n  flexDirection: orientation === 'horizontal' ? 'row' : 'column',\r\n  gap: orientation === 'horizontal' ? '16px' : '12px',\r\n  alignItems: orientation === 'horizontal' ? 'center' : 'stretch',\r\n});\r\n","import { RadioButtonSize, RadioButtonColor } from './RadioButton.types';\r\n\r\n/**\r\n * Generate a unique ID for radio button accessibility\r\n */\r\nexport const generateRadioButtonId = (name: string, value: string): string => {\r\n  return `radio-${name}-${value}`.replace(/[^a-zA-Z0-9-_]/g, '-');\r\n};\r\n\r\n/**\r\n * Validate radio button props\r\n */\r\nexport const validateRadioButtonProps = (props: {\r\n  name?: string;\r\n  value?: string | number | readonly string[];\r\n  checked?: boolean;\r\n  defaultChecked?: boolean;\r\n}) => {\r\n  const { name, value, checked, defaultChecked } = props;\r\n  \r\n  if (process.env.NODE_ENV === 'development') {\r\n    if (checked !== undefined && defaultChecked !== undefined) {\r\n      console.warn(\r\n        'RadioButton: You provided both checked and defaultChecked props. ' +\r\n        'A component should be either controlled (with checked) or uncontrolled (with defaultChecked), but not both.'\r\n      );\r\n    }\r\n    \r\n    if (!name) {\r\n      console.warn(\r\n        'RadioButton: Missing name prop. Radio buttons should have a name attribute for proper grouping.'\r\n      );\r\n    }\r\n    \r\n    if (!value) {\r\n      console.warn(\r\n        'RadioButton: Missing value prop. Radio buttons should have a value attribute.'\r\n      );\r\n    }\r\n  }\r\n};\r\n\r\n/**\r\n * Get the default size for consistency\r\n */\r\nexport const getDefaultSize = (): RadioButtonSize => 'md';\r\n\r\n/**\r\n * Get the default color for consistency\r\n */\r\nexport const getDefaultColor = (): RadioButtonColor => 'primary';\r\n\r\n/**\r\n * Get the default variant for consistency (RadioButton doesn't use variants, but needed for compatibility)\r\n */\r\nexport const getDefaultVariant = () => 'solid';\r\n\r\n/**\r\n * Check if a radio button should be considered invalid\r\n */\r\nexport const getValidationState = (\r\n  invalid?: boolean,\r\n  required?: boolean,\r\n  checked?: boolean\r\n): boolean => {\r\n  if (invalid !== undefined) return invalid;\r\n  if (required && !checked) return true;\r\n  return false;\r\n};\r\n\r\n/**\r\n * Format radio button group options\r\n */\r\nexport const formatGroupOptions = (options: Array<{\r\n  value: string;\r\n  label?: React.ReactNode;\r\n  description?: React.ReactNode;\r\n  disabled?: boolean;\r\n}>) => {\r\n  return options.map(option => ({\r\n    ...option,\r\n    id: generateRadioButtonId('group', option.value),\r\n  }));\r\n};\r\n\r\n/**\r\n * Get ARIA attributes for radio button\r\n */\r\nexport const getAriaAttributes = (props: {\r\n  checked?: boolean;\r\n  disabled?: boolean;\r\n  invalid?: boolean;\r\n  required?: boolean;\r\n  describedBy?: string;\r\n  labelledBy?: string;\r\n}) => {\r\n  const { checked, disabled, invalid, required, describedBy, labelledBy } = props;\r\n  \r\n  return {\r\n    'aria-checked': checked || false,\r\n    'aria-disabled': disabled || false,\r\n    'aria-invalid': invalid || false,\r\n    'aria-required': required || false,\r\n    'aria-describedby': describedBy || undefined,\r\n    'aria-labelledby': labelledBy || undefined,\r\n  };\r\n};\r\n","import React, { forwardRef, useRef, useImperativeHandle, useState, useId } from 'react';\r\nimport { useCSSVariables, useSettings } from '../../../providers';\r\nimport { extractFormProps, UNIVERSAL_DEFAULTS } from '../types';\r\nimport { RadioButtonProps, RadioButtonRef, RadioButtonGroupProps } from './RadioButton.types';\r\nimport {\r\n  getRadioButtonContainerStyles,\r\n  getRadioButtonCircleStyles,\r\n  getRadioButtonDotStyles,\r\n  getHiddenInputStyles,\r\n  getLabelStyles,\r\n  getHeaderStyles,\r\n  getLabelContainerStyles,\r\n  getRadioButtonGroupStyles,\r\n} from './RadioButton.styles';\r\nimport {\r\n  validateRadioButtonProps,\r\n  getValidationState,\r\n  getAriaAttributes,\r\n} from './RadioButton.utils';\r\n\r\nexport const RadioButton = forwardRef<RadioButtonRef, RadioButtonProps>((allProps, ref) => {\r\n  // Extract form props and component-specific props\r\n  const [formProps, componentProps] = extractFormProps(allProps as any);\r\n\r\n  // Destructure form props with defaults\r\n  const {\r\n    color = UNIVERSAL_DEFAULTS.color,\r\n    customColor,\r\n    variant = UNIVERSAL_DEFAULTS.variant,\r\n    shape = UNIVERSAL_DEFAULTS.shape,\r\n    size = UNIVERSAL_DEFAULTS.size,\r\n    disabled = UNIVERSAL_DEFAULTS.disabled,\r\n    error,\r\n    label,\r\n    className,\r\n    style,\r\n    id: providedId,\r\n    'data-testid': dataTestId,\r\n    animate = UNIVERSAL_DEFAULTS.animate,\r\n    rounded, // Legacy support\r\n    name,\r\n    value,\r\n    required = false,\r\n    onChange,\r\n    onFocus,\r\n    onBlur,\r\n    'aria-label': ariaLabel,\r\n    'aria-describedby': ariaDescribedBy,\r\n  } = formProps;\r\n\r\n  // Destructure component-specific props\r\n  const {\r\n    checked,\r\n    defaultChecked = false,\r\n    header,\r\n    labelPosition = 'right',\r\n    contentToggleable = true,\r\n    ...rest\r\n  } = componentProps;\r\n\r\n  // Get CSS variables for theming and settings\r\n  const cssVars = useCSSVariables();\r\n  const { settings } = useSettings();\r\n  const animationsEnabled = (settings.appearance.animations ?? true) && animate;\r\n  \r\n  // Generate unique ID if not provided\r\n  const generatedId = useId();\r\n  const id = providedId || generatedId;\r\n  \r\n  // Validate props in development\r\n  validateRadioButtonProps({ name, value, checked, defaultChecked });\r\n  \r\n  // Internal state for uncontrolled mode\r\n  const [internalChecked, setInternalChecked] = useState(defaultChecked);\r\n  const [focused, setFocused] = useState(false);\r\n  \r\n  // Determine if controlled or uncontrolled\r\n  const isControlled = checked !== undefined;\r\n  const isChecked = isControlled ? checked : internalChecked;\r\n  const isError = getValidationState(Boolean(error), required, isChecked);\r\n  \r\n  // Handle legacy rounded prop\r\n  const finalShape = rounded !== undefined ? (rounded ? 'pill' : 'round') : shape;\r\n  \r\n  // Refs\r\n  const inputRef = useRef<HTMLInputElement>(null);\r\n  \r\n  // Expose imperative methods\r\n  useImperativeHandle(ref, () => ({\r\n    focus: () => inputRef.current?.focus(),\r\n    blur: () => inputRef.current?.blur(),\r\n    click: () => inputRef.current?.click(),\r\n  }));\r\n  \r\n  // Handle change\r\n  const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    const newChecked = event.target.checked;\r\n    \r\n    if (!isControlled) {\r\n      setInternalChecked(newChecked);\r\n    }\r\n    \r\n    onChange?.(event);\r\n  };\r\n  \r\n  // Handle focus/blur\r\n  const handleFocus = (event: React.FocusEvent<HTMLInputElement>) => {\r\n    setFocused(true);\r\n    onFocus?.(event);\r\n  };\r\n  \r\n  const handleBlur = (event: React.FocusEvent<HTMLInputElement>) => {\r\n    setFocused(false);\r\n    onBlur?.(event);\r\n  };\r\n  \r\n  // Handle label/description click\r\n  const handleContentClick = () => {\r\n    if (contentToggleable && !disabled) {\r\n      inputRef.current?.click();\r\n      inputRef.current?.focus();\r\n    }\r\n  };\r\n\r\n  // Handle circle click\r\n  const handleCircleClick = () => {\r\n    if (!disabled) {\r\n      inputRef.current?.click();\r\n      inputRef.current?.focus();\r\n    }\r\n  };\r\n  \r\n  // Generate styles\r\n  const containerStyles = getRadioButtonContainerStyles(\r\n    size,\r\n    Boolean(disabled),\r\n    contentToggleable\r\n  );\r\n  \r\n  const circleStyles = getRadioButtonCircleStyles(\r\n    size,\r\n    color,\r\n    customColor,\r\n    finalShape,\r\n    variant,\r\n    isChecked,\r\n    Boolean(disabled),\r\n    focused,\r\n    isError,\r\n    animationsEnabled,\r\n    cssVars\r\n  );\r\n\r\n  const dotStyles = getRadioButtonDotStyles(\r\n    size,\r\n    color,\r\n    customColor,\r\n    finalShape,\r\n    variant,\r\n    isChecked,\r\n    Boolean(disabled),\r\n    isError,\r\n    animationsEnabled,\r\n    cssVars\r\n  );\r\n  \r\n  const hiddenInputStyles = getHiddenInputStyles();\r\n  \r\n  const labelStyles = getLabelStyles(\r\n    size,\r\n    Boolean(disabled),\r\n    isError,\r\n    labelPosition,\r\n    contentToggleable,\r\n    cssVars\r\n  );\r\n  \r\n  const headerStyles = getHeaderStyles(\r\n    size,\r\n    color,\r\n    customColor,\r\n    Boolean(disabled),\r\n    isError,\r\n    isChecked,\r\n    contentToggleable,\r\n    cssVars\r\n  );\r\n  \r\n  const labelContainerStyles = getLabelContainerStyles(\r\n    labelPosition\r\n  );\r\n  \r\n  // ARIA attributes\r\n  const ariaAttributes = getAriaAttributes({\r\n    checked: isChecked,\r\n    disabled: Boolean(disabled),\r\n    invalid: isError,\r\n    required: required,\r\n    describedBy: ariaDescribedBy,\r\n    labelledBy: label ? `${id}-label` : undefined,\r\n  });\r\n  \r\n  // Combine styles\r\n  const combinedStyles = {\r\n    ...containerStyles,\r\n    ...style,\r\n  };\r\n  \r\n  return (\r\n    <div\r\n      className={className}\r\n      style={combinedStyles}\r\n      data-testid={dataTestId}\r\n    >\r\n      {/* Header above everything */}\r\n      {header && (\r\n        <div\r\n          id={`${id}-header`}\r\n          style={headerStyles}\r\n          onClick={handleContentClick}\r\n        >\r\n          {header}\r\n        </div>\r\n      )}\r\n\r\n      {/* Radio button and label side by side */}\r\n      <div style={{\r\n        position: 'relative',\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        gap: '4px' // 4px spacing between radio button and label\r\n      }}>\r\n        <div style={{ position: 'relative' }}>\r\n          <input\r\n            ref={inputRef}\r\n            type=\"radio\"\r\n            id={id}\r\n            name={name}\r\n            value={value}\r\n            checked={isChecked}\r\n            onChange={handleChange}\r\n            onFocus={handleFocus}\r\n            onBlur={handleBlur}\r\n            disabled={disabled}\r\n            required={required}\r\n            aria-label={ariaLabel}\r\n            style={hiddenInputStyles}\r\n            {...ariaAttributes}\r\n            {...rest}\r\n          />\r\n          <div style={circleStyles} onClick={handleCircleClick}>\r\n            {isChecked && <div style={dotStyles} />}\r\n          </div>\r\n        </div>\r\n\r\n        {label && (\r\n          <label\r\n            id={`${id}-label`}\r\n            htmlFor={id}\r\n            style={labelStyles}\r\n            onClick={handleContentClick}\r\n          >\r\n            {label}\r\n          </label>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n});\r\n\r\nRadioButton.displayName = 'RadioButton';\r\n\r\nexport const RadioButtonGroup: React.FC<RadioButtonGroupProps> = ({\r\n  name,\r\n  value,\r\n  onChange,\r\n  size = UNIVERSAL_DEFAULTS.size,\r\n  color = UNIVERSAL_DEFAULTS.color,\r\n  customColor,\r\n  shape = UNIVERSAL_DEFAULTS.shape,\r\n  disabled = false,\r\n  error = false,\r\n  options,\r\n  labelPosition = 'right',\r\n  orientation = 'vertical',\r\n  className,\r\n  style,\r\n}) => {\r\n  const cssVars = useCSSVariables();\r\n  const { settings } = useSettings();\r\n  const animationsEnabled = settings.appearance.animations ?? true;\r\n  \r\n  const groupStyles = getRadioButtonGroupStyles(\r\n    orientation\r\n  );\r\n  \r\n  const combinedStyles = {\r\n    ...groupStyles,\r\n    ...style,\r\n  };\r\n  \r\n  const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    onChange?.(event.target.value);\r\n  };\r\n  \r\n  return (\r\n    <div\r\n      className={className}\r\n      style={combinedStyles}\r\n      role=\"radiogroup\"\r\n    >\r\n      {options.map((option) => (\r\n        <RadioButton\r\n          key={option.value}\r\n          name={name}\r\n          value={option.value}\r\n          checked={value === option.value}\r\n          onChange={handleChange}\r\n          disabled={disabled || option.disabled}\r\n          error={error}\r\n          size={size}\r\n          color={color}\r\n          customColor={customColor}\r\n          shape={shape}\r\n          label={option.label}\r\n          header={option.header}\r\n          labelPosition={labelPosition}\r\n          animate={animationsEnabled}\r\n        />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nRadioButtonGroup.displayName = 'RadioButtonGroup';","import React from 'react';\r\nimport type { ScrollbarColor, ScrollbarVariant, ScrollbarSize, ScrollbarShape, ScrollbarOrientation, ScrollbarAlignment } from './Scrollbar.types';\r\n\r\n// Get color variables based on color prop\r\nexport const getColorVariables = (color: ScrollbarColor, customColor: string | undefined, cssVars: any) => {\r\n  if (color === 'custom' && customColor) {\r\n    return {\r\n      main: customColor,\r\n      foreground: '#ffffff', // Default to white text for custom colors\r\n      background: customColor + '10', // Add opacity for background\r\n      border: customColor,\r\n      hover: customColor + '20', // Add opacity for hover\r\n      accent: customColor,\r\n      shadow: customColor + '40',\r\n      disabled: customColor + '40',\r\n    };\r\n  }\r\n\r\n  const colorMap: Record<string, any> = {\r\n    primary: {\r\n      main: cssVars.primary,\r\n      background: cssVars.primaryBackground,\r\n      foreground: cssVars.primaryForeground,\r\n      hover: cssVars.primaryHover,\r\n      accent: cssVars.primaryAccent,\r\n      shadow: cssVars.primaryShadow,\r\n      disabled: cssVars.primaryDisabled,\r\n      border: cssVars.primaryBorder,\r\n    },\r\n    secondary: {\r\n      main: cssVars.secondary,\r\n      background: cssVars.secondaryBackground,\r\n      foreground: cssVars.secondaryForeground,\r\n      hover: cssVars.secondaryHover,\r\n      accent: cssVars.secondaryAccent,\r\n      shadow: cssVars.secondaryShadow,\r\n      disabled: cssVars.secondaryDisabled,\r\n      border: cssVars.secondaryBorder,\r\n    },\r\n    success: {\r\n      main: cssVars.success,\r\n      background: cssVars.successBackground,\r\n      foreground: cssVars.successForeground,\r\n      hover: cssVars.successHover,\r\n      accent: cssVars.successAccent,\r\n      shadow: cssVars.successShadow,\r\n      disabled: cssVars.successDisabled,\r\n      border: cssVars.successBorder,\r\n    },\r\n    warning: {\r\n      main: cssVars.warning,\r\n      background: cssVars.warningBackground,\r\n      foreground: cssVars.warningForeground,\r\n      hover: cssVars.warningHover,\r\n      accent: cssVars.warningAccent,\r\n      shadow: cssVars.warningShadow,\r\n      disabled: cssVars.warningDisabled,\r\n      border: cssVars.warningBorder,\r\n    },\r\n    destructive: {\r\n      main: cssVars.destructive,\r\n      background: cssVars.destructiveBackground,\r\n      foreground: cssVars.destructiveForeground,\r\n      hover: cssVars.destructiveHover,\r\n      accent: cssVars.destructiveAccent,\r\n      shadow: cssVars.destructiveShadow,\r\n      disabled: cssVars.destructiveDisabled,\r\n      border: cssVars.destructiveBorder,\r\n    },\r\n    info: {\r\n      main: cssVars.info,\r\n      background: cssVars.infoBackground,\r\n      foreground: cssVars.infoForeground,\r\n      hover: cssVars.infoHover,\r\n      accent: cssVars.infoAccent,\r\n      shadow: cssVars.infoShadow,\r\n      disabled: cssVars.infoDisabled,\r\n      border: cssVars.infoBorder,\r\n    },\r\n  };\r\n\r\n  return colorMap[color] || colorMap.primary;\r\n};\r\n\r\n// Get shape styles based on shape prop\r\nexport const getShapeStyles = (shape: ScrollbarShape): React.CSSProperties => {\r\n  switch (shape) {\r\n    case 'sharp':\r\n      return { borderRadius: '0' };\r\n    case 'round':\r\n      return { borderRadius: '12px' };\r\n    case 'pill':\r\n      return { borderRadius: '9999px' };\r\n    default:\r\n      return { borderRadius: '12px' };\r\n  }\r\n};\r\n\r\n// Get size configuration\r\nexport const getSizeConfig = (size: ScrollbarSize) => {\r\n  const configs = {\r\n    xs: {\r\n      thickness: 4,\r\n      thumbThickness: 2,\r\n      borderRadius: 2,\r\n      minThumbSize: 20,\r\n    },\r\n    sm: {\r\n      thickness: 6,\r\n      thumbThickness: 4,\r\n      borderRadius: 3,\r\n      minThumbSize: 30,\r\n    },\r\n    md: {\r\n      thickness: 8,\r\n      thumbThickness: 6,\r\n      borderRadius: 4,\r\n      minThumbSize: 40,\r\n    },\r\n    lg: {\r\n      thickness: 12,\r\n      thumbThickness: 8,\r\n      borderRadius: 6,\r\n      minThumbSize: 50,\r\n    },\r\n    xl: {\r\n      thickness: 16,\r\n      thumbThickness: 12,\r\n      borderRadius: 8,\r\n      minThumbSize: 60,\r\n    },\r\n  };\r\n\r\n  return configs[size];\r\n};\r\n\r\n// Container styles\r\nexport const createScrollbarContainerStyles = (\r\n  width: string | number | undefined,\r\n  height: string | number | undefined,\r\n  minWidth: string | number | undefined,\r\n  minHeight: string | number | undefined,\r\n  maxWidth: string | number | undefined,\r\n  maxHeight: string | number | undefined,\r\n  padding: string | number | undefined,\r\n  smoothScrolling: boolean,\r\n  hideNative: boolean,\r\n  momentum: boolean,\r\n  disabled: boolean,\r\n  animationsEnabled: boolean\r\n): React.CSSProperties => {\r\n  const formatDimension = (value: string | number | undefined) => {\r\n    if (value === undefined) return undefined;\r\n    return typeof value === 'number' ? `${value}px` : value;\r\n  };\r\n\r\n  return {\r\n    position: 'relative',\r\n    width: formatDimension(width),\r\n    height: formatDimension(height),\r\n    minWidth: formatDimension(minWidth),\r\n    minHeight: formatDimension(minHeight),\r\n    maxWidth: formatDimension(maxWidth),\r\n    maxHeight: formatDimension(maxHeight),\r\n    cursor: disabled ? 'not-allowed' : 'default',\r\n    transition: animationsEnabled \r\n      ? 'all var(--duration-fast) var(--animation-smooth)'\r\n      : 'none',\r\n    overflow: 'hidden', // Container should hide overflow\r\n  };\r\n};\r\n\r\n// Scrollable content area styles\r\nexport const getScrollableContentStyles = (\r\n  orientation: ScrollbarOrientation,\r\n  animationsEnabled: boolean,\r\n  hideNative: boolean,\r\n  smoothScrolling: boolean,\r\n  momentum: boolean,\r\n  disabled: boolean\r\n): React.CSSProperties => {\r\n  const baseStyles: React.CSSProperties = {\r\n    width: '100%',\r\n    height: '100%',\r\n    transition: animationsEnabled \r\n      ? 'transform var(--duration-smooth) var(--animation-smooth)' \r\n      : 'none',\r\n    scrollBehavior: smoothScrolling ? 'smooth' : 'auto',\r\n    WebkitOverflowScrolling: momentum ? 'touch' : 'auto',\r\n    // Hide native scrollbars if requested\r\n    ...(hideNative && {\r\n      scrollbarWidth: 'none',\r\n      msOverflowStyle: 'none',\r\n    }),\r\n  };\r\n\r\n  const overflowValue = disabled ? 'hidden' : 'auto';\r\n\r\n  switch (orientation) {\r\n    case 'horizontal':\r\n      return {\r\n        ...baseStyles,\r\n        overflowX: overflowValue,\r\n        overflowY: 'hidden',\r\n        whiteSpace: 'nowrap',\r\n      };\r\n    case 'vertical':\r\n      return {\r\n        ...baseStyles,\r\n        overflowX: 'hidden',\r\n        overflowY: overflowValue,\r\n      };\r\n    case 'both':\r\n    default:\r\n      return {\r\n        ...baseStyles,\r\n        overflowX: overflowValue,\r\n        overflowY: overflowValue,\r\n      };\r\n  }\r\n};\r\n\r\n// WebKit scrollbar styles\r\nexport const getWebKitScrollbarStyles = (\r\n  color: ScrollbarColor,\r\n  customColor: string | undefined,\r\n  variant: ScrollbarVariant,\r\n  size: ScrollbarSize,\r\n  shape: ScrollbarShape,\r\n  orientation: ScrollbarOrientation,\r\n  visibility: string,\r\n  alignment: string,\r\n  disabled: boolean,\r\n  animationsEnabled: boolean,\r\n  cssVars: any\r\n): Record<string, React.CSSProperties> => {\r\n  const colors = getColorVariables(color, customColor, cssVars);\r\n  const sizeConfig = getSizeConfig(size);\r\n  const shapeStyles = getShapeStyles(shape);\r\n\r\n  const isHoverOnly = visibility === 'hover';\r\n  const isHidden = visibility === 'hidden';\r\n\r\n  if (isHidden) {\r\n    return {\r\n      '&::-webkit-scrollbar': {\r\n        display: 'none',\r\n      },\r\n    };\r\n  }\r\n\r\n  // Variant-specific colors\r\n  const variantColors = (() => {\r\n    switch (variant) {\r\n      case 'solid':\r\n        // Solid variant - bar with solid background\r\n        return {\r\n          thumb: colors.main,\r\n          thumbHover: colors.hover,\r\n          track: colors.foreground, // Use foreground color for background\r\n          trackBorder: 'none',\r\n          border: 'none',\r\n          showButtons: false,\r\n          buttonColor: colors.main,\r\n        };\r\n      case 'ghost':\r\n        // Ghost variant - just the bar, no background\r\n        return {\r\n          thumb: colors.main,\r\n          thumbHover: colors.hover,\r\n          track: 'transparent',\r\n          trackBorder: 'none',\r\n          border: 'none',\r\n          showButtons: false,\r\n          buttonColor: 'transparent',\r\n        };\r\n      case 'glassmorphic':\r\n        return {\r\n          thumb: `${colors.main}80`,\r\n          thumbHover: colors.main,\r\n          track: cssVars?.background + '20',\r\n          trackBorder: 'none',\r\n          border: 'none',\r\n          showButtons: false,\r\n          buttonColor: colors.main,\r\n          backdropFilter: 'blur(10px)',\r\n          webkitBackdropFilter: 'blur(10px)',\r\n        };\r\n      case 'invisible':\r\n        // Invisible variant - completely invisible scrollbar\r\n        return {\r\n          thumb: 'transparent',\r\n          thumbHover: 'transparent',\r\n          track: 'transparent',\r\n          trackBorder: 'none',\r\n          border: 'none',\r\n          showButtons: false,\r\n          buttonColor: 'transparent',\r\n        };\r\n      case 'outline':\r\n      default:\r\n        // Outline variant - bar with wider background (no border)\r\n        return {\r\n          thumb: colors.main,\r\n          thumbHover: colors.hover,\r\n          track: colors.background, // Use the color-specific background\r\n          trackBorder: 'none',\r\n          border: 'none',\r\n          showButtons: false,\r\n          buttonColor: colors.main,\r\n          trackPadding: true, // Flag to make track wider\r\n        };\r\n    }\r\n  })();\r\n\r\n  if (disabled) {\r\n    variantColors.thumb = cssVars?.mutedForeground + '40';\r\n    variantColors.thumbHover = cssVars?.mutedForeground + '40';\r\n  }\r\n\r\n  // Standardize scrollbar width for all variants (wider track)\r\n  const scrollbarThickness = sizeConfig.thickness + Math.max(4, Math.floor(sizeConfig.thickness * 0.5));\r\n\r\n  return {\r\n    // Main scrollbar\r\n    '&::-webkit-scrollbar': {\r\n      width: orientation === 'vertical' || orientation === 'both' ? `${scrollbarThickness}px` : '0px',\r\n      height: orientation === 'horizontal' || orientation === 'both' ? `${scrollbarThickness}px` : '0px',\r\n      backgroundColor: 'transparent',\r\n    },\r\n\r\n    // Track (background)\r\n    '&::-webkit-scrollbar-track': {\r\n      backgroundColor: variantColors.track,\r\n      borderRadius: shapeStyles.borderRadius,\r\n      margin: variant === 'solid' ? '0' : '1px',\r\n      border: variantColors.trackBorder || 'none',\r\n      backdropFilter: variantColors.backdropFilter || 'none',\r\n      WebkitBackdropFilter: variantColors.webkitBackdropFilter || 'none',\r\n    },\r\n\r\n    // Thumb (draggable part)\r\n    '&::-webkit-scrollbar-thumb': {\r\n      backgroundColor: variantColors.thumb,\r\n      borderRadius: shapeStyles.borderRadius,\r\n      // Center the thumb in the wider track for all variants\r\n      border: `${Math.max(2, Math.floor((scrollbarThickness - sizeConfig.thumbThickness) / 2))}px solid transparent`,\r\n      backgroundClip: 'padding-box',\r\n      transition: animationsEnabled \r\n        ? 'background-color var(--duration-fast) var(--animation-smooth), opacity var(--duration-fast) var(--animation-smooth)' \r\n        : 'none',\r\n      opacity: variant === 'invisible' ? 0 : (isHoverOnly ? 0 : 1),\r\n      cursor: disabled ? 'not-allowed' : (variant === 'invisible' ? 'default' : 'pointer'),\r\n      backdropFilter: variantColors.backdropFilter || 'none',\r\n      WebkitBackdropFilter: variantColors.webkitBackdropFilter || 'none',\r\n      boxShadow: variant === 'glassmorphic' ? `0 2px 4px ${cssVars?.shadow}20` : 'none',\r\n    },\r\n\r\n    // Thumb hover state\r\n    '&::-webkit-scrollbar-thumb:hover': {\r\n      backgroundColor: disabled ? variantColors.thumb : (variant === 'invisible' ? 'transparent' : variantColors.thumbHover),\r\n      opacity: variant === 'invisible' ? 0 : 1,\r\n      boxShadow: variant === 'glassmorphic' ? `0 4px 8px ${cssVars?.shadow}30` : 'none',\r\n    },\r\n\r\n    // Corner where scrollbars meet\r\n    '&::-webkit-scrollbar-corner': {\r\n      backgroundColor: variantColors.track,\r\n      borderRadius: shapeStyles.borderRadius,\r\n      backdropFilter: variantColors.backdropFilter || 'none',\r\n      WebkitBackdropFilter: variantColors.webkitBackdropFilter || 'none',\r\n    },\r\n\r\n    // Hide scrollbar buttons for all variants\r\n    ...{\r\n      '&::-webkit-scrollbar-button': {\r\n        display: 'none',\r\n      },\r\n    },\r\n\r\n    // Show scrollbar on hover - need container hover\r\n    ...(isHoverOnly && {\r\n      // This will be processed specially in createWebkitScrollbarCSS\r\n      '__hover__': {\r\n        opacity: 1,\r\n      },\r\n    }),\r\n  };\r\n};\r\n\r\n// Firefox scrollbar styles\r\nexport const getFirefoxScrollbarStyles = (\r\n  color: ScrollbarColor,\r\n  customColor: string | undefined,\r\n  variant: ScrollbarVariant,\r\n  size: ScrollbarSize,\r\n  visibility: string,\r\n  disabled: boolean,\r\n  cssVars: any\r\n): React.CSSProperties => {\r\n  const colors = getColorVariables(color, customColor, cssVars);\r\n\r\n  if (visibility === 'hidden') {\r\n    return {\r\n      scrollbarWidth: 'none',\r\n    };\r\n  }\r\n\r\n  // Variant-specific colors\r\n  const variantColors = (() => {\r\n    switch (variant) {\r\n      case 'solid':\r\n        return {\r\n          thumb: colors.main,\r\n          track: colors.foreground, // Use foreground color for background\r\n        };\r\n      case 'ghost':\r\n        // Ghost variant - completely invisible\r\n        return {\r\n          thumb: 'transparent',\r\n          track: 'transparent',\r\n        };\r\n      case 'glassmorphic':\r\n        return {\r\n          thumb: `${colors.main}99`,\r\n          track: cssVars?.background + '33',\r\n        };\r\n      case 'invisible':\r\n        return {\r\n          thumb: 'transparent',\r\n          track: 'transparent',\r\n        };\r\n      case 'outline':\r\n      default:\r\n        // Outline variant - use color-specific background\r\n        return {\r\n          thumb: colors.main,\r\n          track: colors.background,\r\n        };\r\n    }\r\n  })();\r\n\r\n  if (disabled) {\r\n    variantColors.thumb = cssVars?.mutedForeground + '40';\r\n  }\r\n\r\n  return {\r\n    scrollbarWidth: size === 'xs' || size === 'sm' ? 'thin' : 'auto',\r\n    scrollbarColor: `${variantColors.thumb} ${variantColors.track}`,\r\n  };\r\n};\r\n\r\n// Custom scrollbar track styles (for custom implementation)\r\nexport const getCustomScrollbarTrackStyles = (\r\n  orientation: ScrollbarOrientation,\r\n  color: ScrollbarColor,\r\n  customColor: string | undefined,\r\n  variant: ScrollbarVariant,\r\n  size: ScrollbarSize,\r\n  shape: ScrollbarShape,\r\n  alignment: string,\r\n  disabled: boolean,\r\n  animationsEnabled: boolean,\r\n  cssVars: any,\r\n  showIndicators?: boolean\r\n): React.CSSProperties => {\r\n  const colors = getColorVariables(color, customColor, cssVars);\r\n  const sizeConfig = getSizeConfig(size);\r\n  const shapeStyles = getShapeStyles(shape);\r\n\r\n  const isVertical = orientation === 'vertical';\r\n  const isHorizontal = orientation === 'horizontal';\r\n\r\n  const baseStyles: React.CSSProperties = {\r\n    position: 'absolute',\r\n    zIndex: 1,\r\n    transition: animationsEnabled \r\n      ? 'background-color var(--duration-fast) var(--animation-smooth), opacity var(--duration-fast) var(--animation-smooth)' \r\n      : 'none',\r\n    ...shapeStyles,\r\n  };\r\n\r\n  // Variant-specific background\r\n  const variantStyles = (() => {\r\n    switch (variant) {\r\n      case 'solid':\r\n        // Solid variant - bar with solid background\r\n        return {\r\n          backgroundColor: colors.foreground, // Use foreground color for background\r\n          border: 'none',\r\n          padding: `${Math.max(2, Math.floor(sizeConfig.thickness * 0.25))}px`, // Standardized padding\r\n        };\r\n      case 'ghost':\r\n        // Ghost variant - just the bar, no background track\r\n        return {\r\n          backgroundColor: 'transparent',\r\n          border: 'none',\r\n          padding: `${Math.max(2, Math.floor(sizeConfig.thickness * 0.25))}px`, // Standardized padding\r\n        };\r\n      case 'glassmorphic':\r\n        return {\r\n          backgroundColor: cssVars?.background + '20',\r\n          backdropFilter: 'blur(10px)',\r\n          WebkitBackdropFilter: 'blur(10px)',\r\n          border: 'none',\r\n          padding: `${Math.max(2, Math.floor(sizeConfig.thickness * 0.25))}px`, // Standardized padding\r\n        };\r\n      case 'invisible':\r\n        // Invisible variant - completely invisible track\r\n        return {\r\n          display: 'none', // Hide the track completely\r\n        };\r\n      case 'outline':\r\n      default:\r\n        // Outline variant - bar with wider background (no border)\r\n        return {\r\n          backgroundColor: colors.background, // Use color-specific background\r\n          border: 'none',\r\n          padding: `${Math.max(2, Math.floor(sizeConfig.thickness * 0.25))}px`, // Add padding to make track wider\r\n        };\r\n    }\r\n  })();\r\n\r\n  if (disabled) {\r\n    baseStyles.opacity = 0.4;\r\n  }\r\n\r\n  // Standardize track width for all variants (wider track)\r\n  const trackThickness = sizeConfig.thickness + Math.max(4, Math.floor(sizeConfig.thickness * 0.5));\r\n\r\n  // When indicators are shown, reserve space for them\r\n  const indicatorSpace = showIndicators ? sizeConfig.thickness + 4 : 2;\r\n\r\n  if (isVertical) {\r\n    const positionProps = alignment === 'start'\r\n      ? { left: '2px' }\r\n      : { right: '2px' };\r\n    return {\r\n      ...baseStyles,\r\n      ...variantStyles,\r\n      ...positionProps,\r\n      top: `${indicatorSpace}px`,\r\n      bottom: `${indicatorSpace}px`,\r\n      width: `${trackThickness}px`,\r\n    };\r\n  }\r\n\r\n  if (isHorizontal) {\r\n    const positionProps = alignment === 'start'\r\n      ? { top: '2px' }\r\n      : { bottom: '2px' };\r\n    return {\r\n      ...baseStyles,\r\n      ...variantStyles,\r\n      ...positionProps,\r\n      left: `${indicatorSpace}px`,\r\n      right: `${indicatorSpace}px`,\r\n      height: `${trackThickness}px`,\r\n    };\r\n  }\r\n\r\n  // Both orientations\r\n  return baseStyles;\r\n};\r\n\r\n// Custom scrollbar thumb styles\r\nexport const getCustomScrollbarThumbStyles = (\r\n  orientation: ScrollbarOrientation,\r\n  color: ScrollbarColor,\r\n  customColor: string | undefined,\r\n  variant: ScrollbarVariant,\r\n  size: ScrollbarSize,\r\n  shape: ScrollbarShape,\r\n  position: number,\r\n  thumbSize: number,\r\n  disabled: boolean,\r\n  isDragging: boolean,\r\n  animationsEnabled: boolean,\r\n  cssVars: any,\r\n  showIndicators?: boolean\r\n): React.CSSProperties => {\r\n  const colors = getColorVariables(color, customColor, cssVars);\r\n  const sizeConfig = getSizeConfig(size);\r\n  const shapeStyles = getShapeStyles(shape);\r\n\r\n  const isVertical = orientation === 'vertical';\r\n  const isHorizontal = orientation === 'horizontal';\r\n\r\n  const baseStyles: React.CSSProperties = {\r\n    position: 'absolute',\r\n    zIndex: 2,\r\n    cursor: disabled ? 'not-allowed' : 'grab',\r\n    transition: animationsEnabled \r\n      ? 'background-color var(--duration-fast) var(--animation-smooth), transform var(--duration-fast) var(--animation-smooth)' \r\n      : 'none',\r\n    ...shapeStyles,\r\n    // Active styles handled via event handlers\r\n  };\r\n\r\n  // Variant-specific styling\r\n  const variantStyles = (() => {\r\n    switch (variant) {\r\n      case 'solid':\r\n        // Solid variant - bar with solid background\r\n        return {\r\n          backgroundColor: isDragging ? colors.hover : colors.main,\r\n          border: 'none',\r\n        };\r\n      case 'ghost':\r\n        // Ghost variant - just the bar\r\n        return {\r\n          backgroundColor: isDragging ? colors.hover : colors.main,\r\n          border: 'none',\r\n        };\r\n      case 'glassmorphic':\r\n        return {\r\n          backgroundColor: isDragging ? colors.main : `${colors.main}80`,\r\n          backdropFilter: 'blur(10px)',\r\n          WebkitBackdropFilter: 'blur(10px)',\r\n          border: 'none',\r\n          boxShadow: isDragging ? `0 0 16px ${colors.main}50` : `0 2px 8px ${cssVars?.shadow}15`,\r\n        };\r\n      case 'invisible':\r\n        // Invisible variant - completely invisible thumb\r\n        return {\r\n          display: 'none', // Hide the thumb completely\r\n        };\r\n      case 'outline':\r\n      default:\r\n        // Outline variant - bar on bordered background\r\n        return {\r\n          backgroundColor: isDragging ? colors.hover : colors.main,\r\n          border: 'none',\r\n        };\r\n    }\r\n  })();\r\n\r\n  if (disabled) {\r\n    baseStyles.opacity = 0.4;\r\n    variantStyles.backgroundColor = cssVars?.mutedForeground;\r\n  }\r\n\r\n  // Calculate space needed for indicators (indicator size + padding)\r\n  const indicatorSpace = showIndicators ? (sizeConfig.thickness + 6) : 0; // Space for indicator + gap\r\n  \r\n  const thumbLength = Math.max(thumbSize * 100, sizeConfig.minThumbSize);\r\n  \r\n  // Standardize thumb width across all variants - consistent with track standardization\r\n  const standardizedThumbWidth = sizeConfig.thumbThickness;\r\n\r\n  if (isVertical) {\r\n    // Calculate available space for thumb movement when indicators are shown\r\n    const availableSpace = showIndicators ? (100 - (indicatorSpace * 2 / 4)) : 100;\r\n    const scaledPosition = showIndicators ? \r\n      (position * availableSpace) : \r\n      (position * 100);\r\n    \r\n    // Calculate thumb position with indicator offset\r\n    const thumbPosition = Math.min(scaledPosition, availableSpace - thumbLength);\r\n    const finalTop = showIndicators ? \r\n      `calc(${thumbPosition}% + ${indicatorSpace}px)` : \r\n      `${thumbPosition}%`;\r\n    \r\n    return {\r\n      ...baseStyles,\r\n      ...variantStyles,\r\n      right: '50%',\r\n      top: finalTop,\r\n      width: `${standardizedThumbWidth}px`,\r\n      height: `${thumbLength}%`,\r\n      transform: 'translateX(50%)',\r\n      maxHeight: showIndicators ? `calc(100% - ${indicatorSpace * 2}px)` : '100%',\r\n    };\r\n  }\r\n\r\n  if (isHorizontal) {\r\n    // Calculate available space for thumb movement when indicators are shown\r\n    const availableSpace = showIndicators ? (100 - (indicatorSpace * 2 / 4)) : 100;\r\n    const scaledPosition = showIndicators ? \r\n      (position * availableSpace) : \r\n      (position * 100);\r\n    \r\n    // Calculate thumb position with indicator offset\r\n    const thumbPosition = Math.min(scaledPosition, availableSpace - thumbLength);\r\n    const finalLeft = showIndicators ? \r\n      `calc(${thumbPosition}% + ${indicatorSpace}px)` : \r\n      `${thumbPosition}%`;\r\n    \r\n    return {\r\n      ...baseStyles,\r\n      ...variantStyles,\r\n      bottom: '50%',\r\n      left: finalLeft,\r\n      width: `${thumbLength}%`,\r\n      height: `${standardizedThumbWidth}px`,\r\n      transform: 'translateY(50%)',\r\n      maxWidth: showIndicators ? `calc(100% - ${indicatorSpace * 2}px)` : '100%',\r\n    };\r\n  }\r\n\r\n  return baseStyles;\r\n};\r\n\r\n// Scroll indicators styles (arrow icons in track)\r\nexport const getScrollIndicatorStyles = (\r\n  orientation: ScrollbarOrientation,\r\n  color: ScrollbarColor,\r\n  customColor: string | undefined,\r\n  size: ScrollbarSize,\r\n  position: 'top' | 'bottom' | 'left' | 'right',\r\n  visible: boolean,\r\n  disabled: boolean,\r\n  animationsEnabled: boolean,\r\n  cssVars: any,\r\n  alignment?: string,\r\n  variant?: ScrollbarVariant\r\n): React.CSSProperties => {\r\n  const colors = getColorVariables(color, customColor, cssVars);\r\n  const sizeConfig = getSizeConfig(size);\r\n  \r\n  // Indicator size should be smaller to fit within the track\r\n  const trackThickness = sizeConfig.thickness + Math.max(4, Math.floor(sizeConfig.thickness * 0.5));\r\n  const indicatorSize = sizeConfig.thickness; // Use base thickness for indicator\r\n\r\n  // Get variant-specific styling for the indicator background\r\n  const variantStyles = (() => {\r\n    switch (variant) {\r\n      case 'solid':\r\n        return {\r\n          backgroundColor: 'transparent',\r\n          color: colors.main,\r\n          border: 'none',\r\n        };\r\n      case 'ghost':\r\n        return {\r\n          backgroundColor: 'transparent',\r\n          color: colors.main,\r\n          border: 'none',\r\n        };\r\n      case 'glassmorphic':\r\n        return {\r\n          backgroundColor: 'transparent',\r\n          color: colors.main,\r\n          border: 'none',\r\n        };\r\n      case 'outline':\r\n      default:\r\n        return {\r\n          backgroundColor: 'transparent',\r\n          color: colors.main,\r\n          border: 'none',\r\n        };\r\n    }\r\n  })();\r\n\r\n  const baseStyles: React.CSSProperties = {\r\n    position: 'absolute',\r\n    ...variantStyles,\r\n    opacity: visible ? 1 : 0.5,\r\n    transition: animationsEnabled \r\n      ? 'all var(--duration-fast) var(--animation-smooth)' \r\n      : 'none',\r\n    pointerEvents: disabled ? 'none' : 'auto',\r\n    cursor: disabled ? 'not-allowed' : (visible ? 'pointer' : 'default'),\r\n    zIndex: 4,\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n  };\r\n\r\n  // Calculate centering offset for indicators within the track\r\n  const centerOffset = Math.max(2, (trackThickness - indicatorSize) / 2);\r\n\r\n  switch (position) {\r\n    case 'top':\r\n      return {\r\n        ...baseStyles,\r\n        top: `${centerOffset}px`,\r\n        [alignment === 'start' ? 'left' : 'right']: `${centerOffset}px`,\r\n        width: `${indicatorSize}px`,\r\n        height: `${indicatorSize}px`,\r\n      };\r\n    case 'bottom':\r\n      return {\r\n        ...baseStyles,\r\n        bottom: `${centerOffset}px`,\r\n        [alignment === 'start' ? 'left' : 'right']: `${centerOffset}px`,\r\n        width: `${indicatorSize}px`,\r\n        height: `${indicatorSize}px`,\r\n      };\r\n    case 'left':\r\n      return {\r\n        ...baseStyles,\r\n        left: `${centerOffset}px`,\r\n        [alignment === 'start' ? 'top' : 'bottom']: `${centerOffset}px`,\r\n        width: `${indicatorSize}px`,\r\n        height: `${indicatorSize}px`,\r\n      };\r\n    case 'right':\r\n      return {\r\n        ...baseStyles,\r\n        right: `${centerOffset}px`,\r\n        [alignment === 'start' ? 'top' : 'bottom']: `${centerOffset}px`,\r\n        width: `${indicatorSize}px`,\r\n        height: `${indicatorSize}px`,\r\n      };\r\n    default:\r\n      return baseStyles;\r\n  }\r\n};","import { ScrollbarSize, ScrollbarVariant, ScrollbarOrientation } from './Scrollbar.types';\r\n\r\n/**\r\n * Check if the browser supports WebKit scrollbar styling\r\n */\r\nexport const supportsWebKitScrollbar = (): boolean => {\r\n  if (typeof window === 'undefined') return false;\r\n  \r\n  // Check if browser supports webkit scrollbar pseudo-elements\r\n  return CSS.supports('-webkit-appearance', 'none');\r\n};\r\n\r\n/**\r\n * Calculate scroll thumb size based on content and container dimensions\r\n */\r\nexport const calculateThumbSize = (\r\n  contentSize: number,\r\n  containerSize: number\r\n): number => {\r\n  if (contentSize <= containerSize) return 1;\r\n  return Math.max(containerSize / contentSize, 0.1); // Minimum 10% thumb size\r\n};\r\n\r\n/**\r\n * Calculate scroll thumb position based on scroll position\r\n */\r\nexport const calculateThumbPosition = (\r\n  scrollPosition: number,\r\n  contentSize: number,\r\n  containerSize: number,\r\n  thumbSize: number\r\n): number => {\r\n  if (contentSize <= containerSize) return 0;\r\n  const maxScrollPosition = contentSize - containerSize;\r\n  const scrollRatio = scrollPosition / maxScrollPosition;\r\n  const maxThumbPosition = 1 - thumbSize;\r\n  return Math.max(0, Math.min(scrollRatio * maxThumbPosition, maxThumbPosition));\r\n};\r\n\r\n/**\r\n * Get scroll position from thumb position\r\n */\r\nexport const getScrollPositionFromThumb = (\r\n  thumbPosition: number,\r\n  contentSize: number,\r\n  containerSize: number,\r\n  thumbSize: number\r\n): number => {\r\n  if (contentSize <= containerSize) return 0;\r\n  const maxThumbPosition = 1 - thumbSize;\r\n  const scrollRatio = maxThumbPosition > 0 ? thumbPosition / maxThumbPosition : 0;\r\n  const maxScrollPosition = contentSize - containerSize;\r\n  return scrollRatio * maxScrollPosition;\r\n};\r\n\r\n/**\r\n * Check if scrolling is needed based on content and container sizes\r\n */\r\nexport const isScrollingNeeded = (\r\n  contentSize: number,\r\n  containerSize: number\r\n): boolean => {\r\n  return contentSize > containerSize;\r\n};\r\n\r\n/**\r\n * Get default size for consistency\r\n */\r\nexport const getDefaultSize = (): ScrollbarSize => 'md';\r\n\r\n/**\r\n * Get default variant for consistency\r\n */\r\nexport const getDefaultVariant = (): ScrollbarVariant => 'outline';\r\n\r\n/**\r\n * Get default orientation for consistency\r\n */\r\nexport const getDefaultOrientation = (): ScrollbarOrientation => 'vertical';\r\n\r\n/**\r\n * Validate scrollbar props\r\n */\r\nexport const validateScrollbarProps = (props: {\r\n  height?: number | string;\r\n  width?: number | string;\r\n  maxHeight?: number | string;\r\n  maxWidth?: number | string;\r\n  orientation?: ScrollbarOrientation;\r\n}) => {\r\n  const { height, width, maxHeight, maxWidth, orientation } = props;\r\n  \r\n  if (process.env.NODE_ENV === 'development') {\r\n    if (orientation === 'vertical' && !height && !maxHeight) {\r\n      console.warn(\r\n        'Scrollbar: For vertical orientation, consider providing height or maxHeight for better UX.'\r\n      );\r\n    }\r\n    \r\n    if (orientation === 'horizontal' && !width && !maxWidth) {\r\n      console.warn(\r\n        'Scrollbar: For horizontal orientation, consider providing width or maxWidth for better UX.'\r\n      );\r\n    }\r\n  }\r\n};\r\n\r\n/**\r\n * Apply custom scrollbar styles using CSS-in-JS\r\n */\r\nexport const applyScrollbarStyles = (\r\n  element: HTMLElement,\r\n  styles: Record<string, React.CSSProperties>\r\n) => {\r\n  if (!element || !supportsWebKitScrollbar()) return;\r\n  \r\n  // This would require a CSS-in-JS solution like styled-components or emotion\r\n  // For now, we'll apply basic styles that can be set directly\r\n  Object.entries(styles).forEach(([selector, style]) => {\r\n    if (selector === '&::-webkit-scrollbar' && style.width) {\r\n      element.style.setProperty('--scrollbar-width', style.width as string);\r\n    }\r\n    if (selector === '&::-webkit-scrollbar' && style.height) {\r\n      element.style.setProperty('--scrollbar-height', style.height as string);\r\n    }\r\n  });\r\n};\r\n\r\n/**\r\n * Get ARIA attributes for scrollbar accessibility\r\n */\r\nexport const getScrollbarAriaAttributes = (\r\n  orientation: ScrollbarOrientation,\r\n  scrollPosition: number,\r\n  maxScroll: number,\r\n  disabled: boolean\r\n) => {\r\n  const scrollPercentage = maxScroll > 0 ? Math.round((scrollPosition / maxScroll) * 100) : 0;\r\n  \r\n  return {\r\n    'aria-orientation': orientation === 'both' ? 'vertical' : orientation,\r\n    'aria-valuenow': scrollPercentage,\r\n    'aria-valuemin': 0,\r\n    'aria-valuemax': 100,\r\n    'aria-valuetext': `${scrollPercentage}% scrolled`,\r\n    'aria-disabled': disabled,\r\n    role: 'scrollbar',\r\n  };\r\n};\r\n\r\n/**\r\n * Throttle scroll events for performance\r\n */\r\nexport const throttleScrollEvent = <T extends (...args: any[]) => any>(\r\n  func: T,\r\n  delay: number = 16 // ~60fps\r\n): T => {\r\n  let timeoutId: NodeJS.Timeout | null = null;\r\n  let lastExecTime = 0;\r\n  \r\n  return ((...args: any[]) => {\r\n    const currentTime = Date.now();\r\n    \r\n    if (currentTime - lastExecTime > delay) {\r\n      func(...args);\r\n      lastExecTime = currentTime;\r\n    } else {\r\n      if (timeoutId) clearTimeout(timeoutId);\r\n      timeoutId = setTimeout(() => {\r\n        func(...args);\r\n        lastExecTime = Date.now();\r\n      }, delay - (currentTime - lastExecTime));\r\n    }\r\n  }) as T;\r\n};\r\n","import React, { forwardRef, useRef, useImperativeHandle, useState, useEffect, useCallback, useMemo } from 'react';\r\nimport { useCSSVariables, useSettings } from '../../../providers';\r\nimport { extractContainerProps, UNIVERSAL_DEFAULTS } from '../types';\r\nimport { ScrollbarProps, ScrollbarRef } from './Scrollbar.types';\r\nimport { Icon } from '../Icon/Icon';\r\nimport {\r\n  createScrollbarContainerStyles,\r\n  getScrollableContentStyles,\r\n  getWebKitScrollbarStyles,\r\n  getFirefoxScrollbarStyles,\r\n  getCustomScrollbarTrackStyles,\r\n  getCustomScrollbarThumbStyles,\r\n  getScrollIndicatorStyles,\r\n} from './Scrollbar.styles';\r\nimport {\r\n  supportsWebKitScrollbar,\r\n  calculateThumbSize,\r\n  calculateThumbPosition,\r\n  getScrollPositionFromThumb,\r\n  isScrollingNeeded,\r\n  validateScrollbarProps,\r\n  getScrollbarAriaAttributes,\r\n  throttleScrollEvent,\r\n} from './Scrollbar.utils';\r\n\r\n// Utility to inject webkit scrollbar styles as CSS\r\nconst createWebkitScrollbarCSS = (\r\n  uniqueId: string, \r\n  webkitStyles: Record<string, React.CSSProperties>\r\n): string => {\r\n  let css = '';\r\n  let hoverStyles = null;\r\n  \r\n  Object.entries(webkitStyles).forEach(([selector, styles]) => {\r\n    if (selector === '__hover__') {\r\n      // Special case for hover state\r\n      hoverStyles = styles;\r\n    } else if (selector.includes('::-webkit-scrollbar')) {\r\n      const cleanSelector = selector.replace('&', `#${uniqueId} > div:first-child`);\r\n      const cssProps = Object.entries(styles as Record<string, any>)\r\n        .map(([prop, value]) => {\r\n          // Convert camelCase to kebab-case\r\n          const kebabProp = prop.replace(/[A-Z]/g, letter => `-${letter.toLowerCase()}`);\r\n          return `${kebabProp}: ${value};`;\r\n        })\r\n        .join(' ');\r\n      \r\n      css += `${cleanSelector} { ${cssProps} }`;\r\n    }\r\n  });\r\n  \r\n  // Add hover state for the container\r\n  if (hoverStyles) {\r\n    css += `#${uniqueId}:hover > div:first-child::-webkit-scrollbar-thumb { opacity: ${(hoverStyles as any).opacity}; }`;\r\n  }\r\n  \r\n  return css;\r\n};\r\n\r\n// Utility to inject or update CSS styles in the document head\r\nconst injectCSS = (uniqueId: string, css: string) => {\r\n  if (typeof document === 'undefined') return;\r\n  \r\n  const existingStyle = document.getElementById(`scrollbar-${uniqueId}`);\r\n  \r\n  if (existingStyle) {\r\n    existingStyle.textContent = css;\r\n  } else {\r\n    const style = document.createElement('style');\r\n    style.id = `scrollbar-${uniqueId}`;\r\n    style.textContent = css;\r\n    document.head.appendChild(style);\r\n  }\r\n};\r\n\r\n// Cleanup injected CSS\r\nconst cleanupCSS = (uniqueId: string) => {\r\n  if (typeof document === 'undefined') return;\r\n  \r\n  const style = document.getElementById(`scrollbar-${uniqueId}`);\r\n  if (style) {\r\n    style.remove();\r\n  }\r\n};\r\n\r\nexport const Scrollbar = forwardRef<ScrollbarRef, ScrollbarProps>((allProps, ref) => {\r\n  // Extract container props and component-specific props\r\n  const [containerProps, componentProps] = extractContainerProps(allProps);\r\n  \r\n  // Destructure container props with defaults\r\n  const {\r\n    color = UNIVERSAL_DEFAULTS.color,\r\n    customColor,\r\n    variant = 'outline', // Scrollbar-specific default\r\n    shape = UNIVERSAL_DEFAULTS.shape,\r\n    size = UNIVERSAL_DEFAULTS.size,\r\n    disabled = UNIVERSAL_DEFAULTS.disabled,\r\n    width,\r\n    height,\r\n    className,\r\n    style,\r\n    id,\r\n    animate = UNIVERSAL_DEFAULTS.animate,\r\n    children,\r\n  } = containerProps;\r\n  \r\n  // Destructure component-specific props\r\n  const {\r\n    orientation = 'vertical',\r\n    visibility = 'always',\r\n    alignment = 'end',\r\n    smoothScrolling = true,\r\n    momentum = true,\r\n    showIndicators = false,\r\n    onScroll,\r\n    onScrollStart,\r\n    onScrollEnd,\r\n    onReachTop,\r\n    onReachBottom,\r\n    onReachLeft,\r\n    onReachRight,\r\n    thumbSize: customThumbSize,\r\n    scrollPosition: customScrollPosition,\r\n    ...rest\r\n  } = componentProps;\r\n\r\n  // Get CSS variables for theming and settings\r\n  const cssVars = useCSSVariables();\r\n  const { settings } = useSettings();\r\n  \r\n  // Generate unique ID for this scrollbar instance\r\n  const uniqueId = useMemo(() => \r\n    id || `scrollbar-${Math.random().toString(36).substr(2, 9)}`, \r\n    [id]\r\n  );\r\n  const animationsEnabled = (settings.appearance.animations ?? true) && animate;\r\n  \r\n  // Validate props in development\r\n  validateScrollbarProps({ height, width, orientation });\r\n\r\n  // Special handling for both orientation with start alignment\r\n  const isStartBothCase = alignment === 'start' && orientation === 'both';\r\n\r\n  // Refs\r\n  const containerRef = useRef<HTMLDivElement>(null);\r\n  const contentRef = useRef<HTMLDivElement>(null);\r\n  const verticalTrackRef = useRef<HTMLDivElement>(null);\r\n  const verticalThumbRef = useRef<HTMLDivElement>(null);\r\n  const horizontalTrackRef = useRef<HTMLDivElement>(null);\r\n  const horizontalThumbRef = useRef<HTMLDivElement>(null);\r\n  \r\n  // State for custom scrollbar implementation\r\n  const [scrollState, setScrollState] = useState({\r\n    scrollTop: 0,\r\n    scrollLeft: 0,\r\n    scrollHeight: 0,\r\n    scrollWidth: 0,\r\n    clientHeight: 0,\r\n    clientWidth: 0,\r\n  });\r\n  \r\n  const [isDragging, setIsDragging] = useState(false);\r\n  const [dragStart, setDragStart] = useState({ x: 0, y: 0, scrollTop: 0, scrollLeft: 0 });\r\n  const [isScrolling, setIsScrolling] = useState(false);\r\n  const [scrollTimeout, setScrollTimeout] = useState<NodeJS.Timeout | null>(null);\r\n\r\n  // Drag handling functions\r\n  const handleThumbMouseDown = useCallback((e: React.MouseEvent, orientation: 'vertical' | 'horizontal') => {\r\n    e.preventDefault();\r\n    e.stopPropagation();\r\n\r\n    if (!containerRef.current) return;\r\n\r\n    setIsDragging(true);\r\n    setDragStart({\r\n      x: e.clientX,\r\n      y: e.clientY,\r\n      scrollTop: containerRef.current.scrollTop,\r\n      scrollLeft: containerRef.current.scrollLeft,\r\n    });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (!isDragging) return;\r\n\r\n    let animationFrameId: number;\r\n\r\n    const handleMouseMove = (e: MouseEvent) => {\r\n      if (!containerRef.current) return;\r\n\r\n      // Use requestAnimationFrame for smooth updates\r\n      cancelAnimationFrame(animationFrameId);\r\n      animationFrameId = requestAnimationFrame(() => {\r\n        if (!containerRef.current) return;\r\n\r\n        const deltaX = e.clientX - dragStart.x;\r\n        const deltaY = e.clientY - dragStart.y;\r\n\r\n        if (orientation === 'vertical' || orientation === 'both') {\r\n          const containerHeight = scrollState.clientHeight;\r\n          const contentHeight = scrollState.scrollHeight;\r\n          const scrollableHeight = contentHeight - containerHeight;\r\n\r\n          if (scrollableHeight > 0) {\r\n            // Calculate the thumb height and available track space\r\n            const thumbHeight = Math.max(20, (containerHeight / contentHeight) * containerHeight);\r\n            const trackSpace = containerHeight - thumbHeight;\r\n\r\n            // Convert mouse movement to scroll position\r\n            const scrollRatio = deltaY / trackSpace;\r\n            const newScrollTop = Math.max(0, Math.min(scrollableHeight, dragStart.scrollTop + (scrollRatio * scrollableHeight)));\r\n\r\n            containerRef.current.scrollTop = newScrollTop;\r\n          }\r\n        }\r\n\r\n        if (orientation === 'horizontal' || orientation === 'both') {\r\n          const containerWidth = scrollState.clientWidth;\r\n          const contentWidth = scrollState.scrollWidth;\r\n          const scrollableWidth = contentWidth - containerWidth;\r\n\r\n          if (scrollableWidth > 0) {\r\n            // Calculate the thumb width and available track space\r\n            const thumbWidth = Math.max(20, (containerWidth / contentWidth) * containerWidth);\r\n            const trackSpace = containerWidth - thumbWidth;\r\n\r\n            // Convert mouse movement to scroll position\r\n            const scrollRatio = deltaX / trackSpace;\r\n            const newScrollLeft = Math.max(0, Math.min(scrollableWidth, dragStart.scrollLeft + (scrollRatio * scrollableWidth)));\r\n\r\n            containerRef.current.scrollLeft = newScrollLeft;\r\n          }\r\n        }\r\n      });\r\n    };\r\n\r\n    const handleMouseUp = () => {\r\n      setIsDragging(false);\r\n      cancelAnimationFrame(animationFrameId);\r\n    };\r\n\r\n    document.addEventListener('mousemove', handleMouseMove, { passive: false });\r\n    document.addEventListener('mouseup', handleMouseUp);\r\n\r\n    return () => {\r\n      document.removeEventListener('mousemove', handleMouseMove);\r\n      document.removeEventListener('mouseup', handleMouseUp);\r\n      cancelAnimationFrame(animationFrameId);\r\n    };\r\n  }, [isDragging, dragStart, orientation, scrollState]);\r\n  \r\n  // Update scroll state\r\n  const updateScrollState = useCallback(() => {\r\n    if (!containerRef.current) return;\r\n    \r\n    const element = containerRef.current;\r\n    setScrollState({\r\n      scrollTop: element.scrollTop,\r\n      scrollLeft: element.scrollLeft,\r\n      scrollHeight: element.scrollHeight,\r\n      scrollWidth: element.scrollWidth,\r\n      clientHeight: element.clientHeight,\r\n      clientWidth: element.clientWidth,\r\n    });\r\n  }, []);\r\n  \r\n  // Throttled scroll handler\r\n  const throttledScrollHandler = useCallback(\r\n    throttleScrollEvent((event: React.UIEvent<HTMLDivElement>) => {\r\n      updateScrollState();\r\n      onScroll?.(event);\r\n      \r\n      // Detect scroll boundaries\r\n      const element = event.currentTarget;\r\n      if (!element) return;\r\n      \r\n      const { scrollTop, scrollLeft, scrollHeight, scrollWidth, clientHeight, clientWidth } = element;\r\n      \r\n      if (scrollTop === 0) onReachTop?.();\r\n      if (scrollTop + clientHeight >= scrollHeight) onReachBottom?.();\r\n      if (scrollLeft === 0) onReachLeft?.();\r\n      if (scrollLeft + clientWidth >= scrollWidth) onReachRight?.();\r\n    }, 16),\r\n    [updateScrollState, onScroll, onReachTop, onReachBottom, onReachLeft, onReachRight]\r\n  );\r\n  \r\n  // Handle scroll start/end\r\n  const handleScrollStart = useCallback(() => {\r\n    if (!isScrolling) {\r\n      setIsScrolling(true);\r\n      onScrollStart?.();\r\n    }\r\n    \r\n    if (scrollTimeout) {\r\n      clearTimeout(scrollTimeout);\r\n    }\r\n    \r\n    const timeout = setTimeout(() => {\r\n      setIsScrolling(false);\r\n      onScrollEnd?.();\r\n    }, 150);\r\n    \r\n    setScrollTimeout(timeout);\r\n  }, [isScrolling, scrollTimeout, onScrollStart, onScrollEnd]);\r\n  \r\n  // Handle scroll events\r\n  const handleScroll = useCallback(\r\n    (event: React.UIEvent<HTMLDivElement>) => {\r\n      handleScrollStart();\r\n      throttledScrollHandler(event);\r\n    },\r\n    [handleScrollStart, throttledScrollHandler]\r\n  );\r\n  \r\n  // Imperative API\r\n  useImperativeHandle(ref, () => ({\r\n    scrollTo: ({ top, left, behavior = 'smooth' }) => {\r\n      if (containerRef.current) {\r\n        containerRef.current.scrollTo({ top, left, behavior });\r\n      }\r\n    },\r\n    scrollIntoView: (element: Element, options?: ScrollIntoViewOptions) => {\r\n      element.scrollIntoView(options);\r\n    },\r\n    getScrollPosition: () => ({\r\n      top: scrollState.scrollTop,\r\n      left: scrollState.scrollLeft,\r\n    }),\r\n  }));\r\n  \r\n  // Update scroll state on mount and when content changes\r\n  useEffect(() => {\r\n    updateScrollState();\r\n  }, [updateScrollState, children]);\r\n  \r\n  // Handle custom scroll position\r\n  useEffect(() => {\r\n    if (customScrollPosition && containerRef.current) {\r\n      const { x, y } = customScrollPosition;\r\n      if (typeof y === 'number') {\r\n        containerRef.current.scrollTop = y * (scrollState.scrollHeight - scrollState.clientHeight);\r\n      }\r\n      if (typeof x === 'number') {\r\n        containerRef.current.scrollLeft = x * (scrollState.scrollWidth - scrollState.clientWidth);\r\n      }\r\n    }\r\n  }, [customScrollPosition, scrollState]);\r\n  \r\n  // Styles\r\n  const containerStyles = createScrollbarContainerStyles(\r\n    width,\r\n    height,\r\n    undefined, // minWidth\r\n    undefined, // minHeight\r\n    undefined, // maxWidth\r\n    undefined, // maxHeight\r\n    undefined, // padding\r\n    smoothScrolling,\r\n    false, // Never hide native scrollbars\r\n    momentum,\r\n    Boolean(disabled),\r\n    animationsEnabled\r\n  );\r\n  \r\n  // Use native scrollbars with direction CSS for start alignment\r\n\r\n  // Apply CSS transforms for start alignment positioning\r\n  const containerDirectionStyles = alignment === 'start' ? (() => {\r\n    if (orientation === 'vertical') {\r\n      // Use direction: rtl for vertical scrollbar on left\r\n      return { direction: 'rtl' as const };\r\n    } else if (orientation === 'horizontal') {\r\n      // Use rotateX(180deg) for horizontal scrollbar on top\r\n      return { transform: 'rotateX(180deg)' };\r\n    } else if (orientation === 'both') {\r\n      // For both orientations, only apply direction: rtl for vertical scrollbar\r\n      // Horizontal scrollbar will be handled by custom scrollbar positioned at top\r\n      return { direction: 'rtl' as const };\r\n    }\r\n    return {};\r\n  })() : {};\r\n\r\n  const contentDirectionStyles = alignment === 'start' ? (() => {\r\n    if (orientation === 'vertical') {\r\n      // Reset text direction for vertical\r\n      return { direction: 'ltr' as const };\r\n    } else if (orientation === 'horizontal') {\r\n      // Flip content back for horizontal\r\n      return { transform: 'rotateX(180deg)' };\r\n    } else if (orientation === 'both') {\r\n      // For both orientations, only reset text direction\r\n      // No transform needed since we'll use custom horizontal scrollbar\r\n      return { direction: 'ltr' as const };\r\n    }\r\n    return {};\r\n  })() : {};\r\n\r\n  const contentStyles = {\r\n    ...getScrollableContentStyles(\r\n      orientation,\r\n      animationsEnabled,\r\n      false, // Never hide native scrollbars\r\n      smoothScrolling,\r\n      momentum,\r\n      Boolean(disabled)\r\n    ),\r\n    ...containerDirectionStyles\r\n  };\r\n  \r\n  const needsVerticalScrollbar = isScrollingNeeded(scrollState.scrollHeight, scrollState.clientHeight);\r\n  const needsHorizontalScrollbar = isScrollingNeeded(scrollState.scrollWidth, scrollState.clientWidth);\r\n  \r\n  const verticalThumbSize = calculateThumbSize(scrollState.scrollHeight, scrollState.clientHeight);\r\n  const horizontalThumbSize = calculateThumbSize(scrollState.scrollWidth, scrollState.clientWidth);\r\n  \r\n  // Calculate base thumb positions\r\n  const baseVerticalThumbPosition = calculateThumbPosition(\r\n    scrollState.scrollTop,\r\n    scrollState.scrollHeight,\r\n    scrollState.clientHeight,\r\n    verticalThumbSize\r\n  );\r\n  \r\n  const baseHorizontalThumbPosition = calculateThumbPosition(\r\n    scrollState.scrollLeft,\r\n    scrollState.scrollWidth,\r\n    scrollState.clientWidth,\r\n    horizontalThumbSize\r\n  );\r\n  \r\n  // Adjust thumb positions when indicators are shown to prevent overlap\r\n  const verticalThumbPosition = showIndicators ? \r\n    baseVerticalThumbPosition * 0.85 : // Scale down range to leave space for indicators\r\n    baseVerticalThumbPosition;\r\n    \r\n  const horizontalThumbPosition = showIndicators ?\r\n    baseHorizontalThumbPosition * 0.85 : // Scale down range to leave space for indicators\r\n    baseHorizontalThumbPosition;\r\n  \r\n  // Custom scrollbar track styles\r\n  const verticalTrackStyles = getCustomScrollbarTrackStyles(\r\n    'vertical',\r\n    color,\r\n    customColor,\r\n    variant,\r\n    size,\r\n    shape,\r\n    alignment,\r\n    Boolean(disabled),\r\n    animationsEnabled,\r\n    cssVars,\r\n    showIndicators\r\n  );\r\n\r\n  const horizontalTrackStyles = getCustomScrollbarTrackStyles(\r\n    'horizontal',\r\n    color,\r\n    customColor,\r\n    variant,\r\n    size,\r\n    shape,\r\n    alignment,\r\n    Boolean(disabled),\r\n    animationsEnabled,\r\n    cssVars,\r\n    showIndicators\r\n  );\r\n  \r\n  // Custom scrollbar thumb styles\r\n  const verticalThumbStyles = getCustomScrollbarThumbStyles(\r\n    'vertical',\r\n    color,\r\n    customColor,\r\n    variant,\r\n    size,\r\n    shape,\r\n    verticalThumbPosition,\r\n    verticalThumbSize,\r\n    Boolean(disabled),\r\n    isDragging,\r\n    animationsEnabled,\r\n    cssVars,\r\n    showIndicators\r\n  );\r\n  \r\n  const horizontalThumbStyles = getCustomScrollbarThumbStyles(\r\n    'horizontal',\r\n    color,\r\n    customColor,\r\n    variant,\r\n    size,\r\n    shape,\r\n    horizontalThumbPosition,\r\n    horizontalThumbSize,\r\n    Boolean(disabled),\r\n    isDragging,\r\n    animationsEnabled,\r\n    cssVars,\r\n    showIndicators\r\n  );\r\n  \r\n  const combinedStyles: React.CSSProperties = {\r\n    ...containerStyles,\r\n    ...style,\r\n  };\r\n  \r\n  // Handle webkit scrollbar styles via CSS injection\r\n  const webkitStyles = getWebKitScrollbarStyles(\r\n    color,\r\n    customColor,\r\n    variant,\r\n    size,\r\n    shape,\r\n    orientation,\r\n    visibility,\r\n    alignment,\r\n    Boolean(disabled),\r\n    animationsEnabled,\r\n    cssVars\r\n  );\r\n  \r\n  useEffect(() => {\r\n    // Apply webkit styles when using native scrollbar (both 'end' and 'start' alignments)\r\n    if (supportsWebKitScrollbar()) {\r\n      // Apply custom webkit scrollbar styles for both alignments\r\n      let css = createWebkitScrollbarCSS(uniqueId, webkitStyles);\r\n\r\n      // For both + start case, no special horizontal scrollbar handling needed\r\n\r\n      if (css) {\r\n        injectCSS(uniqueId, css);\r\n      }\r\n    }\r\n\r\n    return () => {\r\n      cleanupCSS(uniqueId);\r\n    };\r\n  }, [uniqueId, color, customColor, variant, size, shape, orientation, visibility, alignment, disabled, animationsEnabled, cssVars, isStartBothCase]);\r\n  \r\n  // Accessibility attributes\r\n  const ariaAttributes = getScrollbarAriaAttributes(\r\n    orientation,\r\n    orientation === 'vertical' ? scrollState.scrollTop : scrollState.scrollLeft,\r\n    orientation === 'vertical' ? scrollState.scrollHeight - scrollState.clientHeight : scrollState.scrollWidth - scrollState.clientWidth,\r\n    Boolean(disabled)\r\n  );\r\n  \r\n  return (\r\n    <div\r\n      className={className}\r\n      style={combinedStyles}\r\n      id={uniqueId}\r\n      {...ariaAttributes}\r\n      {...rest}\r\n    >\r\n      {/* Use standard structure for all cases */}\r\n      <div\r\n        ref={containerRef}\r\n        style={contentStyles}\r\n        onScroll={handleScroll}\r\n        tabIndex={disabled ? -1 : 0}\r\n      >\r\n        <div ref={contentRef} style={contentDirectionStyles}>\r\n          {children}\r\n        </div>\r\n      </div>\r\n      \r\n      {/* Custom vertical scrollbar - only show if webkit is not supported */}\r\n      {!supportsWebKitScrollbar() && needsVerticalScrollbar && (orientation === 'vertical' || orientation === 'both') && variant !== 'invisible' && (\r\n        <div\r\n          ref={verticalTrackRef}\r\n          style={verticalTrackStyles}\r\n          onClick={(e) => {\r\n            // Handle track click to jump to position\r\n            const rect = e.currentTarget.getBoundingClientRect();\r\n            const clickY = e.clientY - rect.top;\r\n            const trackHeight = rect.height;\r\n            const scrollPercentage = clickY / trackHeight;\r\n            const newScrollTop = scrollPercentage * (scrollState.scrollHeight - scrollState.clientHeight);\r\n            \r\n            if (containerRef.current) {\r\n              containerRef.current.scrollTop = newScrollTop;\r\n            }\r\n          }}\r\n        >\r\n          <div\r\n            ref={verticalThumbRef}\r\n            style={verticalThumbStyles}\r\n            onMouseDown={(e) => handleThumbMouseDown(e, 'vertical')}\r\n          />\r\n        </div>\r\n      )}\r\n      \r\n      {/* Custom horizontal scrollbar - only show if webkit is not supported */}\r\n      {!supportsWebKitScrollbar() && needsHorizontalScrollbar && (orientation === 'horizontal' || orientation === 'both') && variant !== 'invisible' && (\r\n        <div\r\n          ref={horizontalTrackRef}\r\n          style={horizontalTrackStyles}\r\n          onClick={(e) => {\r\n            // Handle track click to jump to position\r\n            const rect = e.currentTarget.getBoundingClientRect();\r\n            const clickX = e.clientX - rect.left;\r\n            const trackWidth = rect.width;\r\n            const scrollPercentage = clickX / trackWidth;\r\n            const newScrollLeft = scrollPercentage * (scrollState.scrollWidth - scrollState.clientWidth);\r\n            \r\n            if (containerRef.current) {\r\n              containerRef.current.scrollLeft = newScrollLeft;\r\n            }\r\n          }}\r\n        >\r\n          <div\r\n            ref={horizontalThumbRef}\r\n            style={horizontalThumbStyles}\r\n            onMouseDown={(e) => handleThumbMouseDown(e, 'horizontal')}\r\n          />\r\n        </div>\r\n      )}\r\n      \r\n      {/* Scroll indicators - Arrow icons in the track */}\r\n      {showIndicators && needsVerticalScrollbar && (orientation === 'vertical' || orientation === 'both') && variant !== 'invisible' && (\r\n        <>\r\n          {/* Top indicator */}\r\n          <div\r\n            style={getScrollIndicatorStyles(\r\n              'vertical',\r\n              color,\r\n              customColor,\r\n              size,\r\n              'top',\r\n              scrollState.scrollTop > 0,\r\n              Boolean(disabled),\r\n              animationsEnabled,\r\n              cssVars,\r\n              alignment,\r\n              variant\r\n            )}\r\n            onClick={() => {\r\n              if (containerRef.current && !disabled) {\r\n                containerRef.current.scrollTop = Math.max(0, scrollState.scrollTop - 100);\r\n              }\r\n            }}\r\n          >\r\n            <Icon \r\n              name=\"NavArrowUpSolid\" \r\n              size={size === 'xs' ? 12 : size === 'sm' ? 14 : size === 'md' ? 16 : size === 'lg' ? 18 : 20}\r\n              style={{ \r\n                transform: 'rotate(0deg)',\r\n                opacity: scrollState.scrollTop > 0 ? 1 : 0.3\r\n              }}\r\n            />\r\n          </div>\r\n          {/* Bottom indicator */}\r\n          <div\r\n            style={getScrollIndicatorStyles(\r\n              'vertical',\r\n              color,\r\n              customColor,\r\n              size,\r\n              'bottom',\r\n              scrollState.scrollTop < scrollState.scrollHeight - scrollState.clientHeight,\r\n              Boolean(disabled),\r\n              animationsEnabled,\r\n              cssVars,\r\n              alignment,\r\n              variant\r\n            )}\r\n            onClick={() => {\r\n              if (containerRef.current && !disabled) {\r\n                containerRef.current.scrollTop = Math.min(\r\n                  scrollState.scrollHeight - scrollState.clientHeight,\r\n                  scrollState.scrollTop + 100\r\n                );\r\n              }\r\n            }}\r\n          >\r\n            <Icon \r\n              name=\"NavArrowUpSolid\" \r\n              size={size === 'xs' ? 12 : size === 'sm' ? 14 : size === 'md' ? 16 : size === 'lg' ? 18 : 20}\r\n              style={{ \r\n                transform: 'rotate(180deg)',\r\n                opacity: scrollState.scrollTop < scrollState.scrollHeight - scrollState.clientHeight ? 1 : 0.3\r\n              }}\r\n            />\r\n          </div>\r\n        </>\r\n      )}\r\n      \r\n      {/* Horizontal scroll indicators */}\r\n      {showIndicators && needsHorizontalScrollbar && (orientation === 'horizontal' || orientation === 'both') && variant !== 'invisible' && (\r\n        <>\r\n          {/* Left indicator */}\r\n          <div\r\n            style={getScrollIndicatorStyles(\r\n              'horizontal',\r\n              color,\r\n              customColor,\r\n              size,\r\n              'left',\r\n              scrollState.scrollLeft > 0,\r\n              Boolean(disabled),\r\n              animationsEnabled,\r\n              cssVars,\r\n              alignment,\r\n              variant\r\n            )}\r\n            onClick={() => {\r\n              if (containerRef.current && !disabled) {\r\n                containerRef.current.scrollLeft = Math.max(0, scrollState.scrollLeft - 100);\r\n              }\r\n            }}\r\n          >\r\n            <Icon \r\n              name=\"NavArrowUpSolid\" \r\n              size={size === 'xs' ? 12 : size === 'sm' ? 14 : size === 'md' ? 16 : size === 'lg' ? 18 : 20}\r\n              style={{ \r\n                transform: 'rotate(-90deg)',\r\n                opacity: scrollState.scrollLeft > 0 ? 1 : 0.3\r\n              }}\r\n            />\r\n          </div>\r\n          {/* Right indicator */}\r\n          <div\r\n            style={getScrollIndicatorStyles(\r\n              'horizontal',\r\n              color,\r\n              customColor,\r\n              size,\r\n              'right',\r\n              scrollState.scrollLeft < scrollState.scrollWidth - scrollState.clientWidth,\r\n              Boolean(disabled),\r\n              animationsEnabled,\r\n              cssVars,\r\n              alignment,\r\n              variant\r\n            )}\r\n            onClick={() => {\r\n              if (containerRef.current && !disabled) {\r\n                containerRef.current.scrollLeft = Math.min(\r\n                  scrollState.scrollWidth - scrollState.clientWidth,\r\n                  scrollState.scrollLeft + 100\r\n                );\r\n              }\r\n            }}\r\n          >\r\n            <Icon \r\n              name=\"NavArrowUpSolid\" \r\n              size={size === 'xs' ? 12 : size === 'sm' ? 14 : size === 'md' ? 16 : size === 'lg' ? 18 : 20}\r\n              style={{ \r\n                transform: 'rotate(90deg)',\r\n                opacity: scrollState.scrollLeft < scrollState.scrollWidth - scrollState.clientWidth ? 1 : 0.3\r\n              }}\r\n            />\r\n          </div>\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n});\r\n\r\nScrollbar.displayName = 'Scrollbar';","import React from 'react';\r\nimport type { ToggleSize, ToggleColor, ToggleVariant } from './Toggle.types';\r\n\r\n// Get size-specific dimensions\r\nexport const getToggleDimensions = (size: ToggleSize) => {\r\n  switch (size) {\r\n    case 'xs':\r\n      return {\r\n        width: 32,\r\n        height: 18,\r\n        bubbleSize: 14,\r\n        padding: 2,\r\n      };\r\n    case 'sm':\r\n      return {\r\n        width: 36,\r\n        height: 20,\r\n        bubbleSize: 16,\r\n        padding: 2,\r\n      };\r\n    case 'lg':\r\n      return {\r\n        width: 56,\r\n        height: 32,\r\n        bubbleSize: 28,\r\n        padding: 2,\r\n      };\r\n    case 'xl':\r\n      return {\r\n        width: 64,\r\n        height: 36,\r\n        bubbleSize: 32,\r\n        padding: 2,\r\n      };\r\n    case 'md':\r\n    default:\r\n      return {\r\n        width: 44,\r\n        height: 24,\r\n        bubbleSize: 20,\r\n        padding: 2,\r\n      };\r\n  }\r\n};\r\n\r\n// Get color variables based on color prop\r\nexport const getToggleColors = (color: ToggleColor, checked: boolean, disabled: boolean, cssVars: any) => {\r\n  const colorMap: Record<string, any> = {\r\n    primary: {\r\n      main: cssVars.primary,\r\n      accent: cssVars.primaryAccent,\r\n      foreground: cssVars.primaryForeground,\r\n      hover: cssVars.primaryHover,\r\n      border: cssVars.primaryBorder,\r\n      background: cssVars.primaryBackground,\r\n    },\r\n    secondary: {\r\n      main: cssVars.secondary,\r\n      accent: cssVars.secondaryAccent,\r\n      foreground: cssVars.secondaryForeground,\r\n      hover: cssVars.secondaryHover,\r\n      border: cssVars.secondaryBorder,\r\n      background: cssVars.secondaryBackground,\r\n    },\r\n    success: {\r\n      main: cssVars.success,\r\n      accent: cssVars.successAccent,\r\n      foreground: cssVars.successForeground,\r\n      hover: cssVars.successHover,\r\n      border: cssVars.successBorder,\r\n      background: cssVars.successBackground,\r\n    },\r\n    warning: {\r\n      main: cssVars.warning,\r\n      accent: cssVars.warningAccent,\r\n      foreground: cssVars.warningForeground,\r\n      hover: cssVars.warningHover,\r\n      border: cssVars.warningBorder,\r\n      background: cssVars.warningBackground,\r\n    },\r\n    destructive: {\r\n      main: cssVars.destructive,\r\n      accent: cssVars.destructiveAccent,\r\n      foreground: cssVars.destructiveForeground || '#ffffff',\r\n      hover: cssVars.destructiveHover,\r\n      border: cssVars.destructiveBorder,\r\n      background: cssVars.destructiveBackground,\r\n    },\r\n    info: {\r\n      main: cssVars.info,\r\n      accent: cssVars.infoAccent,\r\n      foreground: cssVars.infoForeground,\r\n      hover: cssVars.infoHover,\r\n      border: cssVars.infoBorder,\r\n      background: cssVars.infoBackground,\r\n    },\r\n    custom: {\r\n      main: cssVars.primary,\r\n      accent: cssVars.primaryAccent,\r\n      foreground: cssVars.primaryForeground,\r\n      hover: cssVars.primaryHover,\r\n      border: cssVars.primaryBorder,\r\n      background: cssVars.primaryBackground,\r\n    },\r\n  };\r\n\r\n  return colorMap[color] || colorMap.primary;\r\n};\r\n\r\n// Main toggle container styles\r\nexport const getToggleContainerStyles = (\r\n  size: ToggleSize,\r\n  disabled: boolean,\r\n  className?: string\r\n): React.CSSProperties => {\r\n  const dimensions = getToggleDimensions(size);\r\n  \r\n  return {\r\n    display: 'inline-flex',\r\n    alignItems: 'center',\r\n    gap: size === 'sm' ? '8px' : size === 'lg' ? '12px' : '10px',\r\n    cursor: disabled ? 'not-allowed' : 'pointer',\r\n    fontFamily: 'inherit',\r\n  };\r\n};\r\n\r\n// Get variant-specific styles for toggle track\r\nexport const getVariantStyles = (\r\n  variant: ToggleVariant,\r\n  colors: any,\r\n  checked: boolean,\r\n  cssVars: any\r\n): React.CSSProperties => {\r\n  switch (variant) {\r\n    case 'solid':\r\n      // Background is always --color (main), never changes\r\n      // Toggle slider is always --color-foreground\r\n      return {\r\n        backgroundColor: colors.main,\r\n        borderColor: colors.main,\r\n      };\r\n    case 'ghost':\r\n      // Background uses cssVars.background (same as outline TextArea), toggle slider is --color-foreground\r\n      return {\r\n        backgroundColor: cssVars.background,\r\n        borderColor: cssVars.background,\r\n      };\r\n    case 'outline':\r\n      // Background always cssVars.background, border always --color (main)\r\n      return {\r\n        backgroundColor: cssVars.background,\r\n        borderColor: colors.main,\r\n      };\r\n    case 'glassmorphic':\r\n      // Glassmorphic background with window pane effect\r\n      const reflectionColor = colors.hover || colors.main || '#ffffff';\r\n      const topReflectionGradient = `linear-gradient(135deg, transparent 0%, ${reflectionColor}20 20%, ${reflectionColor}15 25%, transparent 35%)`;\r\n      const bottomReflectionGradient = `linear-gradient(135deg, transparent 45%, ${reflectionColor}25 55%, ${reflectionColor}20 65%, transparent 80%)`;\r\n\r\n      return {\r\n        background: `\r\n          ${topReflectionGradient},\r\n          ${bottomReflectionGradient},\r\n          rgba(255, 255, 255, 0.1)\r\n        `,\r\n        backdropFilter: 'blur(10px)',\r\n        borderColor: 'rgba(255, 255, 255, 0.2)',\r\n      };\r\n    default:\r\n      return {\r\n        backgroundColor: colors.main,\r\n        borderColor: colors.main,\r\n      };\r\n  }\r\n};\r\n\r\n// Toggle track (background) styles (matching Search component with 2px border)\r\nexport const getToggleTrackStyles = (\r\n  size: ToggleSize,\r\n  color: ToggleColor,\r\n  variant: ToggleVariant,\r\n  checked: boolean,\r\n  disabled: boolean,\r\n  focused: boolean,\r\n  cssVars: any\r\n): React.CSSProperties => {\r\n  const dimensions = getToggleDimensions(size);\r\n  const colors = getToggleColors(color, checked, disabled, cssVars);\r\n  const variantStyles = getVariantStyles(variant, colors, checked, cssVars);\r\n\r\n  return {\r\n    position: 'relative',\r\n    width: `${dimensions.width}px`,\r\n    height: `${dimensions.height}px`,\r\n    border: `2px solid`,\r\n    borderRadius: `${dimensions.height}px`,\r\n    transition: 'background-color var(--toggle-duration) var(--animation-spring), border-color var(--toggle-duration) var(--animation-spring), opacity var(--toggle-duration) var(--animation-spring)',\r\n    outline: focused ? `2px solid ${colors.main}` : 'none',\r\n    outlineOffset: '2px',\r\n    opacity: disabled ? 0.4 : 1,\r\n    ...variantStyles,\r\n  };\r\n};\r\n\r\n// Get bubble styles based on variant\r\nexport const getBubbleStyles = (\r\n  size: ToggleSize,\r\n  color: ToggleColor,\r\n  checked: boolean,\r\n  disabled: boolean,\r\n  cssVars: any,\r\n  variant: ToggleVariant\r\n): React.CSSProperties => {\r\n  const dimensions = getToggleDimensions(size);\r\n  const colors = getToggleColors(color, checked, disabled, cssVars);\r\n\r\n  // Border width of the track\r\n  const borderWidth = 2;\r\n\r\n  // Calculate the available space inside the track (excluding borders)\r\n  const trackInnerWidth = dimensions.width - (borderWidth * 2);\r\n  const trackInnerHeight = dimensions.height - (borderWidth * 2);\r\n\r\n  // Calculate horizontal positions for unchecked and checked states\r\n  // Start position: padding from the left edge\r\n  const startX = dimensions.padding;\r\n  // End position: track inner width minus bubble size minus padding\r\n  const endX = trackInnerWidth - dimensions.bubbleSize - dimensions.padding;\r\n  // Distance to travel\r\n  const travelDistance = endX - startX;\r\n\r\n  // Base bubble styles\r\n  const baseStyles: React.CSSProperties = {\r\n    position: 'absolute',\r\n    // Center vertically using top 50% and translateY\r\n    top: '50%',\r\n    // Start from the left padding position\r\n    left: `${startX}px`,\r\n    width: `${dimensions.bubbleSize}px`,\r\n    height: `${dimensions.bubbleSize}px`,\r\n    borderRadius: '50%',\r\n    // When checked, translateX by the travel distance; always center vertically with translateY(-50%)\r\n    transform: checked\r\n      ? `translateX(${travelDistance}px) translateY(-50%)`\r\n      : 'translateX(0) translateY(-50%)',\r\n    transition: 'all var(--toggle-duration) var(--animation-spring)',\r\n  };\r\n\r\n  // Variant-specific bubble styles\r\n  if (variant === 'glassmorphic') {\r\n    // Window pane with faint color-specific glow\r\n    return {\r\n      ...baseStyles,\r\n      backgroundColor: 'rgba(255, 255, 255, 0.2)',\r\n      backdropFilter: 'blur(10px)',\r\n      WebkitBackdropFilter: 'blur(10px)',\r\n      border: '1px solid rgba(255, 255, 255, 0.3)',\r\n      boxShadow: `0 0 10px ${colors.main}40, 0 2px 4px rgba(0, 0, 0, 0.1)`,\r\n    };\r\n  }\r\n\r\n  // For all other variants: use --color-foreground\r\n  return {\r\n    ...baseStyles,\r\n    backgroundColor: colors.foreground,\r\n    boxShadow: '0 2px 4px rgba(0, 0, 0, 0.1)',\r\n  };\r\n};\r\n\r\n// Hidden input styles\r\nexport const getHiddenInputStyles = (): React.CSSProperties => ({\r\n  position: 'absolute',\r\n  opacity: 0,\r\n  width: 0,\r\n  height: 0,\r\n  margin: 0,\r\n  padding: 0,\r\n  border: 'none',\r\n  outline: 'none',\r\n});\r\n\r\n// Label styles\r\nexport const getLabelStyles = (\r\n  size: ToggleSize,\r\n  disabled: boolean,\r\n  position: 'left' | 'right',\r\n  cssVars: any\r\n): React.CSSProperties => {\r\n  const fontSizeMap = {\r\n    xs: '12px',\r\n    sm: '14px',\r\n    md: '16px',\r\n    lg: '18px',\r\n    xl: '20px',\r\n  };\r\n  const fontSize = fontSizeMap[size] || fontSizeMap.md;\r\n  const order = position === 'left' ? -1 : 1;\r\n  \r\n  return {\r\n    fontSize,\r\n    fontWeight: 500,\r\n    color: disabled ? cssVars.mutedForeground : cssVars.foreground,\r\n    order,\r\n    userSelect: 'none',\r\n    lineHeight: 1.4,\r\n  };\r\n};\r\n\r\n// Description styles\r\nexport const getDescriptionStyles = (\r\n  size: ToggleSize,\r\n  disabled: boolean,\r\n  cssVars: any\r\n): React.CSSProperties => {\r\n  const fontSizeMap = {\r\n    xs: '10px',\r\n    sm: '12px',\r\n    md: '13px',\r\n    lg: '14px',\r\n    xl: '16px',\r\n  };\r\n  const fontSize = fontSizeMap[size] || fontSizeMap.md;\r\n  \r\n  return {\r\n    fontSize,\r\n    color: disabled ? cssVars.mutedForeground : cssVars.mutedForeground,\r\n    marginTop: '2px',\r\n    lineHeight: 1.3,\r\n    userSelect: 'none',\r\n  };\r\n};\r\n\r\n// Label container styles (for label + description)\r\nexport const getLabelContainerStyles = (\r\n  position: 'left' | 'right'\r\n): React.CSSProperties => ({\r\n  display: 'flex',\r\n  flexDirection: 'column',\r\n  order: position === 'left' ? -1 : 1,\r\n});\r\n","import React, { forwardRef, useRef, useImperativeHandle, useState, useId } from 'react';\r\nimport { useCSSVariables } from '../../../providers';\r\nimport { extractFormProps, UNIVERSAL_DEFAULTS } from '../types';\r\nimport { ToggleProps, ToggleRef } from './Toggle.types';\r\nimport {\r\n  getToggleContainerStyles,\r\n  getToggleTrackStyles,\r\n  getBubbleStyles,\r\n  getHiddenInputStyles,\r\n  getLabelStyles,\r\n  getDescriptionStyles,\r\n  getLabelContainerStyles,\r\n} from './Toggle.styles';\r\n\r\nexport const Toggle = forwardRef<ToggleRef, ToggleProps>((allProps, ref) => {\r\n  // Extract onChange separately since it has custom signature\r\n  const { onChange, ...propsForExtraction } = allProps;\r\n  \r\n  // Extract form props and component-specific props\r\n  const [formProps, componentProps] = extractFormProps(propsForExtraction);\r\n  \r\n  // Destructure form props with defaults\r\n  const {\r\n    color = UNIVERSAL_DEFAULTS.color,\r\n    variant = UNIVERSAL_DEFAULTS.variant,\r\n    size = UNIVERSAL_DEFAULTS.size,\r\n    disabled = UNIVERSAL_DEFAULTS.disabled,\r\n    label,\r\n    className,\r\n    style,\r\n    id: providedId,\r\n    // Form-specific props\r\n    name,\r\n    value,\r\n    required,\r\n    'aria-label': ariaLabel,\r\n    'aria-describedby': ariaDescribedBy,\r\n  } = formProps;\r\n  \r\n  // Destructure component-specific props\r\n  const {\r\n    checked,\r\n    defaultChecked = false,\r\n    description,\r\n    labelPosition = 'right',\r\n  } = componentProps;\r\n  // Get CSS variables for theming\r\n  const cssVars = useCSSVariables();\r\n  \r\n  // Generate unique ID if not provided\r\n  const generatedId = useId();\r\n  const id = providedId || generatedId;\r\n  \r\n  // Internal state for uncontrolled mode\r\n  const [internalChecked, setInternalChecked] = useState(defaultChecked);\r\n  const [focused, setFocused] = useState(false);\r\n  \r\n  // Determine if controlled or uncontrolled\r\n  const isControlled = checked !== undefined;\r\n  const isChecked = isControlled ? checked : internalChecked;\r\n  \r\n  // Refs\r\n  const inputRef = useRef<HTMLInputElement>(null);\r\n  \r\n  // Expose imperative methods\r\n  useImperativeHandle(ref, () => ({\r\n    focus: () => inputRef.current?.focus(),\r\n    blur: () => inputRef.current?.blur(),\r\n    click: () => inputRef.current?.click(),\r\n  }));\r\n  \r\n  // Handle change\r\n  const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    const newChecked = event.target.checked;\r\n    \r\n    if (!isControlled) {\r\n      setInternalChecked(newChecked);\r\n    }\r\n    \r\n    // Focus the toggle after change\r\n    setTimeout(() => {\r\n      inputRef.current?.focus();\r\n    }, 0);\r\n    \r\n    onChange?.(newChecked, event);\r\n  };\r\n  \r\n  // Handle focus\r\n  const handleFocus = () => {\r\n    setFocused(true);\r\n  };\r\n  \r\n  // Handle blur\r\n  const handleBlur = () => {\r\n    setFocused(false);\r\n  };\r\n  \r\n  // Handle container click\r\n  const handleContainerClick = (event: React.MouseEvent) => {\r\n    // Prevent double triggering when clicking the input directly\r\n    if (event.target !== inputRef.current) {\r\n      inputRef.current?.click();\r\n      // Ensure focus after click\r\n      setTimeout(() => {\r\n        inputRef.current?.focus();\r\n      }, 0);\r\n    }\r\n  };\r\n  \r\n  // Generate IDs for accessibility\r\n  const labelId = label ? `${id}-label` : undefined;\r\n  const descriptionId = description ? `${id}-description` : undefined;\r\n  \r\n  // Build aria-describedby\r\n  const ariaDescribedByValue = [ariaDescribedBy, descriptionId].filter(Boolean).join(' ') || undefined;\r\n  \r\n  // Render label content\r\n  const renderLabelContent = () => {\r\n    if (!label && !description) return null;\r\n    \r\n    if (description) {\r\n      return (\r\n        <div style={getLabelContainerStyles(labelPosition)}>\r\n          {label && (\r\n            <label\r\n              id={labelId}\r\n              htmlFor={id}\r\n              style={getLabelStyles(size, disabled || false, labelPosition, cssVars)}\r\n            >\r\n              {label}\r\n            </label>\r\n          )}\r\n          <span\r\n            id={descriptionId}\r\n            style={getDescriptionStyles(size, disabled || false, cssVars)}\r\n          >\r\n            {description}\r\n          </span>\r\n        </div>\r\n      );\r\n    }\r\n    \r\n    return (\r\n      <label\r\n        id={labelId}\r\n        htmlFor={id}\r\n        style={getLabelStyles(size, disabled || false, labelPosition, cssVars)}\r\n      >\r\n        {label}\r\n      </label>\r\n    );\r\n  };\r\n  \r\n  return (\r\n    <div\r\n      className={className}\r\n      style={{\r\n        ...getToggleContainerStyles(size, disabled || false),\r\n        ...style,\r\n      }}\r\n      onClick={handleContainerClick}\r\n    >\r\n      {/* Hidden input for form integration and accessibility */}\r\n      <input\r\n        ref={inputRef}\r\n        type=\"checkbox\"\r\n        id={id}\r\n        name={name}\r\n        value={value}\r\n        checked={isChecked}\r\n        onChange={handleChange}\r\n        onFocus={handleFocus}\r\n        onBlur={handleBlur}\r\n        disabled={disabled}\r\n        required={required}\r\n        aria-label={ariaLabel}\r\n        aria-describedby={ariaDescribedByValue}\r\n        aria-labelledby={labelId}\r\n        style={getHiddenInputStyles()}\r\n      />\r\n      \r\n      {/* Toggle track with animated bubble */}\r\n      <div\r\n        role=\"presentation\"\r\n        style={getToggleTrackStyles(size, color, variant, isChecked, disabled || false, focused, cssVars)}\r\n      >\r\n        {/* Main bubble */}\r\n        <div\r\n          role=\"presentation\"\r\n          style={getBubbleStyles(size, color, isChecked, disabled || false, cssVars, variant)}\r\n        />\r\n      </div>\r\n      \r\n      {/* Label and description */}\r\n      {renderLabelContent()}\r\n    </div>\r\n  );\r\n});\r\n\r\nToggle.displayName = 'Toggle';","import { CSSProperties } from 'react';\r\nimport type { SegmentedControlSize, SegmentedControlVariant, SegmentedControlColor, SegmentedControlShape } from './SegmentedControl.types';\r\n\r\n// Safe CSS variable access with fallback\r\nconst getCSSVar = (cssVars: any, key: string, fallback: string = '#000000'): string => {\r\n  return cssVars?.[key] || fallback;\r\n};\r\n\r\n// Get color variables based on color prop\r\nexport const getColorVariables = (color: SegmentedControlColor, customColor: string | undefined, cssVars: any) => {\r\n  if (color === 'custom' && customColor) {\r\n    return {\r\n      main: customColor,\r\n      foreground: '#ffffff',\r\n      background: customColor + '10',\r\n      border: customColor,\r\n      hover: customColor + '20',\r\n    };\r\n  }\r\n\r\n  // Guard against undefined cssVars\r\n  if (!cssVars) {\r\n    return {\r\n      main: '#0066cc',\r\n      background: '#eff6ff',\r\n      foreground: '#ffffff',\r\n      hover: '#0052a3',\r\n      accent: '#0066cc',\r\n      shadow: 'rgba(0, 0, 0, 0.1)',\r\n      disabled: '#d1d5db',\r\n      border: '#0066cc',\r\n    };\r\n  }\r\n\r\n  const colorMap: Record<string, any> = {\r\n    primary: {\r\n      main: cssVars.primary || '#0066cc',\r\n      background: cssVars.primaryBackground || '#eff6ff',\r\n      foreground: cssVars.primaryForeground || '#ffffff',\r\n      hover: cssVars.primaryHover || '#0052a3',\r\n      accent: cssVars.primaryAccent || '#0066cc',\r\n      shadow: cssVars.primaryShadow || 'rgba(0, 0, 0, 0.1)',\r\n      disabled: cssVars.primaryDisabled || '#d1d5db',\r\n      border: cssVars.primaryBorder || '#0066cc',\r\n    },\r\n    secondary: {\r\n      main: cssVars.secondary || '#6b7280',\r\n      background: cssVars.secondaryBackground || '#f9fafb',\r\n      foreground: cssVars.secondaryForeground || '#ffffff',\r\n      hover: cssVars.secondaryHover || '#4b5563',\r\n      accent: cssVars.secondaryAccent || '#6b7280',\r\n      shadow: cssVars.secondaryShadow || 'rgba(0, 0, 0, 0.1)',\r\n      disabled: cssVars.secondaryDisabled || '#d1d5db',\r\n      border: cssVars.secondaryBorder || '#6b7280',\r\n    },\r\n    success: {\r\n      main: cssVars.success || '#10b981',\r\n      background: cssVars.successBackground || '#ecfdf5',\r\n      foreground: cssVars.successForeground || '#ffffff',\r\n      hover: cssVars.successHover || '#059669',\r\n      accent: cssVars.successAccent || '#10b981',\r\n      shadow: cssVars.successShadow || 'rgba(0, 0, 0, 0.1)',\r\n      disabled: cssVars.successDisabled || '#d1d5db',\r\n      border: cssVars.successBorder || '#10b981',\r\n    },\r\n    warning: {\r\n      main: cssVars.warning || '#f59e0b',\r\n      background: cssVars.warningBackground || '#fffbeb',\r\n      foreground: cssVars.warningForeground || '#ffffff',\r\n      hover: cssVars.warningHover || '#d97706',\r\n      accent: cssVars.warningAccent || '#f59e0b',\r\n      shadow: cssVars.warningShadow || 'rgba(0, 0, 0, 0.1)',\r\n      disabled: cssVars.warningDisabled || '#d1d5db',\r\n      border: cssVars.warningBorder || '#f59e0b',\r\n    },\r\n    destructive: {\r\n      main: cssVars.destructive || '#ef4444',\r\n      background: cssVars.destructiveBackground || '#fef2f2',\r\n      foreground: cssVars.destructiveForeground || '#ffffff',\r\n      hover: cssVars.destructiveHover || '#dc2626',\r\n      accent: cssVars.destructiveAccent || '#ef4444',\r\n      shadow: cssVars.destructiveShadow || 'rgba(0, 0, 0, 0.1)',\r\n      disabled: cssVars.destructiveDisabled || '#d1d5db',\r\n      border: cssVars.destructiveBorder || '#ef4444',\r\n    },\r\n    info: {\r\n      main: cssVars.info || '#3b82f6',\r\n      background: cssVars.infoBackground || '#eff6ff',\r\n      foreground: cssVars.infoForeground || '#ffffff',\r\n      hover: cssVars.infoHover || '#2563eb',\r\n      accent: cssVars.infoAccent || '#3b82f6',\r\n      shadow: cssVars.infoShadow || 'rgba(0, 0, 0, 0.1)',\r\n      disabled: cssVars.infoDisabled || '#d1d5db',\r\n      border: cssVars.infoBorder || '#3b82f6',\r\n    },\r\n  };\r\n\r\n  return colorMap[color] || colorMap.primary;\r\n};\r\n\r\n// Size configurations following design standards\r\nexport const getSegmentedControlDimensions = (size: SegmentedControlSize) => {\r\n  switch (size) {\r\n    case 'xs':\r\n      return {\r\n        height: 40,\r\n        minWidth: 200,\r\n        fontSize: '14px',\r\n        padding: '4px',\r\n        borderRadius: 12,\r\n      };\r\n    case 'sm':\r\n      return {\r\n        height: 40,\r\n        minWidth: 220,\r\n        fontSize: '14px',\r\n        padding: '4px',\r\n        borderRadius: 12,\r\n      };\r\n    case 'lg':\r\n      return {\r\n        height: 52,\r\n        minWidth: 260,\r\n        fontSize: '16px',\r\n        padding: '4px',\r\n        borderRadius: 12,\r\n      };\r\n    case 'xl':\r\n      return {\r\n        height: 60,\r\n        minWidth: 280,\r\n        fontSize: '18px',\r\n        padding: '4px',\r\n        borderRadius: 12,\r\n      };\r\n    case 'md':\r\n    default:\r\n      return {\r\n        height: 48,\r\n        minWidth: 240,\r\n        fontSize: '16px',\r\n        padding: '4px',\r\n        borderRadius: 12,\r\n      };\r\n  }\r\n};\r\n\r\n// Get variant styles for container\r\nexport const getVariantStyles = (\r\n  variant: SegmentedControlVariant,\r\n  color: SegmentedControlColor,\r\n  customColor: string | undefined,\r\n  cssVars: any,\r\n  error: boolean\r\n): CSSProperties => {\r\n  const colors = getColorVariables(color, customColor, cssVars);\r\n\r\n  // Error state override\r\n  if (error) {\r\n    const baseErrorStyle = {\r\n      borderWidth: '2px',\r\n      borderStyle: 'solid' as const,\r\n      borderColor: getCSSVar(cssVars, 'destructive', '#ef4444'),\r\n    };\r\n\r\n    switch (variant) {\r\n      case 'solid':\r\n        return {\r\n          ...baseErrorStyle,\r\n          backgroundColor: getCSSVar(cssVars, 'destructiveAccent', getCSSVar(cssVars, 'destructive', '#ef4444')),\r\n        };\r\n      case 'ghost':\r\n        return {\r\n          ...baseErrorStyle,\r\n          backgroundColor: 'transparent',\r\n        };\r\n      case 'glassmorphic':\r\n        return {\r\n          ...baseErrorStyle,\r\n          backgroundColor: getCSSVar(cssVars, 'destructiveBackground', '#fef2f2'),\r\n        };\r\n      case 'outline':\r\n      default:\r\n        return {\r\n          ...baseErrorStyle,\r\n          backgroundColor: getCSSVar(cssVars, 'background', '#ffffff'),\r\n        };\r\n    }\r\n  }\r\n\r\n  // Normal state styles by variant\r\n  switch (variant) {\r\n    case 'solid':\r\n      return {\r\n        borderColor: colors.main, // --{{color}}\r\n        backgroundColor: colors.main, // --{{color}}\r\n        borderWidth: '2px',\r\n        borderStyle: 'solid' as const,\r\n      };\r\n    case 'ghost':\r\n      return {\r\n        borderColor: 'transparent',\r\n        backgroundColor: 'transparent',\r\n        borderWidth: '2px',\r\n        borderStyle: 'solid' as const,\r\n      };\r\n    case 'glassmorphic':\r\n      return {\r\n        borderColor: colors.border,\r\n        backgroundColor: colors.background,\r\n        borderWidth: '2px',\r\n        borderStyle: 'solid' as const,\r\n        backdropFilter: 'blur(10px)',\r\n        WebkitBackdropFilter: 'blur(10px)',\r\n      };\r\n    case 'outline':\r\n    default:\r\n      return {\r\n        borderColor: colors.main,\r\n        backgroundColor: getCSSVar(cssVars, 'background', '#ffffff'),\r\n        borderWidth: '2px',\r\n        borderStyle: 'solid' as const,\r\n      };\r\n  }\r\n};\r\n\r\n// Get shape styles based on shape prop\r\nexport const getShapeStyles = (shape: SegmentedControlShape, size: SegmentedControlSize): CSSProperties => {\r\n  const dimensions = getSegmentedControlDimensions(size);\r\n\r\n  switch (shape) {\r\n    case 'sharp':\r\n      return { borderRadius: '0' };\r\n    case 'round':\r\n      return { borderRadius: `${dimensions.borderRadius}px` };\r\n    case 'pill':\r\n      return { borderRadius: '9999px' };\r\n    default:\r\n      return { borderRadius: `${dimensions.borderRadius}px` };\r\n  }\r\n};\r\n\r\n// Main container styles\r\nexport const getContainerStyles = (\r\n  size: SegmentedControlSize,\r\n  variant: SegmentedControlVariant,\r\n  color: SegmentedControlColor,\r\n  customColor: string | undefined,\r\n  shape: SegmentedControlShape,\r\n  disabled: boolean,\r\n  error: boolean,\r\n  animationsEnabled: boolean,\r\n  cssVars: any,\r\n  fullWidth?: boolean,\r\n  itemCount?: number\r\n): CSSProperties => {\r\n  const dimensions = getSegmentedControlDimensions(size);\r\n  const variantStyles = getVariantStyles(variant, color, customColor, cssVars, error);\r\n  const shapeStyles = getShapeStyles(shape, size);\r\n\r\n  return {\r\n    position: 'relative',\r\n    display: 'inline-flex',\r\n    width: fullWidth ? '100%' : 'auto',\r\n    minWidth: `${dimensions.minWidth}px`,\r\n    height: `${dimensions.height}px`,\r\n    fontFamily: 'inherit',\r\n    transition: animationsEnabled\r\n      ? 'border-color var(--duration-fast) var(--animation-smooth), background-color var(--duration-fast) var(--animation-smooth), opacity var(--duration-fast) var(--animation-smooth)'\r\n      : 'none',\r\n    cursor: disabled ? 'not-allowed' : 'auto',\r\n    opacity: disabled ? 0.6 : 1,\r\n    padding: `${dimensions.padding}px`,\r\n    boxSizing: 'border-box',\r\n    ...variantStyles,\r\n    ...shapeStyles,\r\n  };\r\n};\r\n\r\n// Segment styles\r\nexport const getSegmentStyles = (\r\n  size: SegmentedControlSize,\r\n  variant: SegmentedControlVariant,\r\n  color: SegmentedControlColor,\r\n  customColor: string | undefined,\r\n  shape: SegmentedControlShape,\r\n  isSelected: boolean,\r\n  disabled: boolean,\r\n  animationsEnabled: boolean,\r\n  cssVars: any,\r\n  hasIsometricAnimation?: boolean\r\n): CSSProperties => {\r\n  const dimensions = getSegmentedControlDimensions(size);\r\n  const colors = getColorVariables(color, customColor, cssVars);\r\n\r\n  const getSegmentColor = () => {\r\n    if (disabled) {\r\n      return getCSSVar(cssVars, 'mutedForeground', '#9ca3af');\r\n    }\r\n\r\n    // Solid variant: all text is white, selected text uses --color\r\n    if (variant === 'solid') {\r\n      if (isSelected) {\r\n        return colors.main; // --{{color}}\r\n      }\r\n      return getCSSVar(cssVars, 'foreground', '#ffffff'); // white\r\n    }\r\n\r\n    if (isSelected) {\r\n      return colors.main;\r\n    }\r\n\r\n    return getCSSVar(cssVars, 'mutedForeground', '#9ca3af');\r\n  };\r\n\r\n  // For isometric mode, offset the selected segment text to align with the elevated indicator\r\n  const textTransform = isSelected && hasIsometricAnimation\r\n    ? 'translate(-3px, -3px)'\r\n    : 'none';\r\n\r\n  return {\r\n    flex: 1,\r\n    minWidth: 0,\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    position: 'relative',\r\n    zIndex: 2,\r\n    fontSize: dimensions.fontSize,\r\n    fontWeight: '500',\r\n    color: getSegmentColor(),\r\n    cursor: disabled ? 'not-allowed' : 'pointer',\r\n    transition: animationsEnabled\r\n      ? 'color var(--duration-fast) var(--animation-smooth), transform 0.3s cubic-bezier(0.34, 1.56, 0.64, 1)'\r\n      : 'none',\r\n    border: 'none',\r\n    backgroundColor: 'transparent',\r\n    padding: '0 16px',\r\n    whiteSpace: 'nowrap',\r\n    overflow: 'hidden',\r\n    textOverflow: 'ellipsis',\r\n    userSelect: 'none',\r\n    outline: 'none',\r\n    boxSizing: 'border-box',\r\n    borderRadius: 'inherit',\r\n    transform: textTransform,\r\n  };\r\n};\r\n\r\n// Indicator styles (the sliding background behind selected segment)\r\nexport const getIndicatorStyles = (\r\n  selectedIndex: number,\r\n  itemCount: number,\r\n  variant: SegmentedControlVariant,\r\n  color: SegmentedControlColor,\r\n  customColor: string | undefined,\r\n  shape: SegmentedControlShape,\r\n  size: SegmentedControlSize,\r\n  animationsEnabled: boolean,\r\n  cssVars: any,\r\n  hasIsometricAnimation?: boolean\r\n): any => {\r\n  const translateX = `${selectedIndex * 100}%`;\r\n  const colors = getColorVariables(color, customColor, cssVars);\r\n  const dimensions = getSegmentedControlDimensions(size);\r\n\r\n  // Get indicator background based on variant\r\n  const getIndicatorBackground = () => {\r\n    switch (variant) {\r\n      case 'solid':\r\n        return colors.foreground; // white --{{color}}-foreground\r\n      case 'outline':\r\n        return getCSSVar(cssVars, 'background', '#ffffff');\r\n      case 'ghost':\r\n        return colors.background || colors.main + '10';\r\n      case 'glassmorphic':\r\n        return 'rgba(255, 255, 255, 0.1)';\r\n      default:\r\n        return getCSSVar(cssVars, 'background', '#ffffff');\r\n    }\r\n  };\r\n\r\n  // Get border styles\r\n  const getBorderStyles = () => {\r\n    switch (variant) {\r\n      case 'solid':\r\n        return {\r\n          borderWidth: '0',\r\n          borderStyle: 'none' as const,\r\n          backdropFilter: 'none',\r\n          WebkitBackdropFilter: 'none',\r\n        };\r\n      case 'outline':\r\n        return {\r\n          borderWidth: '2px',\r\n          borderStyle: 'solid' as const,\r\n          borderColor: colors.main,\r\n          backdropFilter: 'none',\r\n          WebkitBackdropFilter: 'none',\r\n        };\r\n      case 'ghost':\r\n        return {\r\n          borderWidth: '0',\r\n          borderStyle: 'none' as const,\r\n          backdropFilter: 'none',\r\n          WebkitBackdropFilter: 'none',\r\n        };\r\n      case 'glassmorphic':\r\n        return {\r\n          borderWidth: '1px',\r\n          borderStyle: 'solid' as const,\r\n          borderColor: 'rgba(255, 255, 255, 0.2)',\r\n          backdropFilter: 'blur(16px) saturate(180%)',\r\n          WebkitBackdropFilter: 'blur(16px) saturate(180%)',\r\n        };\r\n      default:\r\n        return {\r\n          borderWidth: '1px',\r\n          borderStyle: 'solid' as const,\r\n          borderColor: getCSSVar(cssVars, 'border', '#e5e7eb'),\r\n        };\r\n    }\r\n  };\r\n\r\n  // Get shape radius for indicator (should be slightly smaller than container)\r\n  const getIndicatorRadius = () => {\r\n    switch (shape) {\r\n      case 'sharp':\r\n        return '0';\r\n      case 'round':\r\n        return `${Math.max(0, dimensions.borderRadius - 2)}px`;\r\n      case 'pill':\r\n        return '9999px';\r\n      default:\r\n        return `${Math.max(0, dimensions.borderRadius - 2)}px`;\r\n    }\r\n  };\r\n\r\n  // Get box shadow based on variant\r\n  const getIndicatorShadow = () => {\r\n    if (variant === 'ghost') {\r\n      return 'none';\r\n    }\r\n    if (variant === 'glassmorphic') {\r\n      // Convert hex color to rgba for glow effect\r\n      const hexToRgba = (hex: string, alpha: number) => {\r\n        const cleanHex = hex.replace('#', '');\r\n        const r = parseInt(cleanHex.substring(0, 2), 16);\r\n        const g = parseInt(cleanHex.substring(2, 4), 16);\r\n        const b = parseInt(cleanHex.substring(4, 6), 16);\r\n        return `rgba(${r}, ${g}, ${b}, ${alpha})`;\r\n      };\r\n\r\n      // All glow colors use the component's --color\r\n      const outerGlowColor = hexToRgba(colors.main, 0.37); // Main shadow glow\r\n      const mediumGlowColor = hexToRgba(colors.main, 0.4); // Medium glow\r\n      const innerGlowColor = hexToRgba(colors.main, 0.2);  // Inner glow\r\n\r\n      return `0 8px 32px 0 ${outerGlowColor}, 0 0 20px ${mediumGlowColor}, inset 0 0 20px ${innerGlowColor}`;\r\n    }\r\n    return `0 1px 2px ${getCSSVar(cssVars, 'shadowSm', 'rgba(0, 0, 0, 0.05)')}`;\r\n  };\r\n\r\n  const baseIndicatorStyles = {\r\n    position: hasIsometricAnimation ? 'relative' as const : 'absolute' as const,\r\n    top: hasIsometricAnimation ? '0' : '2px',\r\n    left: hasIsometricAnimation ? '0' : '2px',\r\n    width: hasIsometricAnimation ? '100%' : `calc((100% - 4px) / ${itemCount})`,\r\n    height: hasIsometricAnimation ? '100%' : 'calc(100% - 4px)',\r\n    borderRadius: getIndicatorRadius(),\r\n    backgroundColor: getIndicatorBackground(),\r\n    transform: hasIsometricAnimation ? 'translate(0, 0)' : `translateX(${translateX})`,\r\n    transition: animationsEnabled\r\n      ? 'transform 0.5s cubic-bezier(0.34, 1.56, 0.64, 1), box-shadow 0.3s ease-in-out, backdrop-filter 0.3s ease-in-out'\r\n      : 'none',\r\n    zIndex: 1,\r\n    boxShadow: getIndicatorShadow(),\r\n    pointerEvents: hasIsometricAnimation ? 'auto' : 'none',\r\n    ...getBorderStyles(),\r\n  };\r\n\r\n  // Apply isometric styles if needed\r\n  if (hasIsometricAnimation) {\r\n    const isometricStyles = getIsometricIndicatorStyles(colors, variant, animationsEnabled);\r\n    return {\r\n      ...baseIndicatorStyles,\r\n      ...isometricStyles,\r\n    };\r\n  }\r\n\r\n  return baseIndicatorStyles;\r\n};\r\n\r\n// Get isometric container styles (wrapper for indicator + shadow)\r\n// Container adjusted to center the 3D effect within each segment\r\nexport const getIsometricContainerStyles = (selectedIndex: number, itemCount: number): CSSProperties => ({\r\n  position: 'absolute',\r\n  top: '1px',\r\n  left: '1px',\r\n  width: `calc((100% - 2px) / ${itemCount})`,\r\n  height: 'calc(100% - 2px)',\r\n  transform: `translateX(${selectedIndex * 100}%)`,\r\n  transition: 'transform 0.5s cubic-bezier(0.34, 1.56, 0.64, 1)',\r\n  pointerEvents: 'none', // Container doesn't capture events\r\n});\r\n\r\n// Get isometric indicator styles (the main indicator element)\r\nexport const getIsometricIndicatorStyles = (\r\n  color: any,\r\n  variant: SegmentedControlVariant,\r\n  animationsEnabled: boolean\r\n): any => {\r\n  const baseStyles = {\r\n    position: 'relative' as const,\r\n    zIndex: 1,\r\n    // Offset the indicator up and left so the shadow appears centered\r\n    // Default position has the indicator offset from the shadow\r\n    transform: 'translate(-3px, -3px)',\r\n    transition: animationsEnabled\r\n      ? 'transform 0.3s cubic-bezier(0.34, 1.56, 0.64, 1)'\r\n      : 'none',\r\n    pointerEvents: 'none', // Indicator doesn't capture events - hover is handled by segment button\r\n  };\r\n\r\n  // For solid variant with isometric, add border matching the shadow color\r\n  if (variant === 'solid') {\r\n    return {\r\n      ...baseStyles,\r\n      borderWidth: '2px',\r\n      borderStyle: 'solid' as const,\r\n      borderColor: color.hover || color.main, // Match shadow color for consistency\r\n    };\r\n  }\r\n\r\n  return baseStyles;\r\n};\r\n\r\n// Get isometric shadow element styles for indicator\r\nexport const getIsometricShadowStyles = (\r\n  color: any,\r\n  variant: SegmentedControlVariant,\r\n  shape: SegmentedControlShape,\r\n  size: SegmentedControlSize,\r\n  animationsEnabled: boolean\r\n): CSSProperties => {\r\n  // Ghost and glassmorphic variants don't support isometric animation\r\n  if (variant === 'ghost' || variant === 'glassmorphic') {\r\n    return { display: 'none' };\r\n  }\r\n\r\n  const dimensions = getSegmentedControlDimensions(size);\r\n\r\n  // Get the same border radius as the indicator\r\n  const getIndicatorRadius = () => {\r\n    switch (shape) {\r\n      case 'sharp':\r\n        return '0';\r\n      case 'round':\r\n        return `${Math.max(0, dimensions.borderRadius - 2)}px`;\r\n      case 'pill':\r\n        return '9999px';\r\n      default:\r\n        return `${Math.max(0, dimensions.borderRadius - 2)}px`;\r\n    }\r\n  };\r\n\r\n  // Base shadow styles\r\n  // Shadow positioned to appear centered with the elevated indicator\r\n  // Indicator at (-3px, -3px), shadow at (+1px, +1px) creates balanced 3D effect\r\n  const baseStyles = {\r\n    position: 'absolute' as const,\r\n    top: '1px',\r\n    left: '1px',\r\n    width: '100%',\r\n    height: '100%',\r\n    borderRadius: getIndicatorRadius(),\r\n    zIndex: 0,\r\n    transition: 'none',\r\n    transform: 'translate(0, 0)',\r\n  };\r\n\r\n  // Different shadow styling based on variant\r\n  if (variant === 'solid') {\r\n    // Solid variant: shadow uses hover color (darker shade) to match border\r\n    return {\r\n      ...baseStyles,\r\n      backgroundColor: color.hover || color.main, // Use darker hover color for better contrast\r\n      opacity: 0.85, // Slightly transparent for depth effect\r\n    };\r\n  } else {\r\n    // Outline variant: shadow uses standard --color\r\n    return {\r\n      ...baseStyles,\r\n      backgroundColor: color.main, // --{{color}} for outline variant\r\n    };\r\n  }\r\n};\r\n\r\n","import { SegmentedControlSize, SegmentedControlVariant } from './SegmentedControl.types';\r\n\r\nexport const getDefaultSize = (): SegmentedControlSize => 'md';\r\nexport const getDefaultVariant = (): SegmentedControlVariant => 'solid';\r\n\r\nexport const validateSegmentedControlProps = (props: {\r\n  items: string[];\r\n  selectedIndex?: number;\r\n  defaultSelectedIndex?: number;\r\n}) => {\r\n  if (process.env.NODE_ENV === 'development') {\r\n    if (props.items.length === 0) {\r\n      console.warn('SegmentedControl: items array should not be empty');\r\n    }\r\n    \r\n    if (props.selectedIndex !== undefined && (props.selectedIndex < 0 || props.selectedIndex >= props.items.length)) {\r\n      console.warn(`SegmentedControl: selectedIndex (${props.selectedIndex}) is out of range for items array of length ${props.items.length}`);\r\n    }\r\n    \r\n    if (props.defaultSelectedIndex !== undefined && (props.defaultSelectedIndex < 0 || props.defaultSelectedIndex >= props.items.length)) {\r\n      console.warn(`SegmentedControl: defaultSelectedIndex (${props.defaultSelectedIndex}) is out of range for items array of length ${props.items.length}`);\r\n    }\r\n  }\r\n};\r\n\r\nexport const getAriaAttributes = (props: {\r\n  selectedIndex: number;\r\n  disabled: boolean;\r\n  name?: string;\r\n}) => ({\r\n  role: 'tablist',\r\n  'aria-orientation': 'horizontal' as const,\r\n  'aria-disabled': props.disabled,\r\n  'aria-label': props.name,\r\n});\r\n\r\nexport const getSegmentAriaAttributes = (props: {\r\n  index: number;\r\n  isSelected: boolean;\r\n  disabled: boolean;\r\n  item: string;\r\n  segmentId: string;\r\n}) => ({\r\n  role: 'tab',\r\n  'aria-selected': props.isSelected,\r\n  'aria-disabled': props.disabled,\r\n  'aria-label': props.item,\r\n  id: props.segmentId,\r\n  tabIndex: props.isSelected ? 0 : -1,\r\n});\r\n\r\nexport const handleKeyboardNavigation = (\r\n  event: React.KeyboardEvent,\r\n  currentIndex: number,\r\n  itemsLength: number,\r\n  onIndexChange: (index: number) => void,\r\n  disabled: boolean\r\n) => {\r\n  if (disabled) return;\r\n  \r\n  let newIndex = currentIndex;\r\n  \r\n  switch (event.key) {\r\n    case 'ArrowLeft':\r\n    case 'ArrowUp':\r\n      event.preventDefault();\r\n      newIndex = currentIndex > 0 ? currentIndex - 1 : itemsLength - 1;\r\n      break;\r\n    case 'ArrowRight':\r\n    case 'ArrowDown':\r\n      event.preventDefault();\r\n      newIndex = currentIndex < itemsLength - 1 ? currentIndex + 1 : 0;\r\n      break;\r\n    case 'Home':\r\n      event.preventDefault();\r\n      newIndex = 0;\r\n      break;\r\n    case 'End':\r\n      event.preventDefault();\r\n      newIndex = itemsLength - 1;\r\n      break;\r\n    default:\r\n      return;\r\n  }\r\n  \r\n  if (newIndex !== currentIndex) {\r\n    onIndexChange(newIndex);\r\n  }\r\n};","'use client';\n\nimport React, { forwardRef, useState, useImperativeHandle, useRef, useId } from 'react';\nimport { useCSSVariables } from '../../../providers';\nimport { SegmentedControlProps, SegmentedControlRef } from './SegmentedControl.types';\nimport {\n  getContainerStyles,\n  getSegmentStyles,\n  getIndicatorStyles,\n  getVariantStyles,\n  getIsometricContainerStyles,\n  getIsometricShadowStyles,\n  getColorVariables,\n} from './SegmentedControl.styles';\nimport {\n  getDefaultSize,\n  getDefaultVariant,\n  validateSegmentedControlProps,\n  getAriaAttributes,\n  getSegmentAriaAttributes,\n  handleKeyboardNavigation,\n} from './SegmentedControl.utils';\n\nexport const SegmentedControl = forwardRef<SegmentedControlRef, SegmentedControlProps>(({\n  items,\n  selectedIndex,\n  defaultSelectedIndex = 0,\n  onChange,\n  size = getDefaultSize(),\n  variant = getDefaultVariant(),\n  color = 'primary',\n  customColor,\n  shape = 'round',\n  disabled = false,\n  error = false,\n  fullWidth = false,\n  animate = true,\n  animationMode = 'default',\n  rounded = false,\n  name,\n  className,\n  style,\n  // Filter out interactive config props that shouldn't be passed to DOM\n  itemCount,\n  item1,\n  item2,\n  item3,\n  item4,\n  item5,\n  _itemsComputed,\n  ...props\n}, ref) => {\n  // Get CSS variables for theming\n  const cssVars = useCSSVariables();\n\n  // Animation logic\n  const animationsEnabled = animate;\n  const useAnimationMode = animationsEnabled && animationMode !== 'none';\n  const hasIsometricAnimation = useAnimationMode && animationMode === 'isometric' && variant !== 'ghost' && variant !== 'glassmorphic';\n  \n  // Generate unique ID\n  const id = useId();\n  \n  // Validate props in development\n  validateSegmentedControlProps({ items, selectedIndex, defaultSelectedIndex });\n  \n  // Internal state for uncontrolled mode\n  const [internalSelectedIndex, setInternalSelectedIndex] = useState(defaultSelectedIndex);\n  \n  // Determine if controlled or uncontrolled\n  const isControlled = selectedIndex !== undefined;\n  const currentSelectedIndex = isControlled ? selectedIndex : internalSelectedIndex;\n  \n  // Refs\n  const containerRef = useRef<HTMLDivElement>(null);\n  const segmentRefs = useRef<(HTMLButtonElement | null)[]>([]);\n  const indicatorRef = useRef<HTMLDivElement>(null);\n  const shadowRef = useRef<HTMLDivElement>(null);\n  \n  // Expose imperative methods\n  useImperativeHandle(ref, () => ({\n    focus: () => {\n      const selectedButton = segmentRefs.current[currentSelectedIndex];\n      selectedButton?.focus();\n    },\n    blur: () => {\n      const selectedButton = segmentRefs.current[currentSelectedIndex];\n      selectedButton?.blur();\n    },\n    selectIndex: (index: number) => {\n      if (index >= 0 && index < items.length && !disabled) {\n        handleIndexChange(index);\n      }\n    },\n  }));\n  \n  // Handle index change\n  const handleIndexChange = (newIndex: number) => {\n    if (!isControlled) {\n      setInternalSelectedIndex(newIndex);\n    }\n\n    if (onChange) {\n      onChange(newIndex, items[newIndex]);\n    }\n\n    // Focus the new selected segment\n    setTimeout(() => {\n      segmentRefs.current[newIndex]?.focus();\n    }, 0);\n  };\n\n  // Handle segment click\n  const handleSegmentClick = (index: number) => {\n    if (disabled || index === currentSelectedIndex) return;\n    handleIndexChange(index);\n  };\n  \n  // Handle keyboard navigation\n  const handleKeyDown = (event: React.KeyboardEvent) => {\n    handleKeyboardNavigation(\n      event,\n      currentSelectedIndex,\n      items.length,\n      handleIndexChange,\n      disabled\n    );\n  };\n\n  // Isometric hover handlers - applied to the selected segment button\n  const handleSelectedSegmentMouseEnter = (event: React.MouseEvent<HTMLButtonElement>) => {\n    if (!disabled && hasIsometricAnimation) {\n      if (indicatorRef.current) {\n        // On hover, move to (0, 0) to \"press\" toward the shadow\n        indicatorRef.current.style.transform = 'translate(0, 0)';\n      }\n      // Also move the text with the indicator\n      const button = event.currentTarget;\n      if (button) {\n        button.style.transform = 'translate(0, 0)';\n      }\n    }\n  };\n\n  const handleSelectedSegmentMouseLeave = (event: React.MouseEvent<HTMLButtonElement>) => {\n    if (!disabled && hasIsometricAnimation) {\n      if (indicatorRef.current) {\n        // On leave, return to elevated position (-3px, -3px)\n        indicatorRef.current.style.transform = 'translate(-3px, -3px)';\n      }\n      // Also return the text to elevated position\n      const button = event.currentTarget;\n      if (button) {\n        button.style.transform = 'translate(-3px, -3px)';\n      }\n    }\n  };\n  \n  // Get ARIA attributes\n  const containerAriaAttributes = getAriaAttributes({\n    selectedIndex: currentSelectedIndex,\n    disabled,\n    name,\n  });\n  \n  // Combine styles with proper parameters\n  const containerStyles = {\n    ...getContainerStyles(\n      size,\n      variant,\n      color,\n      customColor,\n      rounded ? 'pill' : shape,\n      disabled,\n      error,\n      animate,\n      cssVars,\n      fullWidth,\n      items.length\n    ),\n    ...style,\n  };\n  \n  // Render the indicator with optional isometric wrapper\n  const renderIndicator = () => {\n    const indicatorStyles = getIndicatorStyles(\n      currentSelectedIndex,\n      items.length,\n      variant,\n      color,\n      customColor,\n      rounded ? 'pill' : shape,\n      size,\n      animate,\n      cssVars,\n      hasIsometricAnimation\n    );\n\n    const indicatorElement = (\n      <div\n        ref={indicatorRef}\n        role=\"presentation\"\n        style={indicatorStyles}\n      />\n    );\n\n    // Isometric wrapper\n    if (hasIsometricAnimation) {\n      const colors = getColorVariables(color, customColor, cssVars);\n      const shadowStyles = getIsometricShadowStyles(\n        colors,\n        variant,\n        rounded ? 'pill' : shape,\n        size,\n        animate\n      );\n\n      return (\n        <div style={getIsometricContainerStyles(currentSelectedIndex, items.length)}>\n          <div ref={shadowRef} style={shadowStyles} />\n          {indicatorElement}\n        </div>\n      );\n    }\n\n    return indicatorElement;\n  };\n\n  return (\n    <div\n      ref={containerRef}\n      className={className}\n      style={containerStyles}\n      onKeyDown={handleKeyDown}\n      {...containerAriaAttributes}\n      {...props}\n    >\n      {/* Sliding indicator */}\n      {renderIndicator()}\n\n      {/* Segments */}\n      {items.map((item, index) => {\n        const isSelected = index === currentSelectedIndex;\n        const segmentId = `${id}-segment-${index}`;\n        const segmentAriaAttributes = getSegmentAriaAttributes({\n          index,\n          isSelected,\n          disabled,\n          item,\n          segmentId,\n        });\n\n        const renderSegmentText = () => item;\n\n        return (\n          <button\n            key={`${item}-${index}`}\n            ref={(el) => { segmentRefs.current[index] = el; }}\n            type=\"button\"\n            disabled={disabled}\n            onClick={() => handleSegmentClick(index)}\n            onMouseEnter={isSelected && hasIsometricAnimation ? handleSelectedSegmentMouseEnter : undefined}\n            onMouseLeave={isSelected && hasIsometricAnimation ? handleSelectedSegmentMouseLeave : undefined}\n            style={getSegmentStyles(\n              size,\n              variant,\n              color,\n              customColor,\n              rounded ? 'pill' : shape,\n              isSelected,\n              disabled,\n              animate,\n              cssVars,\n              hasIsometricAnimation\n            )}\n            {...segmentAriaAttributes}\n          >\n            <span style={{\n              width: '100%',\n              display: 'block',\n              textAlign: 'center',\n              whiteSpace: 'nowrap',\n              overflow: 'hidden',\n              textOverflow: 'ellipsis',\n              minWidth: 0\n            }}>\n              {renderSegmentText()}\n            </span>\n          </button>\n        );\n      })}\n    </div>\n  );\n});\n\nSegmentedControl.displayName = 'SegmentedControl';","import React from 'react';\r\nimport type { SliderColor, SliderSize, SliderOrientation, SliderVariant } from './Slider.types';\r\n\r\n// Get color variables based on color prop\r\nexport const getColorVariables = (color: SliderColor, customColor: string | undefined, cssVars: any) => {\r\n  if (color === 'custom' && customColor) {\r\n    return {\r\n      main: customColor,\r\n      foreground: '#ffffff',\r\n      background: customColor + '10',\r\n      border: customColor,\r\n      hover: customColor + '20',\r\n      accent: customColor,\r\n      shadow: `0 2px 8px ${customColor}20`,\r\n      disabled: customColor + '40',\r\n    };\r\n  }\r\n\r\n  const colorMap: Record<string, any> = {\r\n    primary: {\r\n      main: cssVars.primary,\r\n      background: cssVars.primaryBackground,\r\n      foreground: cssVars.primaryForeground,\r\n      hover: cssVars.primaryHover,\r\n      accent: cssVars.primaryAccent,\r\n      shadow: cssVars.primaryShadow,\r\n      disabled: cssVars.primaryDisabled,\r\n      border: cssVars.primaryBorder,\r\n    },\r\n    secondary: {\r\n      main: cssVars.secondary,\r\n      background: cssVars.secondaryBackground,\r\n      foreground: cssVars.secondaryForeground,\r\n      hover: cssVars.secondaryHover,\r\n      accent: cssVars.secondaryAccent,\r\n      shadow: cssVars.secondaryShadow,\r\n      disabled: cssVars.secondaryDisabled,\r\n      border: cssVars.secondaryBorder,\r\n    },\r\n    success: {\r\n      main: cssVars.success,\r\n      background: cssVars.successBackground,\r\n      foreground: cssVars.successForeground,\r\n      hover: cssVars.successHover,\r\n      accent: cssVars.successAccent,\r\n      shadow: cssVars.successShadow,\r\n      disabled: cssVars.successDisabled,\r\n      border: cssVars.successBorder,\r\n    },\r\n    warning: {\r\n      main: cssVars.warning,\r\n      background: cssVars.warningBackground,\r\n      foreground: cssVars.warningForeground,\r\n      hover: cssVars.warningHover,\r\n      accent: cssVars.warningAccent,\r\n      shadow: cssVars.warningShadow,\r\n      disabled: cssVars.warningDisabled,\r\n      border: cssVars.warningBorder,\r\n    },\r\n    destructive: {\r\n      main: cssVars.destructive,\r\n      background: cssVars.destructiveBackground,\r\n      foreground: cssVars.destructiveForeground,\r\n      hover: cssVars.destructiveHover,\r\n      accent: cssVars.destructiveAccent,\r\n      shadow: cssVars.destructiveShadow,\r\n      disabled: cssVars.destructiveDisabled,\r\n      border: cssVars.destructiveBorder,\r\n    },\r\n    info: {\r\n      main: cssVars.info,\r\n      background: cssVars.infoBackground,\r\n      foreground: cssVars.infoForeground,\r\n      hover: cssVars.infoHover,\r\n      accent: cssVars.infoAccent,\r\n      shadow: cssVars.infoShadow,\r\n      disabled: cssVars.infoDisabled,\r\n      border: cssVars.infoBorder,\r\n    },\r\n  };\r\n\r\n  return colorMap[color] || colorMap.primary;\r\n};\r\n\r\n// Get variant styles for the slider\r\nexport const getVariantStyles = (\r\n  variant: SliderVariant,\r\n  color: SliderColor,\r\n  customColor: string | undefined,\r\n  cssVars: any\r\n) => {\r\n  const colors = getColorVariables(color, customColor, cssVars);\r\n\r\n  switch (variant) {\r\n    case 'solid':\r\n      return {\r\n        fill: colors.accent || colors.main,\r\n        thumb: colors.accent || colors.main,\r\n        thumbBorder: 'transparent',\r\n        thumbShadow: `0 2px 8px ${colors.shadow || colors.main + '40'}`,\r\n      };\r\n    case 'outline':\r\n      return {\r\n        fill: colors.background || colors.main + '20',\r\n        thumb: cssVars.background || '#ffffff',\r\n        thumbBorder: colors.main,\r\n        thumbShadow: `0 2px 4px ${cssVars.shadow || 'rgba(0,0,0,0.1)'}`,\r\n      };\r\n    case 'ghost':\r\n      return {\r\n        fill: colors.background || colors.main + '30',\r\n        thumb: colors.main + '40',\r\n        thumbBorder: 'transparent',\r\n        thumbShadow: 'none',\r\n      };\r\n    case 'glassmorphic':\r\n      const reflectionColor = colors.hover || colors.main || '#ffffff';\r\n      return {\r\n        fill: colors.background || colors.main + '20',\r\n        thumb: 'rgba(255, 255, 255, 0.2)',\r\n        thumbBorder: colors.main,\r\n        thumbShadow: `0 0 20px ${colors.main}80, 0 0 40px ${colors.main}40, 0 4px 16px ${colors.shadow || 'rgba(31, 38, 135, 0.37)'}`,\r\n        thumbBackdrop: 'blur(10px)',\r\n        thumbGlow: `0 0 20px ${colors.main}`,\r\n      };\r\n    default:\r\n      return {\r\n        fill: colors.accent || colors.main,\r\n        thumb: colors.accent || colors.main,\r\n        thumbBorder: 'transparent',\r\n        thumbShadow: `0 2px 8px ${colors.shadow || colors.main + '40'}`,\r\n      };\r\n  }\r\n};\r\n\r\n// Get size configuration aligned with design standards\r\nexport const getSizeConfig = (size: SliderSize, orientation: SliderOrientation) => {\r\n  const baseConfig = {\r\n    xs: {\r\n      trackThickness: 2,\r\n      thumbSize: 12,\r\n      thumbBorder: 2,\r\n      fontSize: '14px',\r\n      gap: '8px',\r\n      padding: '12px',\r\n    },\r\n    sm: {\r\n      trackThickness: 3,\r\n      thumbSize: 16,\r\n      thumbBorder: 2,\r\n      fontSize: '14px',\r\n      gap: '8px',\r\n      padding: '12px',\r\n    },\r\n    md: {\r\n      trackThickness: 4,\r\n      thumbSize: 20,\r\n      thumbBorder: 2,\r\n      fontSize: '16px',\r\n      gap: '12px',\r\n      padding: '16px',\r\n    },\r\n    lg: {\r\n      trackThickness: 5,\r\n      thumbSize: 24,\r\n      thumbBorder: 2,\r\n      fontSize: '16px',\r\n      gap: '12px',\r\n      padding: '20px',\r\n    },\r\n    xl: {\r\n      trackThickness: 6,\r\n      thumbSize: 28,\r\n      thumbBorder: 2,\r\n      fontSize: '18px',\r\n      gap: '16px',\r\n      padding: '24px',\r\n    },\r\n  };\r\n\r\n  return baseConfig[size];\r\n};\r\n\r\n// Container styles\r\nexport const getSliderContainerStyles = (\r\n  orientation: SliderOrientation,\r\n  length: string | number | undefined,\r\n  disabled: boolean\r\n): React.CSSProperties => {\r\n  const baseStyles: React.CSSProperties = {\r\n    display: 'flex',\r\n    flexDirection: orientation === 'horizontal' ? 'column' : 'row',\r\n    alignItems: orientation === 'horizontal' ? 'stretch' : 'center',\r\n    gap: '8px',\r\n    fontFamily: 'inherit',\r\n    cursor: disabled ? 'not-allowed' : 'default',\r\n    opacity: disabled ? 0.5 : 1,\r\n  };\r\n\r\n  return baseStyles;\r\n};\r\n\r\n// Track container styles\r\nexport const getTrackContainerStyles = (\r\n  orientation: SliderOrientation,\r\n  size: SliderSize,\r\n  animationsEnabled: boolean,\r\n  length?: string | number\r\n): React.CSSProperties => {\r\n  const config = getSizeConfig(size, orientation);\r\n  const trackLength = typeof length === 'number' ? `${length}px` : length || '300px';\r\n\r\n  // Add extra space for the thumb to properly center\r\n  const containerHeight = orientation === 'horizontal' ? config.thumbSize + 8 : trackLength;\r\n  const containerWidth = orientation === 'vertical' ? config.thumbSize + 8 : trackLength;\r\n\r\n  return {\r\n    position: 'relative',\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    width: containerWidth,\r\n    height: containerHeight,\r\n    transition: animationsEnabled ? 'opacity 0.2s ease-in-out' : 'none',\r\n    userSelect: 'none',\r\n  };\r\n};\r\n\r\n// Track background styles\r\nexport const getTrackBackgroundStyles = (\r\n  orientation: SliderOrientation,\r\n  size: SliderSize,\r\n  variant: SliderVariant,\r\n  color: SliderColor,\r\n  customColor: string | undefined,\r\n  cssVars: any\r\n): React.CSSProperties => {\r\n  const config = getSizeConfig(size, orientation);\r\n  const variantStyles = getVariantStyles(variant, color, customColor, cssVars);\r\n\r\n  // For ghost, outline, and glassmorphic variants, use the same style as the fill for consistency\r\n  const backgroundColor = (variant === 'ghost' || variant === 'outline' || variant === 'glassmorphic')\r\n    ? variantStyles.fill\r\n    : cssVars.border;\r\n\r\n  return {\r\n    position: 'absolute',\r\n    background: backgroundColor,\r\n    borderRadius: '9999px',\r\n    width: orientation === 'horizontal' ? '100%' : `${config.trackThickness}px`,\r\n    height: orientation === 'horizontal' ? `${config.trackThickness}px` : '100%',\r\n    top: orientation === 'horizontal' ? '50%' : undefined,\r\n    left: orientation === 'vertical' ? '50%' : undefined,\r\n    transform: orientation === 'horizontal' ? 'translateY(-50%)' : 'translateX(-50%)',\r\n  };\r\n};\r\n\r\n// Track fill styles\r\nexport const getTrackFillStyles = (\r\n  orientation: SliderOrientation,\r\n  size: SliderSize,\r\n  color: SliderColor,\r\n  customColor: string | undefined,\r\n  value: number,\r\n  min: number,\r\n  max: number,\r\n  error: boolean,\r\n  animationsEnabled: boolean,\r\n  variant: SliderVariant,\r\n  cssVars: any\r\n): React.CSSProperties => {\r\n  const config = getSizeConfig(size, orientation);\r\n  const variantStyles = getVariantStyles(variant, color, customColor, cssVars);\r\n  const percentage = ((value - min) / (max - min)) * 100;\r\n\r\n  const fillColor = error ? cssVars.destructive : variantStyles.fill;\r\n  const colors = getColorVariables(color, customColor, cssVars);\r\n\r\n  const styles: React.CSSProperties = {\r\n    position: 'absolute',\r\n    background: fillColor,\r\n    borderRadius: '9999px',\r\n    width: orientation === 'horizontal' ? `${percentage}%` : `${config.trackThickness}px`,\r\n    height: orientation === 'horizontal' ? `${config.trackThickness}px` : `${percentage}%`,\r\n    [orientation === 'horizontal' ? 'left' : 'bottom']: 0,\r\n    top: orientation === 'horizontal' ? '50%' : undefined,\r\n    left: orientation === 'vertical' ? '50%' : 0,\r\n    transform: orientation === 'horizontal' ? 'translateY(-50%)' : 'translateX(-50%)',\r\n    transition: animationsEnabled\r\n      ? 'width 0.2s ease-in-out, height 0.2s ease-in-out, background 0.2s ease-in-out, box-shadow 0.2s ease-in-out'\r\n      : 'none',\r\n  };\r\n\r\n  // Add glow effect for glassmorphic variant\r\n  if (variant === 'glassmorphic' && !error) {\r\n    styles.boxShadow = `0 0 10px ${colors.main}60, 0 0 20px ${colors.main}30`;\r\n  }\r\n\r\n  return styles;\r\n};\r\n\r\n// Hidden input styles\r\nexport const getHiddenInputStyles = (): React.CSSProperties => ({\r\n  position: 'absolute',\r\n  opacity: 0,\r\n  width: '100%',\r\n  height: '100%',\r\n  margin: 0,\r\n  padding: 0,\r\n  cursor: 'inherit',\r\n  zIndex: 2,\r\n});\r\n\r\n// Thumb styles\r\nexport const getThumbStyles = (\r\n  orientation: SliderOrientation,\r\n  size: SliderSize,\r\n  color: SliderColor,\r\n  customColor: string | undefined,\r\n  value: number,\r\n  min: number,\r\n  max: number,\r\n  error: boolean,\r\n  focused: boolean,\r\n  animationsEnabled: boolean,\r\n  variant: SliderVariant,\r\n  cssVars: any\r\n): React.CSSProperties => {\r\n  const config = getSizeConfig(size, orientation);\r\n  const variantStyles = getVariantStyles(variant, color, customColor, cssVars);\r\n  const percentage = ((value - min) / (max - min)) * 100;\r\n\r\n  const thumbColor = error ? cssVars.destructive : variantStyles.thumb;\r\n  const thumbBorderColor = error ? cssVars.destructive : variantStyles.thumbBorder;\r\n  const scaleValue = focused ? 1.1 : 1;\r\n\r\n  const baseStyles: React.CSSProperties = {\r\n    position: 'absolute',\r\n    width: `${config.thumbSize}px`,\r\n    height: `${config.thumbSize}px`,\r\n    backgroundColor: thumbColor,\r\n    border: `${config.thumbBorder}px solid ${thumbBorderColor}`,\r\n    borderRadius: '50%',\r\n    zIndex: 1,\r\n    outline: focused ? `2px solid ${thumbColor}` : 'none',\r\n    outlineOffset: '2px',\r\n    transition: animationsEnabled\r\n      ? 'left 0.2s ease-in-out, bottom 0.2s ease-in-out, border-color 0.2s ease-in-out, box-shadow 0.2s ease-in-out, transform 0.2s ease-in-out, background-color 0.2s ease-in-out'\r\n      : 'none',\r\n    boxShadow: focused ? `0 0 0 4px ${thumbColor}20` : variantStyles.thumbShadow,\r\n  };\r\n\r\n  // Add backdrop filter for glassmorphic variant\r\n  if (variant === 'glassmorphic' && variantStyles.thumbBackdrop) {\r\n    baseStyles.backdropFilter = variantStyles.thumbBackdrop;\r\n  }\r\n\r\n  // Position the thumb with scale on hover/focus\r\n  if (orientation === 'horizontal') {\r\n    baseStyles.left = `calc(${percentage}% - ${config.thumbSize / 2}px)`;\r\n    baseStyles.top = '50%';\r\n    baseStyles.transform = `translateY(-50%) scale(${scaleValue})`;\r\n  } else {\r\n    baseStyles.bottom = `calc(${percentage}% - ${config.thumbSize / 2}px)`;\r\n    baseStyles.left = '50%';\r\n    baseStyles.transform = `translateX(-50%) scale(${scaleValue})`;\r\n  }\r\n\r\n  return baseStyles;\r\n};\r\n\r\n// Label styles\r\nexport const getLabelStyles = (\r\n  size: SliderSize,\r\n  disabled: boolean,\r\n  error: boolean,\r\n  cssVars: any\r\n): React.CSSProperties => {\r\n  const config = getSizeConfig(size, 'horizontal');\r\n\r\n  return {\r\n    fontSize: config.fontSize,\r\n    fontWeight: 500,\r\n    color: disabled\r\n      ? cssVars.foregroundDisabled || cssVars.mutedForeground\r\n      : error\r\n      ? cssVars.destructive\r\n      : cssVars.foreground,\r\n    marginBottom: '4px',\r\n    userSelect: 'none',\r\n  };\r\n};\r\n\r\n// Description styles\r\nexport const getDescriptionStyles = (\r\n  size: SliderSize,\r\n  disabled: boolean,\r\n  error: boolean,\r\n  cssVars: any\r\n): React.CSSProperties => {\r\n  const fontSizeMap = {\r\n    xs: '12px',\r\n    sm: '12px',\r\n    md: '14px',\r\n    lg: '14px',\r\n    xl: '16px',\r\n  };\r\n\r\n  return {\r\n    fontSize: fontSizeMap[size],\r\n    color: disabled\r\n      ? cssVars.foregroundDisabled || cssVars.mutedForeground\r\n      : error\r\n      ? cssVars.destructive\r\n      : cssVars.mutedForeground,\r\n    marginTop: '4px',\r\n    lineHeight: 1.4,\r\n    userSelect: 'none',\r\n  };\r\n};\r\n\r\n// Min/Max labels styles\r\nexport const getMinMaxLabelStyles = (\r\n  size: SliderSize,\r\n  orientation: SliderOrientation,\r\n  disabled: boolean,\r\n  color: SliderColor,\r\n  customColor: string | undefined,\r\n  cssVars: any\r\n): React.CSSProperties => {\r\n  const fontSizeMap = {\r\n    xs: '12px',\r\n    sm: '12px',\r\n    md: '14px',\r\n    lg: '14px',\r\n    xl: '16px',\r\n  };\r\n\r\n  const colors = getColorVariables(color, customColor, cssVars);\r\n\r\n  return {\r\n    fontSize: fontSizeMap[size],\r\n    fontWeight: 500,\r\n    color: disabled ? cssVars.mutedForeground : colors.main,\r\n    userSelect: 'none',\r\n    whiteSpace: 'nowrap',\r\n    minWidth: '20px',\r\n    textAlign: 'center',\r\n  };\r\n};\r\n\r\n// Min/Max labels container styles\r\nexport const getLabelsContainerStyles = (\r\n  orientation: SliderOrientation\r\n): React.CSSProperties => ({\r\n  display: 'flex',\r\n  justifyContent: 'space-between',\r\n  width: orientation === 'horizontal' ? '100%' : 'auto',\r\n  flexDirection: orientation === 'horizontal' ? 'row' : 'column-reverse',\r\n  alignItems: orientation === 'horizontal' ? 'center' : 'flex-start',\r\n  gap: '4px',\r\n  marginTop: orientation === 'horizontal' ? '4px' : '0',\r\n  marginLeft: orientation === 'vertical' ? '8px' : '0',\r\n});\r\n\r\n// Tooltip styles\r\nexport const getTooltipStyles = (\r\n  orientation: SliderOrientation,\r\n  size: SliderSize,\r\n  value: number,\r\n  min: number,\r\n  max: number,\r\n  cssVars: any\r\n): React.CSSProperties => {\r\n  const config = getSizeConfig(size, orientation);\r\n  const percentage = ((value - min) / (max - min)) * 100;\r\n\r\n  const baseStyles: React.CSSProperties = {\r\n    position: 'absolute',\r\n    backgroundColor: cssVars.card || cssVars.background,\r\n    color: cssVars.cardForeground || cssVars.foreground,\r\n    padding: '4px 8px',\r\n    borderRadius: '8px',\r\n    fontSize: '12px',\r\n    fontWeight: 500,\r\n    whiteSpace: 'nowrap',\r\n    zIndex: 3,\r\n    pointerEvents: 'none',\r\n    border: `1px solid ${cssVars.border}`,\r\n    boxShadow: cssVars.shadow,\r\n  };\r\n\r\n  if (orientation === 'horizontal') {\r\n    baseStyles.left = `${percentage}%`;\r\n    baseStyles.bottom = `${config.thumbSize + 8}px`;\r\n    baseStyles.transform = 'translateX(-50%)';\r\n  } else {\r\n    baseStyles.bottom = `${percentage}%`;\r\n    baseStyles.left = `${config.thumbSize + 8}px`;\r\n    baseStyles.transform = 'translateY(50%)';\r\n  }\r\n\r\n  return baseStyles;\r\n};\r\n\r\n// Tick marks styles\r\nexport const getTickStyles = (\r\n  orientation: SliderOrientation,\r\n  size: SliderSize,\r\n  position: number,\r\n  min: number,\r\n  max: number,\r\n  cssVars: any\r\n): React.CSSProperties => {\r\n  const config = getSizeConfig(size, orientation);\r\n  const percentage = ((position - min) / (max - min)) * 100;\r\n  \r\n  const baseStyles: React.CSSProperties = {\r\n    position: 'absolute',\r\n    backgroundColor: cssVars.border,\r\n    pointerEvents: 'none',\r\n  };\r\n\r\n  if (orientation === 'horizontal') {\r\n    baseStyles.left = `calc(${percentage}%)`;\r\n    baseStyles.top = '50%';\r\n    baseStyles.width = '1px';\r\n    baseStyles.height = `${config.trackThickness + 4}px`;\r\n    baseStyles.transform = 'translateY(-50%)';\r\n  } else {\r\n    baseStyles.bottom = `calc(${percentage}%)`;\r\n    baseStyles.left = '50%';\r\n    baseStyles.height = '1px';\r\n    baseStyles.width = `${config.trackThickness + 4}px`;\r\n    baseStyles.transform = 'translateX(-50%)';\r\n  }\r\n\r\n  return baseStyles;\r\n};\r\n\r\n// Tick label styles\r\nexport const getTickLabelStyles = (\r\n  orientation: SliderOrientation,\r\n  size: SliderSize,\r\n  position: number,\r\n  min: number,\r\n  max: number,\r\n  cssVars: any\r\n): React.CSSProperties => {\r\n  const config = getSizeConfig(size, orientation);\r\n  const percentage = ((position - min) / (max - min)) * 100;\r\n  \r\n  const baseStyles: React.CSSProperties = {\r\n    position: 'absolute',\r\n    fontSize: '11px',\r\n    color: cssVars.mutedForeground,\r\n    userSelect: 'none',\r\n    pointerEvents: 'none',\r\n    whiteSpace: 'nowrap',\r\n  };\r\n\r\n  if (orientation === 'horizontal') {\r\n    baseStyles.left = `calc(${percentage}%)`;\r\n    baseStyles.top = `${config.thumbSize + 12}px`;\r\n    baseStyles.transform = 'translateX(-50%)';\r\n  } else {\r\n    baseStyles.bottom = `calc(${percentage}%)`;\r\n    baseStyles.left = `${config.thumbSize + 12}px`;\r\n    baseStyles.transform = 'translateY(50%)';\r\n  }\r\n\r\n  return baseStyles;\r\n};","import type { SliderSize, SliderColor } from './Slider.types';\r\n\r\n/**\r\n * Get the default size for consistency\r\n */\r\nexport const getDefaultSize = (): SliderSize => 'md';\r\n\r\n/**\r\n * Get the default color for consistency\r\n */\r\nexport const getDefaultColor = (): SliderColor => 'primary';\r\n\r\n/**\r\n * Clamp a value between min and max\r\n */\r\nexport const clampValue = (value: number, min: number, max: number): number => {\r\n  return Math.min(Math.max(value, min), max);\r\n};\r\n\r\n/**\r\n * Round a value to the nearest step\r\n */\r\nexport const roundToStep = (value: number, step: number): number => {\r\n  return Math.round(value / step) * step;\r\n};\r\n\r\n/**\r\n * Calculate percentage from value\r\n */\r\nexport const getPercentage = (value: number, min: number, max: number): number => {\r\n  return ((value - min) / (max - min)) * 100;\r\n};\r\n\r\n/**\r\n * Calculate value from percentage\r\n */\r\nexport const getValueFromPercentage = (percentage: number, min: number, max: number): number => {\r\n  return min + (percentage / 100) * (max - min);\r\n};\r\n\r\n/**\r\n * Get value from mouse/touch position\r\n */\r\nexport const getValueFromPosition = (\r\n  clientX: number,\r\n  clientY: number,\r\n  rect: DOMRect,\r\n  orientation: 'horizontal' | 'vertical',\r\n  min: number,\r\n  max: number,\r\n  step: number\r\n): number => {\r\n  let percentage: number;\r\n  \r\n  if (orientation === 'horizontal') {\r\n    percentage = ((clientX - rect.left) / rect.width) * 100;\r\n  } else {\r\n    percentage = ((rect.bottom - clientY) / rect.height) * 100;\r\n  }\r\n  \r\n  percentage = Math.max(0, Math.min(100, percentage));\r\n  const value = getValueFromPercentage(percentage, min, max);\r\n  return roundToStep(clampValue(value, min, max), step);\r\n};\r\n\r\n/**\r\n * Format value for display\r\n */\r\nexport const formatValue = (\r\n  value: number,\r\n  formatter?: (value: number) => string\r\n): string => {\r\n  if (formatter) {\r\n    return formatter(value);\r\n  }\r\n  \r\n  // Default formatting - remove unnecessary decimals\r\n  if (Number.isInteger(value)) {\r\n    return value.toString();\r\n  }\r\n  \r\n  return value.toFixed(2).replace(/\\.?0+$/, '');\r\n};\r\n\r\n/**\r\n * Validate slider props\r\n */\r\nexport const validateSliderProps = (props: {\r\n  min: number;\r\n  max: number;\r\n  step: number;\r\n  value?: number;\r\n  defaultValue?: number;\r\n}) => {\r\n  const { min, max, step, value, defaultValue } = props;\r\n  \r\n  if (process.env.NODE_ENV === 'development') {\r\n    if (min >= max) {\r\n      console.warn('Slider: min value should be less than max value');\r\n    }\r\n    \r\n    if (step <= 0) {\r\n      console.warn('Slider: step should be a positive number');\r\n    }\r\n    \r\n    if (value !== undefined && (value < min || value > max)) {\r\n      console.warn(`Slider: value (${value}) is outside the range [${min}, ${max}]`);\r\n    }\r\n    \r\n    if (defaultValue !== undefined && (defaultValue < min || defaultValue > max)) {\r\n      console.warn(`Slider: defaultValue (${defaultValue}) is outside the range [${min}, ${max}]`);\r\n    }\r\n  }\r\n};\r\n\r\n/**\r\n * Generate tick marks\r\n */\r\nexport const generateTicks = (\r\n  min: number,\r\n  max: number,\r\n  step: number,\r\n  customTicks?: Array<{ value: number; label?: string }>\r\n): Array<{ value: number; label?: string }> => {\r\n  if (customTicks) {\r\n    return customTicks.filter(tick => tick.value >= min && tick.value <= max);\r\n  }\r\n  \r\n  const ticks: Array<{ value: number; label?: string }> = [];\r\n  for (let value = min; value <= max; value += step) {\r\n    ticks.push({ value });\r\n  }\r\n  \r\n  return ticks;\r\n};\r\n\r\n/**\r\n * Handle keyboard navigation\r\n */\r\nexport const handleKeyDown = (\r\n  event: React.KeyboardEvent<HTMLInputElement>,\r\n  value: number,\r\n  min: number,\r\n  max: number,\r\n  step: number,\r\n  orientation: 'horizontal' | 'vertical',\r\n  onChange?: (value: number, event: React.ChangeEvent<HTMLInputElement>) => void\r\n) => {\r\n  const { key } = event;\r\n  let newValue = value;\r\n  \r\n  const largeStep = step * 10;\r\n  const isHorizontal = orientation === 'horizontal';\r\n  \r\n  switch (key) {\r\n    case 'ArrowUp':\r\n      newValue = isHorizontal ? value + step : value + step;\r\n      break;\r\n    case 'ArrowDown':\r\n      newValue = isHorizontal ? value - step : value - step;\r\n      break;\r\n    case 'ArrowLeft':\r\n      newValue = isHorizontal ? value - step : value;\r\n      break;\r\n    case 'ArrowRight':\r\n      newValue = isHorizontal ? value + step : value;\r\n      break;\r\n    case 'PageUp':\r\n      newValue = value + largeStep;\r\n      break;\r\n    case 'PageDown':\r\n      newValue = value - largeStep;\r\n      break;\r\n    case 'Home':\r\n      newValue = min;\r\n      break;\r\n    case 'End':\r\n      newValue = max;\r\n      break;\r\n    default:\r\n      return; // Don't handle other keys\r\n  }\r\n  \r\n  event.preventDefault();\r\n  \r\n  newValue = roundToStep(clampValue(newValue, min, max), step);\r\n  \r\n  if (newValue !== value && onChange) {\r\n    // Create a synthetic change event\r\n    const syntheticEvent = {\r\n      target: { value: newValue.toString() },\r\n      currentTarget: { value: newValue.toString() },\r\n      type: 'change',\r\n      bubbles: true,\r\n      cancelable: true,\r\n      preventDefault: () => {},\r\n      stopPropagation: () => {},\r\n    } as unknown as React.ChangeEvent<HTMLInputElement>;\r\n    \r\n    onChange(newValue, syntheticEvent);\r\n  }\r\n};\r\n\r\n/**\r\n * Get ARIA attributes for slider\r\n */\r\nexport const getAriaAttributes = (props: {\r\n  value: number;\r\n  min: number;\r\n  max: number;\r\n  step: number;\r\n  disabled: boolean;\r\n  orientation: 'horizontal' | 'vertical';\r\n  label?: string;\r\n  describedBy?: string;\r\n}) => {\r\n  const { value, min, max, step, disabled, orientation, label, describedBy } = props;\r\n  \r\n  return {\r\n    role: 'slider',\r\n    'aria-valuemin': min,\r\n    'aria-valuemax': max,\r\n    'aria-valuenow': value,\r\n    'aria-valuetext': formatValue(value),\r\n    'aria-orientation': orientation,\r\n    'aria-disabled': disabled,\r\n    'aria-label': label,\r\n    'aria-describedby': describedBy,\r\n    tabIndex: disabled ? -1 : 0,\r\n  };\r\n};","'use client';\n\nimport React, { forwardRef, useRef, useImperativeHandle, useState, useCallback, useId } from 'react';\nimport { useCSSVariables, useSettings } from '../../../providers';\nimport { extractFormProps, UNIVERSAL_DEFAULTS } from '../types';\nimport type { SliderProps, SliderRef } from './Slider.types';\nimport {\n  getColorVariables,\n  getSliderContainerStyles,\n  getTrackContainerStyles,\n  getTrackBackgroundStyles,\n  getTrackFillStyles,\n  getHiddenInputStyles,\n  getThumbStyles,\n  getLabelStyles,\n  getDescriptionStyles,\n  getMinMaxLabelStyles,\n  getLabelsContainerStyles,\n  getTooltipStyles,\n  getTickStyles,\n  getTickLabelStyles,\n} from './Slider.styles';\nimport {\n  clampValue,\n  roundToStep,\n  getValueFromPosition,\n  formatValue,\n  validateSliderProps,\n  generateTicks,\n  handleKeyDown as handleKeyDownUtil,\n  getAriaAttributes,\n} from './Slider.utils';\n\nexport const Slider = forwardRef<SliderRef, SliderProps>((allProps, ref) => {\n  // Extract onChange and onInput separately since they have custom signatures\n  const { onChange, onInput, ...propsForExtraction } = allProps;\n  \n  // Extract form props and component-specific props (excluding onChange and onInput)\n  const [formProps, componentProps] = extractFormProps(propsForExtraction);\n  \n  // Destructure form props with defaults\n  const {\n    color = UNIVERSAL_DEFAULTS.color,\n    customColor,\n    variant = UNIVERSAL_DEFAULTS.variant,\n    size = UNIVERSAL_DEFAULTS.size,\n    disabled = UNIVERSAL_DEFAULTS.disabled,\n    error,\n    label,\n    helperText: description,\n    placeholder,\n    width,\n    height,\n    className,\n    style,\n    id: providedId,\n    'data-testid': dataTestId,\n    animate = UNIVERSAL_DEFAULTS.animate,\n    // Form-specific props\n    name,\n    value,\n    defaultValue,\n    required,\n    readOnly,\n    autoComplete,\n    autoFocus = false,\n  } = formProps;\n  \n  // Destructure component-specific props\n  const {\n    orientation = 'horizontal',\n    min = 0,\n    max = 100,\n    step: rawStep = 1,\n    showTooltip = false,\n    showTicks = false,\n    ticks,\n    showLabels = false,\n    header,\n    footer,\n    length = width || height || 300,\n    formatValue: customFormatter,\n    ...rest\n  } = componentProps;\n\n  // Handle empty or invalid step values\n  const step = rawStep === null || rawStep === undefined || isNaN(Number(rawStep)) || Number(rawStep) <= 0 ? 1 : Number(rawStep);\n  \n  // Get CSS variables and settings\n  const cssVars = useCSSVariables();\n  const { settings } = useSettings();\n  const animationsEnabled = (settings.appearance.animations ?? true) && animate;\n  \n  // Generate unique ID if not provided\n  const generatedId = useId();\n  const id = providedId || generatedId;\n  \n  // Validate props in development\n  validateSliderProps({ min, max, step, value, defaultValue });\n  \n  // Determine if controlled or uncontrolled\n  const isControlled = value !== undefined;\n  const [internalValue, setInternalValue] = useState(\n    clampValue(roundToStep((defaultValue as number) || 0, step), min, max)\n  );\n  const currentValue = isControlled ? clampValue(roundToStep((value as number) || 0, step), min, max) : internalValue;\n    \n  // State\n  const [focused, setFocused] = useState(false);\n  const [dragging, setDragging] = useState(false);\n  const [hovering, setHovering] = useState(false);\n  const [showTooltipState, setShowTooltipState] = useState(false);\n  \n  // Refs\n  const inputRef = useRef<HTMLInputElement>(null);\n  const trackRef = useRef<HTMLDivElement>(null);\n  \n  // Expose imperative methods\n  useImperativeHandle(ref, () => ({\n    focus: () => inputRef.current?.focus(),\n    blur: () => inputRef.current?.blur(),\n  }));\n    \n  // Update value\n  const updateValue = useCallback((newValue: number, event?: React.ChangeEvent<HTMLInputElement> | React.FormEvent<HTMLInputElement>) => {\n    const clampedValue = clampValue(roundToStep(newValue, step), min, max);\n    \n    if (!isControlled) {\n      setInternalValue(clampedValue);\n    }\n    \n    if (event && 'target' in event && onChange) {\n      onChange(clampedValue, event as React.ChangeEvent<HTMLInputElement>);\n    }\n    \n    if (event && 'target' in event && onInput) {\n      onInput(clampedValue, event as React.FormEvent<HTMLInputElement>);\n    }\n  }, [isControlled, min, max, step, onChange, onInput]);\n    \n  // Handle input change\n  const handleChange = useCallback((event: React.ChangeEvent<HTMLInputElement>) => {\n    if (disabled) return;\n    \n    const newValue = parseFloat(event.target.value);\n    updateValue(newValue, event);\n  }, [disabled, updateValue]);\n  \n  // Handle input events\n  const handleInput = useCallback((event: React.FormEvent<HTMLInputElement>) => {\n    if (disabled) return;\n    \n    const newValue = parseFloat((event.target as HTMLInputElement).value);\n    updateValue(newValue, event);\n  }, [disabled, updateValue]);\n    \n  // Handle mouse/touch events\n  const handlePointerDown = useCallback((event: React.MouseEvent | React.TouchEvent) => {\n      if (disabled) return;\n      \n      event.preventDefault();\n      setDragging(true);\n      setShowTooltipState(true);\n      \n      const rect = trackRef.current?.getBoundingClientRect();\n      if (!rect) return;\n      \n      const clientX = 'touches' in event ? event.touches[0].clientX : event.clientX;\n      const clientY = 'touches' in event ? event.touches[0].clientY : event.clientY;\n      \n      const newValue = getValueFromPosition(clientX, clientY, rect, orientation, min, max, step);\n      \n      // Create synthetic event\n      const syntheticEvent = {\n        target: { value: newValue.toString() },\n        currentTarget: { value: newValue.toString() },\n        type: 'change',\n        bubbles: true,\n        cancelable: true,\n        preventDefault: () => {},\n        stopPropagation: () => {},\n      } as unknown as React.ChangeEvent<HTMLInputElement>;\n      \n      updateValue(newValue, syntheticEvent);\n      inputRef.current?.focus();\n  }, [disabled, orientation, min, max, step, updateValue]);\n  \n  // Handle pointer move (for dragging)\n  const handlePointerMove = useCallback((event: MouseEvent | TouchEvent) => {\n      if (!dragging || disabled) return;\n      \n      const rect = trackRef.current?.getBoundingClientRect();\n      if (!rect) return;\n      \n      const clientX = 'touches' in event ? event.touches[0].clientX : event.clientX;\n      const clientY = 'touches' in event ? event.touches[0].clientY : event.clientY;\n      \n      const newValue = getValueFromPosition(clientX, clientY, rect, orientation, min, max, step);\n      \n      // Create synthetic event\n      const syntheticEvent = {\n        target: { value: newValue.toString() },\n        currentTarget: { value: newValue.toString() },\n        type: 'change',\n        bubbles: true,\n        cancelable: true,\n        preventDefault: () => {},\n        stopPropagation: () => {},\n      } as unknown as React.ChangeEvent<HTMLInputElement>;\n      \n      updateValue(newValue, syntheticEvent);\n  }, [dragging, disabled, orientation, min, max, step, updateValue]);\n  \n  // Handle pointer up\n  const handlePointerUp = useCallback(() => {\n    setDragging(false);\n    setShowTooltipState(false);\n  }, []);\n    \n  // Effect for global mouse events during drag\n  React.useEffect(() => {\n      if (dragging) {\n        const handleMouseMove = (e: MouseEvent) => handlePointerMove(e);\n        const handleMouseUp = () => handlePointerUp();\n        const handleTouchMove = (e: TouchEvent) => handlePointerMove(e);\n        const handleTouchEnd = () => handlePointerUp();\n        \n        document.addEventListener('mousemove', handleMouseMove);\n        document.addEventListener('mouseup', handleMouseUp);\n        document.addEventListener('touchmove', handleTouchMove);\n        document.addEventListener('touchend', handleTouchEnd);\n        \n        return () => {\n          document.removeEventListener('mousemove', handleMouseMove);\n          document.removeEventListener('mouseup', handleMouseUp);\n          document.removeEventListener('touchmove', handleTouchMove);\n          document.removeEventListener('touchend', handleTouchEnd);\n        };\n      }\n  }, [dragging, handlePointerMove, handlePointerUp]);\n  \n  // Handle keyboard events\n  const handleKeyDown = useCallback((event: React.KeyboardEvent<HTMLInputElement>) => {\n    if (disabled) return;\n    \n    handleKeyDownUtil(event, currentValue, min, max, step, orientation, onChange);\n  }, [disabled, currentValue, min, max, step, orientation, onChange]);\n  \n  // Handle focus events\n  const handleFocus = useCallback(() => {\n    setFocused(true);\n    if (showTooltip) {\n      setShowTooltipState(true);\n    }\n  }, [showTooltip]);\n  \n  const handleBlur = useCallback(() => {\n    setFocused(false);\n    if (!dragging) {\n      setShowTooltipState(false);\n    }\n  }, [dragging]);\n\n  // Handle mouse enter/leave for hover state\n  const handleMouseEnter = useCallback(() => {\n    if (!disabled) {\n      setHovering(true);\n      if (showTooltip) {\n        setShowTooltipState(true);\n      }\n    }\n  }, [disabled, showTooltip]);\n\n  const handleMouseLeave = useCallback(() => {\n    if (!dragging) {\n      setHovering(false);\n      if (!focused) {\n        setShowTooltipState(false);\n      }\n    }\n  }, [dragging, focused]);\n    \n  // Generate tick marks if needed\n  const tickMarks = showTicks ? generateTicks(min, max, step, ticks) : [];\n  \n  // Get ARIA attributes\n  const ariaAttributes = getAriaAttributes({\n    value: currentValue,\n    min,\n    max,\n    step,\n    disabled,\n    orientation,\n    label,\n    describedBy: description ? `${id}-description` : undefined,\n  });\n  \n  // Render the slider\n  return (\n      <div\n        className={className}\n        style={{\n          ...getSliderContainerStyles(orientation, length, disabled),\n          ...style,\n        }}\n      >\n        {/* Label */}\n        {label && (\n          <label\n            htmlFor={id}\n            style={getLabelStyles(size, disabled || false, error || false, cssVars)}\n          >\n            {label}\n          </label>\n        )}\n        \n        {/* Main slider container */}\n        <div style={{ display: 'flex', alignItems: 'center', gap: '12px', width: '100%' }}>\n          {/* Header for horizontal */}\n          {orientation === 'horizontal' && header && (\n            <span style={getMinMaxLabelStyles(size, orientation, disabled || false, color, customColor, cssVars)}>\n              {header}\n            </span>\n          )}\n          \n          {/* Track container */}\n          <div\n            ref={trackRef}\n            style={{\n              ...getTrackContainerStyles(orientation, size, animationsEnabled, length),\n              cursor: disabled ? 'not-allowed' : dragging ? 'grabbing' : hovering ? 'grab' : 'pointer',\n            }}\n            onMouseDown={handlePointerDown}\n            onTouchStart={handlePointerDown}\n            onMouseEnter={handleMouseEnter}\n            onMouseLeave={handleMouseLeave}\n          >\n            {/* Track background */}\n            <div style={getTrackBackgroundStyles(orientation, size, variant, color, customColor, cssVars)} />\n            \n            {/* Track fill */}\n            <div\n              style={getTrackFillStyles(\n                orientation,\n                size,\n                color,\n                customColor,\n                currentValue,\n                min,\n                max,\n                error || false,\n                animationsEnabled && !dragging,\n                variant,\n                cssVars\n              )}\n            />\n            \n            {/* Tick marks */}\n            {tickMarks.map((tick) => (\n              <div key={tick.value}>\n                <div style={getTickStyles(orientation, size, tick.value, min, max, cssVars)} />\n                {tick.label && (\n                  <div style={getTickLabelStyles(orientation, size, tick.value, min, max, cssVars)}>\n                    {tick.label}\n                  </div>\n                )}\n              </div>\n            ))}\n            \n            {/* Thumb */}\n            <div\n              style={{\n                ...getThumbStyles(\n                  orientation,\n                  size,\n                  color,\n                  customColor,\n                  currentValue,\n                  min,\n                  max,\n                  error || false,\n                  focused || hovering,\n                  animationsEnabled && !dragging,\n                  variant,\n                  cssVars\n                ),\n                cursor: disabled ? 'not-allowed' : dragging ? 'grabbing' : 'grab',\n              }}\n            />\n            \n            {/* Tooltip */}\n            {showTooltip && showTooltipState && (\n              <div style={getTooltipStyles(orientation, size, currentValue, min, max, cssVars)}>\n                {formatValue(currentValue, customFormatter)}\n              </div>\n            )}\n            \n            {/* Hidden input for accessibility and form integration */}\n            <input\n              ref={inputRef}\n              type=\"range\"\n              id={id}\n              min={min}\n              max={max}\n              step={step}\n              value={currentValue}\n              disabled={disabled}\n              onChange={handleChange}\n              onInput={handleInput}\n              onKeyDown={handleKeyDown}\n              onFocus={handleFocus}\n              onBlur={handleBlur}\n              style={getHiddenInputStyles()}\n              {...ariaAttributes}\n              name={name}\n              required={required}\n              readOnly={readOnly}\n              autoComplete={autoComplete}\n              autoFocus={autoFocus}\n              data-testid={dataTestId}\n              {...rest}\n            />\n          </div>\n          \n          {/* Footer for horizontal */}\n          {orientation === 'horizontal' && footer && (\n            <span style={getMinMaxLabelStyles(size, orientation, disabled || false, color, customColor, cssVars)}>\n              {footer}\n            </span>\n          )}\n        </div>\n        \n        {/* Labels for vertical orientation */}\n        {orientation === 'vertical' && (header || footer) && (\n          <div style={getLabelsContainerStyles(orientation)}>\n            {header && (\n              <span style={getMinMaxLabelStyles(size, orientation, disabled || false, color, customColor, cssVars)}>\n                {header}\n              </span>\n            )}\n            {footer && (\n              <span style={getMinMaxLabelStyles(size, orientation, disabled || false, color, customColor, cssVars)}>\n                {footer}\n              </span>\n            )}\n          </div>\n        )}\n    </div>\n  );\n});\n\nSlider.displayName = 'Slider';","import React from 'react';\r\nimport type { TextAreaColor, TextAreaVariant, TextAreaSize, TextAreaShape, TextAreaResize } from './TextArea.types';\r\n\r\n// Get color variables based on color prop\r\nexport const getColorVariables = (color: TextAreaColor, customColor: string | undefined, cssVars: any) => {\r\n  if (color === 'custom' && customColor) {\r\n    return {\r\n      main: customColor,\r\n      foreground: '#ffffff',\r\n      background: customColor + '10',\r\n      border: customColor,\r\n      hover: customColor + '20',\r\n    };\r\n  }\r\n\r\n  const colorMap: Record<string, any> = {\r\n    primary: {\r\n      main: cssVars.primary,\r\n      background: cssVars.primaryBackground || cssVars.primary + '10',\r\n      foreground: cssVars.primaryForeground,\r\n      hover: cssVars.primaryHover || cssVars.primary + '20',\r\n      border: cssVars.primaryBorder || cssVars.primary,\r\n    },\r\n    secondary: {\r\n      main: cssVars.secondary,\r\n      background: cssVars.secondaryBackground || cssVars.secondary + '10',\r\n      foreground: cssVars.secondaryForeground,\r\n      hover: cssVars.secondaryHover || cssVars.secondary + '20',\r\n      border: cssVars.secondaryBorder || cssVars.secondary,\r\n    },\r\n    success: {\r\n      main: cssVars.success,\r\n      background: cssVars.successBackground || cssVars.success + '10',\r\n      foreground: cssVars.successForeground,\r\n      hover: cssVars.successHover || cssVars.success + '20',\r\n      border: cssVars.successBorder || cssVars.success,\r\n    },\r\n    warning: {\r\n      main: cssVars.warning,\r\n      background: cssVars.warningBackground || cssVars.warning + '10',\r\n      foreground: cssVars.warningForeground,\r\n      hover: cssVars.warningHover || cssVars.warning + '20',\r\n      border: cssVars.warningBorder || cssVars.warning,\r\n    },\r\n    destructive: {\r\n      main: cssVars.error,\r\n      background: cssVars.errorBackground || cssVars.error + '10',\r\n      foreground: cssVars.errorForeground || '#ffffff',\r\n      hover: cssVars.errorHover || cssVars.error + '20',\r\n      border: cssVars.errorBorder || cssVars.error,\r\n    },\r\n    info: {\r\n      main: cssVars.info,\r\n      background: cssVars.infoBackground || cssVars.info + '10',\r\n      foreground: cssVars.infoForeground,\r\n      hover: cssVars.infoHover || cssVars.info + '20',\r\n      border: cssVars.infoBorder || cssVars.info,\r\n    },\r\n  };\r\n\r\n  return colorMap[color] || colorMap.primary;\r\n};\r\n\r\n// Get shape styles based on shape prop\r\nexport const getShapeStyles = (shape: TextAreaShape): React.CSSProperties => {\r\n  switch (shape) {\r\n    case 'sharp':\r\n      return { borderRadius: '0' };\r\n    case 'round':\r\n      return { borderRadius: '12px' };\r\n    case 'pill':\r\n      return { borderRadius: '9999px' };\r\n    default:\r\n      return { borderRadius: '12px' };\r\n  }\r\n};\r\n\r\n// Get size configuration\r\nexport const getSizeConfig = (size: TextAreaSize) => {\r\n  const configs = {\r\n    xs: {\r\n      padding: '8px 10px',\r\n      fontSize: '12px',\r\n      lineHeight: 1.4,\r\n      minHeight: '64px',\r\n      iconSize: '14px',\r\n    },\r\n    sm: {\r\n      padding: '10px 12px',\r\n      fontSize: '14px',\r\n      lineHeight: 1.4,\r\n      minHeight: '72px',\r\n      iconSize: '16px',\r\n    },\r\n    md: {\r\n      padding: '12px 14px',\r\n      fontSize: '16px',\r\n      lineHeight: 1.5,\r\n      minHeight: '80px',\r\n      iconSize: '18px',\r\n    },\r\n    lg: {\r\n      padding: '14px 16px',\r\n      fontSize: '18px',\r\n      lineHeight: 1.5,\r\n      minHeight: '96px',\r\n      iconSize: '20px',\r\n    },\r\n    xl: {\r\n      padding: '16px 18px',\r\n      fontSize: '20px',\r\n      lineHeight: 1.5,\r\n      minHeight: '112px',\r\n      iconSize: '22px',\r\n    },\r\n  };\r\n\r\n  return configs[size];\r\n};\r\n\r\n// Container styles\r\nexport const getTextAreaContainerStyles = (\r\n  width: string | number | undefined,\r\n  height: string | number | undefined,\r\n  disabled: boolean\r\n): React.CSSProperties => {\r\n  const baseStyles: React.CSSProperties = {\r\n    position: 'relative',\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    width: width || '100%',\r\n    fontFamily: 'inherit',\r\n  };\r\n\r\n  if (height) {\r\n    baseStyles.height = typeof height === 'number' ? `${height}px` : height;\r\n  }\r\n\r\n  if (disabled) {\r\n    baseStyles.opacity = 0.6;\r\n  }\r\n\r\n  return baseStyles;\r\n};\r\n\r\n// TextArea input styles\r\nexport const getTextAreaInputStyles = (\r\n  color: TextAreaColor,\r\n  customColor: string | undefined,\r\n  variant: TextAreaVariant,\r\n  shape: TextAreaShape,\r\n  size: TextAreaSize,\r\n  resize: TextAreaResize,\r\n  disabled: boolean,\r\n  error: boolean,\r\n  focused: boolean,\r\n  minRows: number,\r\n  maxRows: number | undefined,\r\n  autoResize: boolean,\r\n  showLineNumbers: boolean,\r\n  animationsEnabled: boolean,\r\n  cssVars: any\r\n): React.CSSProperties => {\r\n  const colors = getColorVariables(color, customColor, cssVars);\r\n  const sizeConfig = getSizeConfig(size);\r\n  const shapeStyles = getShapeStyles(shape);\r\n\r\n  // Base styles\r\n  const baseStyles: React.CSSProperties = {\r\n    width: '100%',\r\n    borderWidth: '2px',\r\n    borderStyle: 'solid',\r\n    outline: 'none',\r\n    fontFamily: 'inherit',\r\n    resize: resize === 'none' ? 'none' : resize,\r\n    transition: animationsEnabled\r\n      ? 'border-color var(--duration-fast) var(--animation-smooth), background-color var(--duration-fast) var(--animation-smooth), opacity var(--duration-fast) var(--animation-smooth)'\r\n      : 'none',\r\n    ...sizeConfig,\r\n    ...shapeStyles,\r\n  };\r\n\r\n  // Auto-resize calculations\r\n  if (autoResize) {\r\n    baseStyles.resize = 'none';\r\n    baseStyles.overflow = 'hidden';\r\n    if (maxRows) {\r\n      const lineHeight = parseFloat(sizeConfig.lineHeight.toString());\r\n      const maxHeight = maxRows * lineHeight + 32; // Add padding\r\n      baseStyles.maxHeight = `${maxHeight}px`;\r\n    }\r\n  } else {\r\n    const lineHeight = parseFloat(sizeConfig.lineHeight.toString());\r\n    const minHeight = Math.max(\r\n      minRows * lineHeight * parseFloat(sizeConfig.fontSize) + 32,\r\n      parseFloat(sizeConfig.minHeight.replace('px', ''))\r\n    );\r\n    baseStyles.minHeight = `${minHeight}px`;\r\n  }\r\n\r\n  // Line numbers adjustment\r\n  if (showLineNumbers) {\r\n    baseStyles.paddingLeft = '40px';\r\n  }\r\n\r\n  // Variant-specific styles with error state override (matching Search component)\r\n  const variantStyles = (() => {\r\n    if (error) {\r\n      const baseErrorStyle = {\r\n        borderColor: cssVars.destructive,\r\n      };\r\n\r\n      switch (variant) {\r\n        case 'solid':\r\n          return {\r\n            ...baseErrorStyle,\r\n            backgroundColor: cssVars.destructiveAccent || cssVars.destructive,\r\n            color: colors.foreground, // Keep original foreground color\r\n          };\r\n        case 'ghost':\r\n          return {\r\n            ...baseErrorStyle,\r\n            backgroundColor: 'transparent',\r\n            color: cssVars.foreground,\r\n          };\r\n        case 'glassmorphic':\r\n          return {\r\n            ...baseErrorStyle,\r\n            backgroundColor: cssVars.destructiveBackground,\r\n            color: cssVars.destructiveForeground,\r\n            backdropFilter: 'blur(10px)',\r\n            WebkitBackdropFilter: 'blur(10px)',\r\n          };\r\n        case 'outline':\r\n        default:\r\n          return {\r\n            ...baseErrorStyle,\r\n            backgroundColor: cssVars.background,\r\n            color: cssVars.foreground,\r\n          };\r\n      }\r\n    }\r\n\r\n    // Normal state styles by variant (matching Search component)\r\n    switch (variant) {\r\n      case 'solid':\r\n        return {\r\n          backgroundColor: colors.accent || colors.main,\r\n          borderColor: colors.accent || colors.main,\r\n          color: colors.foreground,\r\n        };\r\n      case 'ghost':\r\n        return {\r\n          backgroundColor: 'transparent',\r\n          borderColor: 'transparent',\r\n          color: cssVars.foreground,\r\n        };\r\n      case 'glassmorphic':\r\n        return {\r\n          backgroundColor: colors.background,\r\n          borderColor: colors.border,\r\n          color: colors.foreground,\r\n          backdropFilter: 'blur(10px)',\r\n          WebkitBackdropFilter: 'blur(10px)',\r\n        };\r\n      case 'outline':\r\n      default:\r\n        return {\r\n          backgroundColor: cssVars.background,\r\n          borderColor: colors.main,\r\n          color: cssVars.foreground,\r\n        };\r\n    }\r\n  })();\r\n\r\n  // Focus styles (matching Search component)\r\n  const focusStyles: React.CSSProperties = {};\r\n  if (focused) {\r\n    const focusColor = error ? cssVars.destructive : colors.main;\r\n    focusStyles.outline = `2px solid ${focusColor}`;\r\n    focusStyles.outlineOffset = '2px';\r\n  }\r\n\r\n  // Disabled styles\r\n  if (disabled) {\r\n    baseStyles.cursor = 'not-allowed';\r\n    baseStyles.backgroundColor = cssVars.muted;\r\n    baseStyles.color = cssVars.mutedForeground;\r\n  }\r\n\r\n  return {\r\n    ...baseStyles,\r\n    ...variantStyles,\r\n    ...focusStyles,\r\n  };\r\n};\r\n\r\n// Label styles\r\nexport const getLabelStyles = (\r\n  size: TextAreaSize,\r\n  disabled: boolean,\r\n  error: boolean,\r\n  cssVars: any\r\n): React.CSSProperties => {\r\n  const sizeConfig = getSizeConfig(size);\r\n  \r\n  return {\r\n    fontSize: sizeConfig.fontSize,\r\n    fontWeight: 500,\r\n    color: disabled ? cssVars.mutedForeground : (error ? cssVars.error : cssVars.foreground),\r\n    marginBottom: '6px',\r\n    userSelect: 'none',\r\n    display: 'block',\r\n  };\r\n};\r\n\r\n// Description styles\r\nexport const getDescriptionStyles = (\r\n  size: TextAreaSize,\r\n  disabled: boolean,\r\n  cssVars: any\r\n): React.CSSProperties => {\r\n  const fontSizeMap = {\r\n    xs: '10px',\r\n    sm: '12px',\r\n    md: '14px',\r\n    lg: '16px',\r\n    xl: '18px',\r\n  };\r\n  \r\n  return {\r\n    fontSize: fontSizeMap[size],\r\n    color: disabled ? cssVars.mutedForeground : cssVars.mutedForeground,\r\n    marginBottom: '6px',\r\n    lineHeight: 1.4,\r\n  };\r\n};\r\n\r\n// Helper text styles\r\nexport const getHelperTextStyles = (\r\n  size: TextAreaSize,\r\n  disabled: boolean,\r\n  error: boolean,\r\n  cssVars: any\r\n): React.CSSProperties => {\r\n  const fontSizeMap = {\r\n    xs: '10px',\r\n    sm: '12px',\r\n    md: '14px',\r\n    lg: '16px',\r\n    xl: '18px',\r\n  };\r\n  \r\n  return {\r\n    fontSize: fontSizeMap[size],\r\n    color: disabled ? cssVars.mutedForeground : (error ? cssVars.error : cssVars.mutedForeground),\r\n    marginTop: '6px',\r\n    lineHeight: 1.4,\r\n  };\r\n};\r\n\r\n// Character count styles\r\nexport const getCharacterCountStyles = (\r\n  size: TextAreaSize,\r\n  disabled: boolean,\r\n  isOverLimit: boolean,\r\n  cssVars: any\r\n): React.CSSProperties => {\r\n  const fontSizeMap = {\r\n    xs: '10px',\r\n    sm: '12px',\r\n    md: '14px',\r\n    lg: '16px',\r\n    xl: '18px',\r\n  };\r\n  \r\n  return {\r\n    fontSize: fontSizeMap[size],\r\n    color: disabled \r\n      ? cssVars.mutedForeground \r\n      : isOverLimit \r\n        ? cssVars.error \r\n        : cssVars.mutedForeground,\r\n    marginTop: '4px',\r\n    textAlign: 'right',\r\n    userSelect: 'none',\r\n  };\r\n};\r\n\r\n// Icon styles\r\nexport const getIconStyles = (\r\n  size: TextAreaSize,\r\n  iconPosition: 'top-left' | 'top-right' | 'bottom-left' | 'bottom-right',\r\n  clickable: boolean,\r\n  disabled: boolean,\r\n  cssVars: any\r\n): React.CSSProperties => {\r\n  const sizeConfig = getSizeConfig(size);\r\n  \r\n  const baseStyles: React.CSSProperties = {\r\n    position: 'absolute',\r\n    fontSize: sizeConfig.iconSize,\r\n    color: disabled ? cssVars.mutedForeground : cssVars.foreground,\r\n    cursor: clickable && !disabled ? 'pointer' : 'default',\r\n    zIndex: 1,\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n  };\r\n\r\n  // Position the icon\r\n  const offset = '12px';\r\n  switch (iconPosition) {\r\n    case 'top-left':\r\n      baseStyles.top = offset;\r\n      baseStyles.left = offset;\r\n      break;\r\n    case 'top-right':\r\n      baseStyles.top = offset;\r\n      baseStyles.right = offset;\r\n      break;\r\n    case 'bottom-left':\r\n      baseStyles.bottom = offset;\r\n      baseStyles.left = offset;\r\n      break;\r\n    case 'bottom-right':\r\n      baseStyles.bottom = offset;\r\n      baseStyles.right = offset;\r\n      break;\r\n  }\r\n\r\n  if (clickable && !disabled) {\r\n    baseStyles.transition = 'color var(--duration-fast) var(--animation-smooth)';\r\n  }\r\n\r\n  return baseStyles;\r\n};\r\n\r\n// Line numbers styles\r\nexport const getLineNumbersStyles = (\r\n  size: TextAreaSize,\r\n  disabled: boolean,\r\n  cssVars: any\r\n): React.CSSProperties => {\r\n  const sizeConfig = getSizeConfig(size);\r\n  \r\n  return {\r\n    position: 'absolute',\r\n    top: 0,\r\n    left: 0,\r\n    width: '32px',\r\n    height: '100%',\r\n    fontSize: sizeConfig.fontSize,\r\n    lineHeight: sizeConfig.lineHeight,\r\n    color: disabled ? cssVars.mutedForeground : cssVars.mutedForeground,\r\n    backgroundColor: cssVars.muted,\r\n    borderRight: `1px solid ${cssVars.border}`,\r\n    padding: sizeConfig.padding.split(' ')[0] + ' 4px',\r\n    fontFamily: 'monospace',\r\n    textAlign: 'right',\r\n    userSelect: 'none',\r\n    pointerEvents: 'none',\r\n    whiteSpace: 'pre',\r\n    overflow: 'hidden',\r\n  };\r\n};\r\n\r\n// Loading overlay styles\r\nexport const getLoadingOverlayStyles = (cssVars: any): React.CSSProperties => ({\r\n  position: 'absolute',\r\n  top: 0,\r\n  left: 0,\r\n  right: 0,\r\n  bottom: 0,\r\n  backgroundColor: cssVars.background + '80',\r\n  display: 'flex',\r\n  alignItems: 'center',\r\n  justifyContent: 'center',\r\n  zIndex: 2,\r\n});\r\n\r\n// Input wrapper styles (for relative positioning)\r\nexport const getInputWrapperStyles = (): React.CSSProperties => ({\r\n  position: 'relative',\r\n  display: 'flex',\r\n  flexDirection: 'column',\r\n  width: '100%',\r\n});\r\n\r\n// Bottom section styles (for helper text and character count)\r\nexport const getBottomSectionStyles = (): React.CSSProperties => ({\r\n  display: 'flex',\r\n  justifyContent: 'space-between',\r\n  alignItems: 'flex-start',\r\n  gap: '8px',\r\n  marginTop: '6px',\r\n});\r\n\r\n// Resize handle styles (custom resize handle)\r\nexport const getResizeHandleStyles = (\r\n  resize: TextAreaResize,\r\n  disabled: boolean,\r\n  cssVars: any\r\n): React.CSSProperties => {\r\n  if (resize === 'none' || disabled) {\r\n    return { display: 'none' };\r\n  }\r\n\r\n  return {\r\n    position: 'absolute',\r\n    bottom: '2px',\r\n    right: '2px',\r\n    width: '16px',\r\n    height: '16px',\r\n    backgroundColor: cssVars.mutedForeground,\r\n    opacity: 0.3,\r\n    cursor: resize === 'both' ? 'nw-resize' : resize === 'horizontal' ? 'ew-resize' : 'ns-resize',\r\n    clipPath: 'polygon(100% 0%, 100% 100%, 0% 100%)',\r\n    pointerEvents: 'none',\r\n  };\r\n};","import type { TextAreaSize, TextAreaColor } from './TextArea.types';\r\n\r\n/**\r\n * Get the default size for consistency\r\n */\r\nexport const getDefaultSize = (): TextAreaSize => 'md';\r\n\r\n/**\r\n * Get the default color for consistency\r\n */\r\nexport const getDefaultColor = (): TextAreaColor => 'primary';\r\n\r\n/**\r\n * Calculate the number of lines in text\r\n */\r\nexport const getLineCount = (text: string): number => {\r\n  if (!text) return 1;\r\n  return text.split('\\n').length;\r\n};\r\n\r\n/**\r\n * Generate line numbers for display\r\n */\r\nexport const generateLineNumbers = (lineCount: number): string => {\r\n  const lines = [];\r\n  for (let i = 1; i <= lineCount; i++) {\r\n    lines.push(i.toString());\r\n  }\r\n  return lines.join('\\n');\r\n};\r\n\r\n/**\r\n * Calculate the character count with optional newline handling\r\n */\r\nexport const getCharacterCount = (\r\n  text: string,\r\n  countNewlines: boolean = true\r\n): number => {\r\n  if (!text) return 0;\r\n  \r\n  if (countNewlines) {\r\n    return text.length;\r\n  }\r\n  \r\n  // Don't count newline characters\r\n  return text.replace(/\\n/g, '').length;\r\n};\r\n\r\n/**\r\n * Check if character count is over the limit\r\n */\r\nexport const isOverCharacterLimit = (\r\n  text: string,\r\n  maxLength: number | undefined,\r\n  countNewlines: boolean = true\r\n): boolean => {\r\n  if (!maxLength) return false;\r\n  return getCharacterCount(text, countNewlines) > maxLength;\r\n};\r\n\r\n/**\r\n * Auto-resize textarea height based on content\r\n */\r\nexport const calculateAutoHeight = (\r\n  textarea: HTMLTextAreaElement,\r\n  minRows: number,\r\n  maxRows: number | undefined,\r\n  lineHeight: number\r\n): number => {\r\n  // Reset height to auto to get the correct scroll height\r\n  textarea.style.height = 'auto';\r\n  \r\n  const scrollHeight = textarea.scrollHeight;\r\n  const paddingHeight = 24; // Approximate padding\r\n  const minHeight = minRows * lineHeight + paddingHeight;\r\n  \r\n  let height = Math.max(scrollHeight, minHeight);\r\n  \r\n  if (maxRows) {\r\n    const maxHeight = maxRows * lineHeight + paddingHeight;\r\n    height = Math.min(height, maxHeight);\r\n  }\r\n  \r\n  return height;\r\n};\r\n\r\n/**\r\n * Handle keyboard shortcuts\r\n */\r\nexport const handleKeyDown = (\r\n  event: React.KeyboardEvent<HTMLTextAreaElement>,\r\n  clearOnEscape: boolean,\r\n  onClear?: () => void\r\n) => {\r\n  const { key, ctrlKey, metaKey } = event;\r\n  \r\n  // Handle escape key for clearing\r\n  if (key === 'Escape' && clearOnEscape) {\r\n    event.preventDefault();\r\n    onClear?.();\r\n    return;\r\n  }\r\n  \r\n  // Handle common shortcuts\r\n  if (ctrlKey || metaKey) {\r\n    switch (key) {\r\n      case 'a':\r\n        // Select all - let it work naturally\r\n        break;\r\n      case 'z':\r\n        // Undo - let it work naturally\r\n        break;\r\n      case 'y':\r\n        // Redo - let it work naturally\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  }\r\n  \r\n  // Handle tab indentation (optional feature)\r\n  if (key === 'Tab') {\r\n    // Allow tab to work naturally for navigation\r\n    // If we want to add tab indentation, we could handle it here\r\n  }\r\n};\r\n\r\n/**\r\n * Format character count display\r\n */\r\nexport const formatCharacterCount = (\r\n  current: number,\r\n  max: number | undefined\r\n): string => {\r\n  if (max) {\r\n    return `${current}/${max}`;\r\n  }\r\n  return current.toString();\r\n};\r\n\r\n/**\r\n * Validate textarea props\r\n */\r\nexport const validateTextAreaProps = (props: {\r\n  minRows: number;\r\n  maxRows?: number;\r\n  maxLength?: number;\r\n  autoResize: boolean;\r\n}) => {\r\n  const { minRows, maxRows, maxLength, autoResize } = props;\r\n  \r\n  if (process.env.NODE_ENV === 'development') {\r\n    if (minRows < 1) {\r\n      console.warn('TextArea: minRows should be at least 1');\r\n    }\r\n    \r\n    if (maxRows && maxRows < minRows) {\r\n      console.warn('TextArea: maxRows should be greater than or equal to minRows');\r\n    }\r\n    \r\n    if (maxLength && maxLength < 1) {\r\n      console.warn('TextArea: maxLength should be a positive number');\r\n    }\r\n    \r\n    if (autoResize && !maxRows) {\r\n      console.warn('TextArea: Consider setting maxRows when using autoResize to prevent unlimited growth');\r\n    }\r\n  }\r\n};\r\n\r\n/**\r\n * Get ARIA attributes for textarea\r\n */\r\nexport const getAriaAttributes = (props: {\r\n  error: boolean;\r\n  disabled: boolean;\r\n  label?: string;\r\n  description?: string;\r\n  helperText?: string;\r\n  errorMessage?: string;\r\n  maxLength?: number;\r\n  describedBy?: string;\r\n  labelledBy?: string;\r\n}) => {\r\n  const { \r\n    error, \r\n    disabled, \r\n    label, \r\n    description, \r\n    helperText, \r\n    errorMessage, \r\n    maxLength, \r\n    describedBy, \r\n    labelledBy \r\n  } = props;\r\n  \r\n  const ariaDescribedBy = [];\r\n  if (describedBy) ariaDescribedBy.push(describedBy);\r\n  if (description) ariaDescribedBy.push('textarea-description');\r\n  if (helperText) ariaDescribedBy.push('textarea-helper');\r\n  if (error && errorMessage) ariaDescribedBy.push('textarea-error');\r\n  \r\n  return {\r\n    'aria-invalid': error,\r\n    'aria-disabled': disabled,\r\n    'aria-label': label,\r\n    'aria-describedby': ariaDescribedBy.length > 0 ? ariaDescribedBy.join(' ') : undefined,\r\n    'aria-labelledby': labelledBy,\r\n    'aria-required': undefined, // Will be set by required prop\r\n    maxLength,\r\n  };\r\n};\r\n\r\n/**\r\n * Handle paste events with formatting\r\n */\r\nexport const handlePaste = (\r\n  event: React.ClipboardEvent<HTMLTextAreaElement>,\r\n  maxLength: number | undefined,\r\n  currentValue: string,\r\n  selectionStart: number,\r\n  selectionEnd: number\r\n): { shouldPrevent: boolean; newValue?: string } => {\r\n  if (!maxLength) {\r\n    return { shouldPrevent: false };\r\n  }\r\n  \r\n  const pastedText = event.clipboardData.getData('text');\r\n  const beforeSelection = currentValue.substring(0, selectionStart);\r\n  const afterSelection = currentValue.substring(selectionEnd);\r\n  const newValue = beforeSelection + pastedText + afterSelection;\r\n  \r\n  if (newValue.length > maxLength) {\r\n    // Trim the pasted text to fit within the limit\r\n    const availableSpace = maxLength - beforeSelection.length - afterSelection.length;\r\n    const trimmedPaste = pastedText.substring(0, Math.max(0, availableSpace));\r\n    const finalValue = beforeSelection + trimmedPaste + afterSelection;\r\n    \r\n    return {\r\n      shouldPrevent: true,\r\n      newValue: finalValue,\r\n    };\r\n  }\r\n  \r\n  return { shouldPrevent: false };\r\n};\r\n\r\n/**\r\n * Debounce function for auto-resize\r\n */\r\nexport const debounce = <T extends (...args: any[]) => any>(\r\n  func: T,\r\n  wait: number\r\n): ((...args: Parameters<T>) => void) => {\r\n  let timeout: NodeJS.Timeout;\r\n  \r\n  return (...args: Parameters<T>) => {\r\n    clearTimeout(timeout);\r\n    timeout = setTimeout(() => func(...args), wait);\r\n  };\r\n};\r\n\r\n/**\r\n * Get cursor position information\r\n */\r\nexport const getCursorInfo = (textarea: HTMLTextAreaElement) => {\r\n  const { selectionStart, selectionEnd, value } = textarea;\r\n  const beforeCursor = value.substring(0, selectionStart);\r\n  const selectedText = value.substring(selectionStart, selectionEnd);\r\n  const afterCursor = value.substring(selectionEnd);\r\n  \r\n  const lineNumber = beforeCursor.split('\\n').length;\r\n  const columnNumber = beforeCursor.split('\\n').pop()?.length ?? 0;\r\n  \r\n  return {\r\n    selectionStart,\r\n    selectionEnd,\r\n    selectedText,\r\n    lineNumber,\r\n    columnNumber: columnNumber + 1, // 1-indexed\r\n    hasSelection: selectionStart !== selectionEnd,\r\n  };\r\n};","'use client';\n\nimport React, { forwardRef, useRef, useImperativeHandle, useState, useCallback, useId, useEffect } from 'react';\nimport { useCSSVariables, useSettings } from '../../../providers';\nimport { extractFormProps, UNIVERSAL_DEFAULTS } from '../types';\nimport type { TextAreaProps, TextAreaRef } from './TextArea.types';\nimport {\n  getTextAreaContainerStyles,\n  getTextAreaInputStyles,\n  getLabelStyles,\n  getDescriptionStyles,\n  getHelperTextStyles,\n  getCharacterCountStyles,\n  getIconStyles,\n  getLineNumbersStyles,\n  getLoadingOverlayStyles,\n  getInputWrapperStyles,\n  getBottomSectionStyles,\n  getResizeHandleStyles,\n} from './TextArea.styles';\nimport {\n  getDefaultSize,\n  getDefaultColor,\n  getLineCount,\n  generateLineNumbers,\n  getCharacterCount,\n  isOverCharacterLimit,\n  calculateAutoHeight,\n  handleKeyDown as handleKeyDownUtil,\n  formatCharacterCount,\n  validateTextAreaProps,\n  getAriaAttributes,\n  handlePaste,\n  debounce,\n  getCursorInfo,\n} from './TextArea.utils';\n\nexport const TextArea = forwardRef<TextAreaRef, TextAreaProps>((allProps, ref) => {\n  // Extract onPaste separately since it's not part of universal form props\n  const { onPaste, ...propsForExtraction } = allProps;\n  \n  // Extract form props and component-specific props\n  const [formProps, componentProps] = extractFormProps(propsForExtraction);\n  \n  // Destructure form props with defaults\n  const {\n    color = UNIVERSAL_DEFAULTS.color,\n    customColor,\n    variant = 'outline', // TextArea-specific default\n    shape = UNIVERSAL_DEFAULTS.shape,\n    size = UNIVERSAL_DEFAULTS.size,\n    disabled = UNIVERSAL_DEFAULTS.disabled,\n    loading = UNIVERSAL_DEFAULTS.loading,\n    error,\n    label,\n    helperText,\n    placeholder,\n    width,\n    height,\n    className,\n    style,\n    id: providedId,\n    'data-testid': dataTestId,\n    animate = UNIVERSAL_DEFAULTS.animate,\n    // Form-specific props\n    name,\n    value,\n    defaultValue,\n    required,\n    readOnly,\n    autoComplete,\n    autoFocus = false,\n    onChange,\n    onKeyDown,\n    onFocus,\n    onBlur,\n  } = formProps;\n  \n  // Destructure component-specific props\n  const {\n    resize = 'vertical',\n    description,\n    errorMessage,\n    showCharacterCount = false,\n    maxLength,\n    minRows = 3,\n    maxRows,\n    autoResize = false,\n    showLineNumbers = false,\n    clearOnEscape = false,\n    icon,\n    iconPosition = 'top-right',\n    iconClickable = false,\n    onIconClick,\n    ...rest\n  } = componentProps;\n    // Get CSS variables and settings\n    const cssVars = useCSSVariables();\n    const { settings } = useSettings();\n    const animationsEnabled = (settings.appearance.animations ?? true) && animate;\n    \n    // Generate unique ID if not provided\n    const generatedId = useId();\n    const id = providedId || generatedId;\n    \n    // Validate props in development\n    validateTextAreaProps({ minRows, maxRows, maxLength, autoResize });\n    \n    // Determine if controlled or uncontrolled\n    const isControlled = value !== undefined;\n    const [internalValue, setInternalValue] = useState(defaultValue || '');\n    const currentValue = isControlled ? value : internalValue;\n    \n    // State\n    const [focused, setFocused] = useState(false);\n    const [lineNumbers, setLineNumbers] = useState('1');\n    \n    // Refs\n    const textareaRef = useRef<HTMLTextAreaElement>(null);\n    \n    // Expose imperative methods\n    useImperativeHandle(ref, () => ({\n      focus: () => textareaRef.current?.focus(),\n      blur: () => textareaRef.current?.blur(),\n      select: () => textareaRef.current?.select(),\n      setSelectionRange: (start: number, end: number) => {\n        textareaRef.current?.setSelectionRange(start, end);\n      },\n      getValue: () => currentValue,\n      setValue: (newValue: string) => {\n        if (!isControlled) {\n          setInternalValue(newValue);\n        }\n        if (textareaRef.current) {\n          textareaRef.current.value = newValue;\n        }\n      },\n    }));\n    \n    // Auto-resize function\n    const handleAutoResize = useCallback(() => {\n      if (!autoResize || !textareaRef.current) return;\n      \n      const textarea = textareaRef.current;\n      const lineHeight = parseInt(getComputedStyle(textarea).lineHeight || '20');\n      const newHeight = calculateAutoHeight(textarea, minRows, maxRows, lineHeight);\n      \n      textarea.style.height = `${newHeight}px`;\n    }, [autoResize, minRows, maxRows]);\n    \n    // Debounced auto-resize\n    const debouncedAutoResize = useCallback(\n      debounce(handleAutoResize, 10),\n      [handleAutoResize]\n    );\n    \n    // Update line numbers\n    const updateLineNumbers = useCallback((text: string) => {\n      if (showLineNumbers) {\n        const lineCount = getLineCount(text);\n        setLineNumbers(generateLineNumbers(lineCount));\n      }\n    }, [showLineNumbers]);\n    \n    // Handle change\n    const handleChange = useCallback((event: React.ChangeEvent<HTMLTextAreaElement>) => {\n      const newValue = event.target.value;\n      \n      // Check character limit\n      if (maxLength && newValue.length > maxLength) {\n        return; // Prevent exceeding limit\n      }\n      \n      if (!isControlled) {\n        setInternalValue(newValue);\n      }\n      \n      onChange?.(event);\n      updateLineNumbers(newValue);\n      debouncedAutoResize();\n    }, [isControlled, maxLength, onChange, updateLineNumbers, debouncedAutoResize]);\n    \n    // Handle focus\n    const handleFocus = useCallback((event: React.FocusEvent<HTMLTextAreaElement>) => {\n      setFocused(true);\n      onFocus?.(event);\n    }, [onFocus]);\n    \n    // Handle blur\n    const handleBlur = useCallback((event: React.FocusEvent<HTMLTextAreaElement>) => {\n      setFocused(false);\n      onBlur?.(event);\n    }, [onBlur]);\n    \n    // Handle key down\n    const handleKeyDown = useCallback((event: React.KeyboardEvent<HTMLTextAreaElement>) => {\n      handleKeyDownUtil(event, clearOnEscape, () => {\n        if (!isControlled) {\n          setInternalValue('');\n        }\n        if (textareaRef.current) {\n          textareaRef.current.value = '';\n          const syntheticEvent = {\n            ...event,\n            target: textareaRef.current,\n            currentTarget: textareaRef.current,\n          } as React.ChangeEvent<HTMLTextAreaElement>;\n          onChange?.(syntheticEvent);\n        }\n        updateLineNumbers('');\n        debouncedAutoResize();\n      });\n      \n      onKeyDown?.(event);\n    }, [clearOnEscape, isControlled, onChange, updateLineNumbers, debouncedAutoResize, onKeyDown]);\n    \n    // Handle paste\n    const handlePasteEvent = useCallback((event: React.ClipboardEvent<HTMLTextAreaElement>) => {\n      if (maxLength && textareaRef.current) {\n        const { selectionStart, selectionEnd } = textareaRef.current;\n        const pasteResult = handlePaste(\n          event,\n          maxLength,\n          currentValue,\n          selectionStart,\n          selectionEnd\n        );\n        \n        if (pasteResult.shouldPrevent) {\n          event.preventDefault();\n          \n          if (pasteResult.newValue !== undefined) {\n            const newValue = pasteResult.newValue;\n            \n            if (!isControlled) {\n              setInternalValue(newValue);\n            }\n            \n            textareaRef.current.value = newValue;\n            \n            // Create synthetic change event\n            const syntheticEvent = {\n              ...event,\n              target: textareaRef.current,\n              currentTarget: textareaRef.current,\n              type: 'change',\n            } as unknown as React.ChangeEvent<HTMLTextAreaElement>;\n            \n            onChange?.(syntheticEvent);\n            updateLineNumbers(newValue);\n            debouncedAutoResize();\n          }\n        }\n      }\n      \n      onPaste?.(event);\n    }, [maxLength, currentValue, isControlled, onChange, updateLineNumbers, debouncedAutoResize, onPaste]);\n    \n    // Handle icon click\n    const handleIconClick = useCallback(() => {\n      if (iconClickable && !disabled && onIconClick) {\n        onIconClick();\n      }\n    }, [iconClickable, disabled, onIconClick]);\n    \n    // Initialize line numbers and auto-resize\n    useEffect(() => {\n      updateLineNumbers(currentValue);\n      if (autoResize) {\n        setTimeout(() => handleAutoResize(), 0);\n      }\n    }, [currentValue, updateLineNumbers, autoResize, handleAutoResize]);\n    \n    // Character count calculations\n    const characterCount = getCharacterCount(currentValue);\n    const isOverLimit = isOverCharacterLimit(currentValue, maxLength);\n    \n    // Get ARIA attributes\n    const ariaAttributes = getAriaAttributes({\n      error: error || false,\n      disabled: disabled || false,\n      label,\n      description,\n      helperText,\n      errorMessage,\n      maxLength,\n    });\n    \n    // Render the component\n    return (\n      <div\n        className={className}\n        style={{\n          ...getTextAreaContainerStyles(width, height, disabled),\n          ...style,\n        }}\n      >\n        {/* Label */}\n        {label && (\n          <label\n            htmlFor={id}\n            style={getLabelStyles(size, disabled || false, error || false, cssVars)}\n          >\n            {label}\n          </label>\n        )}\n        \n        {/* Description */}\n        {description && (\n          <div\n            id=\"textarea-description\"\n            style={getDescriptionStyles(size, disabled || false, cssVars)}\n          >\n            {description}\n          </div>\n        )}\n        \n        {/* Input wrapper */}\n        <div style={getInputWrapperStyles()}>\n          {/* Line numbers */}\n          {showLineNumbers && (\n            <div style={getLineNumbersStyles(size, disabled || false, cssVars)}>\n              {lineNumbers}\n            </div>\n          )}\n          \n          {/* TextArea input */}\n          <textarea\n            ref={textareaRef}\n            id={id}\n            value={currentValue}\n            disabled={disabled}\n            onChange={handleChange}\n            onFocus={handleFocus}\n            onBlur={handleBlur}\n            onKeyDown={handleKeyDown}\n            onPaste={handlePasteEvent}\n            style={getTextAreaInputStyles(\n              color,\n              customColor,\n              variant,\n              shape,\n              size,\n              resize,\n              disabled || false,\n              error || false,\n              focused,\n              minRows,\n              maxRows,\n              autoResize,\n              showLineNumbers,\n              animationsEnabled,\n              cssVars\n            )}\n            {...ariaAttributes}\n            name={name}\n            required={required}\n            readOnly={readOnly}\n            autoComplete={autoComplete}\n            autoFocus={autoFocus}\n            data-testid={dataTestId}\n            {...rest}\n          />\n          \n          {/* Icon */}\n          {icon && (\n            <div\n              style={getIconStyles(size, iconPosition, iconClickable, disabled || false, cssVars)}\n              onClick={handleIconClick}\n            >\n              {icon}\n            </div>\n          )}\n          \n          \n          {/* Loading overlay */}\n          {loading && (\n            <div style={getLoadingOverlayStyles(cssVars)}>\n              <div style={{ \n                width: '20px', \n                height: '20px', \n                border: `2px solid ${cssVars.border}`,\n                borderTop: `2px solid ${cssVars.primary}`,\n                borderRadius: '50%',\n                animation: 'spin 1s linear infinite'\n              }} />\n            </div>\n          )}\n        </div>\n        \n        {/* Bottom section with helper text and character count */}\n        {(helperText || errorMessage || showCharacterCount) && (\n          <div style={getBottomSectionStyles()}>\n            <div style={{ flex: 1 }}>\n              {/* Helper text or error message */}\n              {(helperText || (error && errorMessage)) && (\n                <div\n                  id={error && errorMessage ? \"textarea-error\" : \"textarea-helper\"}\n                  style={getHelperTextStyles(size, disabled || false, error || false, cssVars)}\n                >\n                  {error && errorMessage ? errorMessage : helperText}\n                </div>\n              )}\n            </div>\n            \n            {/* Character count */}\n            {showCharacterCount && (\n              <div style={getCharacterCountStyles(size, disabled || false, isOverLimit, cssVars)}>\n                {formatCharacterCount(characterCount, maxLength)}\n              </div>\n            )}\n          </div>\n        )}\n        \n        {/* Add spinner animation styles */}\n        <style dangerouslySetInnerHTML={{__html: `\n          @keyframes spin {\n            0% { transform: rotate(0deg); }\n            100% { transform: rotate(360deg); }\n          }\n        `}} />\n      </div>\n    );\n  }\n);\n\nTextArea.displayName = 'TextArea';","'use client';\r\n\r\nimport React, { useState, useEffect, useCallback, useRef } from 'react';\r\n\r\ninterface Leaf {\r\n  id: number;\r\n  x: number;\r\n  y: number;\r\n  rotation: number;\r\n  scale: number;\r\n  speed: number;\r\n  drift: number;\r\n  horizontalSpeed: number;\r\n  gravity: number;\r\n  image: string;\r\n  rotationSpeed: number;\r\n}\r\n\r\ninterface FallingLeavesProps {\r\n  /** Number of leaves to maintain on screen */\r\n  leafCount?: number;\r\n  /** How often to spawn new leaves (ms) */\r\n  spawnRate?: number;\r\n  /** Enable/disable the effect */\r\n  enabled?: boolean;\r\n}\r\n\r\nexport function FallingLeaves({\r\n  leafCount = 15,\r\n  spawnRate = 2000,\r\n  enabled = true\r\n}: FallingLeavesProps) {\r\n  const [leaves, setLeaves] = useState<Leaf[]>([]);\r\n  const [mounted, setMounted] = useState(false);\r\n  const nextIdRef = useRef(0);\r\n\r\n  // Available leaf images\r\n  const leafImages = [\r\n    '/assets/leaf_1.png',\r\n    '/assets/leaf_2.png',\r\n    '/assets/leaf_3.png',\r\n    '/assets/leaf_4.png'\r\n  ];\r\n\r\n  // Create a new leaf (stable function)\r\n  const createLeaf = (): Leaf => {\r\n    const screenWidth = typeof window !== 'undefined' ? window.innerWidth : 1920;\r\n    const id = nextIdRef.current++;\r\n    const leaf = {\r\n      id: id,\r\n      x: Math.random() * screenWidth,\r\n      y: -50, // Start just above the screen\r\n      rotation: Math.random() * 360,\r\n      scale: 0.3 + Math.random() * 0.7, // 0.3 to 1.0 scale\r\n      speed: 3 + Math.random() * 4, // Fall speed (much faster)\r\n      drift: (Math.random() - 0.5) * 0.5, // Horizontal drift\r\n      horizontalSpeed: -2 - Math.random() * 3, // Move left (-2 to -5 pixels per frame)\r\n      gravity: 0.02 + Math.random() * 0.03, // Acceleration downward (parabolic effect)\r\n      image: leafImages[Math.floor(Math.random() * leafImages.length)],\r\n      rotationSpeed: (Math.random() - 0.5) * 2 // Rotation speed\r\n    };\r\n    return leaf;\r\n  };\r\n\r\n  // Ensure component is mounted on client side\r\n  useEffect(() => {\r\n    setMounted(true);\r\n  }, []);\r\n\r\n  // Spawn new leaves\r\n  useEffect(() => {\r\n    if (!enabled || !mounted) return;\r\n\r\n    const spawnInterval = setInterval(() => {\r\n      setLeaves(currentLeaves => {\r\n        if (currentLeaves.length < leafCount) {\r\n          const newLeaf = createLeaf();\r\n          return [...currentLeaves, newLeaf];\r\n        }\r\n        return currentLeaves;\r\n      });\r\n    }, spawnRate);\r\n\r\n    return () => clearInterval(spawnInterval);\r\n  }, [enabled, mounted, leafCount, spawnRate]);\r\n\r\n  // Animate leaves\r\n  useEffect(() => {\r\n    if (!enabled || !mounted) return;\r\n\r\n    const animationInterval = setInterval(() => {\r\n      setLeaves(currentLeaves => {\r\n        return currentLeaves\r\n          .map(leaf => ({\r\n            ...leaf,\r\n            y: leaf.y + leaf.speed,\r\n            x: leaf.x + leaf.horizontalSpeed,\r\n            speed: leaf.speed + leaf.gravity,\r\n            rotation: leaf.rotation + leaf.rotationSpeed\r\n          }))\r\n          .filter(leaf => {\r\n            const screenHeight = typeof window !== 'undefined' ? window.innerHeight : 1080;\r\n            return leaf.y < screenHeight + 100;\r\n          });\r\n      });\r\n    }, 16); // ~60fps\r\n\r\n    return () => clearInterval(animationInterval);\r\n  }, [enabled, mounted]);\r\n\r\n  // Clean up when disabled\r\n  useEffect(() => {\r\n    if (!enabled) {\r\n      setLeaves([]);\r\n    }\r\n  }, [enabled]);\r\n\r\n  if (!enabled || !mounted) return null;\r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        position: 'fixed',\r\n        top: 0,\r\n        left: 0,\r\n        width: '100vw',\r\n        height: '100vh',\r\n        pointerEvents: 'none',\r\n        zIndex: 100, // High z-index to ensure visibility for debugging\r\n        overflow: 'hidden'\r\n      }}\r\n    >\r\n      {leaves.map(leaf => (\r\n        <img\r\n          key={leaf.id}\r\n          src={leaf.image}\r\n          alt=\"Falling leaf\"\r\n          onError={(e) => console.error('Failed to load leaf image:', leaf.image)}\r\n          onLoad={() => console.log('Loaded leaf image:', leaf.image)}\r\n          style={{\r\n            position: 'absolute',\r\n            left: `${leaf.x}px`,\r\n            top: `${leaf.y}px`,\r\n            transform: `rotate(${leaf.rotation}deg) scale(${leaf.scale})`,\r\n            width: '60px',\r\n            height: 'auto',\r\n            opacity: 0.8,\r\n            transition: 'none',\r\n            // border: '2px solid red' // Debug border (removed)\r\n          }}\r\n        />\r\n      ))}\r\n      {/* Debug info (hidden) */}\r\n      {/* <div style={{\r\n        position: 'absolute',\r\n        top: '10px',\r\n        left: '10px',\r\n        background: 'rgba(0,0,0,0.8)',\r\n        color: 'white',\r\n        padding: '10px',\r\n        fontSize: '14px',\r\n        borderRadius: '4px'\r\n      }}>\r\n        Leaves count: {leaves.length}\r\n      </div> */}\r\n    </div>\r\n  );\r\n}"]}